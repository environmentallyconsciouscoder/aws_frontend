{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/contexts/daily-sales-vs-waste-context.js\";\nimport React, { createContext, useEffect, useState } from 'react';\nimport { getMenuInput, getTopCausesOfWaste } from \"../api\";\nimport { getWeekOfTheYear } from \"./../utilities.js\";\nexport const DailySalesVsWasteContext = createContext();\n\nconst DailySalesVsWasteInputsProvider = props => {\n  const [dailyMenuInputs, setDailyMenuInputs] = useState([]);\n  const [siteName, setSiteName] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [dataFromDB, setData] = useState([]);\n  const [chartData, setChartData] = useState([]);\n  const [allFormatedData, setAllFormatedData] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [allMenuItems, setAllMenuItems] = useState([]);\n  const [firstDayOfTheWeek, setFirstDayOfTheWeek] = useState(1);\n  useEffect(() => {\n    // console.log(\"daily-sales-vs-waste-context updateGraph\", props.updateGraph)\n    // console.log(\"props.siteName\",props.siteName)\n    // console.log(\"props.companyID\",props.companyId)\n    // console.log(\"props.companyName\",props.companyName)\n    if (props.companyId && props.companyName && props.siteName) {\n      const d = new Date();\n      const n = d.getDay();\n      let indexNumber = n === 0 ? 6 : n - 1;\n      getMenuInputData(props.companyId, props.companyName, props.siteName, indexNumber);\n      getTopCausesOfWaste(props.companyId, props.companyName, props.siteName).then(data => {\n        setData(data.newMenuWaste);\n        console.log(\"data.newMenuWaste)\", data.newMenuWaste);\n        filterDataForChart(data.newMenuWaste);\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props.siteName, props.companyId, props.companyName, props.updateGraph]);\n\n  const filterDataForChart = dataFromDB => {\n    // console.log(\"dataFromDB\",dataFromDB)\n    const noEmptyValues = dataFromDB.map(item => {\n      const result = item.menuItems.filter(val => {\n        return val.itemName !== \"\";\n      }); // console.log(\"result\",result)\n\n      return result;\n    });\n    console.log(\"noEmptyValues\", noEmptyValues);\n    const removeEmptyArray = noEmptyValues.filter(val => {\n      // console.log(\"val\",val.length)\n      return val.length !== 0;\n    });\n    console.log(\"removeEmptyArray\", removeEmptyArray);\n    let putAlllabelsInArray = [];\n    removeEmptyArray.map(item => {\n      item.map(data => {\n        putAlllabelsInArray.push(data.itemName.toLowerCase());\n        return \"\";\n      });\n      return \"\";\n    }); // console.log(\"putAlllabelsInArray\",putAlllabelsInArray)\n\n    const uniqueArray = removeArrayDuplicates(putAlllabelsInArray); // console.log(\"uniqueArray\",uniqueArray)\n\n    let dataSet = [];\n    const colors = [\"rgb(133, 165, 101)\", \"rgb(15, 128, 140)\", \"rgb(140, 112, 140)\", \"rgb(47, 67, 30)\", \"rgb(56, 166, 126)\", \"rgb(106, 217, 123)\", \"rgb(188, 242, 107)\", \"rgb(47, 64, 30)\", \"rgb(68, 89, 46)\", \"rgb(178, 191, 80)\", \"rgb(133, 165, 101)\", \"rgb(15, 128, 140)\", \"rgb(140, 112, 140)\", \"rgb(47, 67, 30)\", \"rgb(56, 166, 126)\", \"rgb(106, 217, 123)\", \"rgb(188, 242, 107)\", \"rgb(47, 64, 30)\", \"rgb(68, 89, 46)\", \"rgb(178, 191, 80)\", \"rgb(133, 165, 101)\", \"rgb(15, 128, 140)\", \"rgb(140, 112, 140)\", \"rgb(47, 67, 30)\", \"rgb(56, 166, 126)\", \"rgb(106, 217, 123)\", \"rgb(188, 242, 107)\", \"rgb(47, 64, 30)\", \"rgb(68, 89, 46)\", \"rgb(178, 191, 80)\", \"rgb(133, 165, 101)\", \"rgb(15, 128, 140)\", \"rgb(140, 112, 140)\", \"rgb(47, 67, 30)\", \"rgb(56, 166, 126)\", \"rgb(106, 217, 123)\", \"rgb(188, 242, 107)\", \"rgb(47, 64, 30)\", \"rgb(68, 89, 46)\", \"rgb(178, 191, 80)\", \"rgb(133, 165, 101)\", \"rgb(15, 128, 140)\", \"rgb(140, 112, 140)\", \"rgb(47, 67, 30)\", \"rgb(56, 166, 126)\", \"rgb(106, 217, 123)\", \"rgb(188, 242, 107)\", \"rgb(47, 64, 30)\", \"rgb(68, 89, 46)\", \"rgb(178, 191, 80)\", \"rgb(133, 165, 101)\", \"rgb(15, 128, 140)\", \"rgb(140, 112, 140)\", \"rgb(47, 67, 30)\", \"rgb(56, 166, 126)\", \"rgb(106, 217, 123)\", \"rgb(188, 242, 107)\", \"rgb(47, 64, 30)\", \"rgb(68, 89, 46)\", \"rgb(178, 191, 80)\", \"rgb(133, 165, 101)\", \"rgb(15, 128, 140)\", \"rgb(140, 112, 140)\", \"rgb(47, 67, 30)\", \"rgb(56, 166, 126)\", \"rgb(106, 217, 123)\", \"rgb(188, 242, 107)\", \"rgb(47, 64, 30)\", \"rgb(68, 89, 46)\", \"rgb(178, 191, 80)\"];\n    uniqueArray.map((label, i) => {\n      const dataFormatForChart = {\n        label: label,\n        data: [0, 0, 0, 0, 0, 0, 0],\n        fill: false,\n        backgroundColor: colors[i],\n        minBarLength: 0.3,\n        barPercentage: 0.7,\n        categoryPercentage: 0.7\n      };\n      dataSet.push(dataFormatForChart);\n      return \"\";\n    });\n    console.log(\"dataFromDB dataSet\", dataSet); // console.log(\"dataFromDB\",dataFromDB)\n\n    dataFromDB.map((data, i) => {\n      // console.log(\"menuItems\",data.menuItems)\n      data.menuItems.map(item => {\n        // console.log(\"item.itemName\",item.itemName)\n        dataSet.map(val => {\n          // console.log(\"val.lable === item.itemName.toLowerCase()\",val.label === item.itemName.toLowerCase())\n          if (val.label === item.itemName.toLowerCase()) {\n            // console.log(\"true\")\n            // console.log(\"date\",i)\n            // console.log(\"totalWastePerItem\",item.totalWastePerItem)\n            val.data[i] = item.totalWastePerItem;\n            return \"\";\n          } else {\n            // console.log(\"false\")\n            return \"\";\n          }\n        });\n        return \"\";\n      });\n      return \"\";\n    });\n    console.log(\"dataFromDB\", dataFromDB);\n    console.log(\"after dataSet\", dataSet);\n    var d = new Date();\n    var n = d.getDay();\n    let day;\n\n    if (n === 0) {\n      day = 6;\n    } else {\n      day = n - 1;\n    }\n\n    let result = dataSet.filter(item => {\n      return item.data[day] > 0;\n    });\n    setIndex(day);\n    console.log(\"result\", result);\n    setChartData(result); // setChartData(dataSet)\n\n    setAllFormatedData(dataSet);\n  };\n\n  const removeArrayDuplicates = data => {\n    // https://medium.com/dailyjs/how-to-remove-array-duplicates-in-es6-5daa8789641c\n    let array = data; // console.log(\"array\",array)\n\n    const uniqueSet = new Set(array);\n    const backToArray = [...uniqueSet]; // console.log(\"backToArray\",backToArray)\n\n    return backToArray;\n  };\n\n  const updateDailySalesVsWasteInput = (companyId, companyName, siteName, indexNumber) => {\n    getMenuInputData(companyId, companyName, siteName, indexNumber);\n  };\n\n  const getMenuInputData = (companyId, companyName, siteName, index) => {\n    getMenuInput(companyId, companyName, siteName).then(data => {\n      console.log(\"index\", index);\n      let indexNumber = index;\n      setSiteName(siteName);\n      setId(companyId);\n      setCompanyName(companyName); // const d = new Date();\n      // const n = d.getDay()\n      // let indexNumber = n === 0 ? 6: n - 1;\n\n      const weekOfTheYear = getWeekOfTheYear(); // console.log(\"weekOfTheYear\",weekOfTheYear)\n      // console.log(\"n\",n)\n\n      data.map(item => {\n        // console.log(\"item.menuWaste\",item.menuWaste)\n        const weekOfTheYearData = item.menuWaste.filter(val => {\n          // console.log(\"weekOfTheYear\",weekOfTheYear)\n          // console.log(\"val.weekOfYear\",val.weekOfYear)\n          return val.weekOfYear === weekOfTheYear.toString();\n        }); // console.log(\"weekOfTheYearData\",weekOfTheYearData)\n\n        const getFirstDayOfTheWeek = weekOfTheYearData.map(data => {\n          return data.Date;\n        });\n        setFirstDayOfTheWeek(getFirstDayOfTheWeek[0]); // console.log(\"getFirstDayOfTheWeek\",getFirstDayOfTheWeek[0])\n\n        setAllMenuItems(weekOfTheYearData); // console.log(\"n\",n)\n        // console.log(\"indexNumber\",indexNumber)\n\n        const dailyMenuInputsData = weekOfTheYearData.map(data => {\n          return data.menuWasteWeek[indexNumber];\n        }); // console.log(\"dailyMenuInputsData\",dailyMenuInputsData)\n\n        const dailyMenuInputsDataAfterFiltered = filterOutEmptyObjects(dailyMenuInputsData[0]);\n        setDailyMenuInputs(dailyMenuInputsDataAfterFiltered);\n        return \"\";\n      });\n    }).catch(err => {\n      console.log(\"err\", err);\n    });\n  };\n\n  const filterOutEmptyObjects = data => {\n    // console.log(\"dailyMenuInputsData\",dailyMenuInputsData)\n    // const filteredArray = dailyMenuInputsData.map((data, i) => {\n    // console.log(\"data\",data)\n    const results = data.filter((item, i) => {\n      // console.log(\"item\",item)\n      // console.log(\"i\",i)\n      // console.log(\"  item.menuItem !==  && item.menuItem ==! menu item \",item.menuItem !== \"\" && item.menuItem !== \"menu item\")\n      return item.menuItem !== \"\" && item.menuItem !== \"menu item\";\n    }); // console.log(\"results\",results)\n\n    return results; // })\n    // return filteredArray;\n  };\n\n  const filterDataByDate = index => {\n    // console.log(\"index\",index);\n    // console.log(\"allFormatedData\",allFormatedData);\n    let result = allFormatedData.filter(item => {\n      return item.data[index] > 0;\n    });\n    setChartData(result);\n    setIndex(index); // console.log(\"result\",result)\n  };\n\n  const filterMenuItems = selectedPage => {\n    // console.log(\"selectedPage\",selectedPage);\n    const menuItemsForSelectedPage = allMenuItems.map(data => {\n      return data.menuWasteWeek[selectedPage];\n    }); // console.log(\"menuItemsForSelectedPage\",menuItemsForSelectedPage);\n\n    const dailyMenuInputsDataAfterFiltered = filterOutEmptyObjects(menuItemsForSelectedPage[0]); // console.log(\"dailyMenuInputsDataAfterFiltered\",dailyMenuInputsDataAfterFiltered);\n\n    setDailyMenuInputs(dailyMenuInputsDataAfterFiltered);\n    return \"\";\n  };\n\n  return /*#__PURE__*/React.createElement(DailySalesVsWasteContext.Provider, {\n    value: {\n      dailyMenuInputs,\n      siteName,\n      companyName,\n      id,\n      filterOutEmptyObjects,\n      chartData,\n      dataFromDB,\n      filterDataByDate,\n      index,\n      filterMenuItems,\n      firstDayOfTheWeek,\n      updateDailySalesVsWasteInput\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default DailySalesVsWasteInputsProvider;","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/contexts/daily-sales-vs-waste-context.js"],"names":["React","createContext","useEffect","useState","getMenuInput","getTopCausesOfWaste","getWeekOfTheYear","DailySalesVsWasteContext","DailySalesVsWasteInputsProvider","props","dailyMenuInputs","setDailyMenuInputs","siteName","setSiteName","id","setId","companyName","setCompanyName","dataFromDB","setData","chartData","setChartData","allFormatedData","setAllFormatedData","index","setIndex","allMenuItems","setAllMenuItems","firstDayOfTheWeek","setFirstDayOfTheWeek","companyId","d","Date","n","getDay","indexNumber","getMenuInputData","then","data","newMenuWaste","console","log","filterDataForChart","updateGraph","noEmptyValues","map","item","result","menuItems","filter","val","itemName","removeEmptyArray","length","putAlllabelsInArray","push","toLowerCase","uniqueArray","removeArrayDuplicates","dataSet","colors","label","i","dataFormatForChart","fill","backgroundColor","minBarLength","barPercentage","categoryPercentage","totalWastePerItem","day","array","uniqueSet","Set","backToArray","updateDailySalesVsWasteInput","weekOfTheYear","weekOfTheYearData","menuWaste","weekOfYear","toString","getFirstDayOfTheWeek","dailyMenuInputsData","menuWasteWeek","dailyMenuInputsDataAfterFiltered","filterOutEmptyObjects","catch","err","results","menuItem","filterDataByDate","filterMenuItems","selectedPage","menuItemsForSelectedPage","children"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\nimport { getMenuInput, getTopCausesOfWaste } from \"../api\";\nimport { getWeekOfTheYear } from \"./../utilities.js\"\n\nexport const DailySalesVsWasteContext = createContext()\n\nconst DailySalesVsWasteInputsProvider = props => {\n\n  const [dailyMenuInputs, setDailyMenuInputs] = useState([]);\n\n  const [siteName, setSiteName] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n\n  const [dataFromDB, setData] = useState([]);\n  const [chartData, setChartData] = useState([]);\n\n  const [allFormatedData, setAllFormatedData] = useState([])\n\n  const [index, setIndex] = useState(0);\n\n  const [allMenuItems, setAllMenuItems] = useState([]);\n\n  const [firstDayOfTheWeek, setFirstDayOfTheWeek] = useState(1);\n\n  useEffect(() => {\n\n    // console.log(\"daily-sales-vs-waste-context updateGraph\", props.updateGraph)\n\n    // console.log(\"props.siteName\",props.siteName)\n    // console.log(\"props.companyID\",props.companyId)\n    // console.log(\"props.companyName\",props.companyName)\n\n    if (props.companyId && props.companyName && props.siteName) {\n\n        const d = new Date();\n        const n = d.getDay()\n        let indexNumber = n === 0 ? 6: n - 1;\n\n        getMenuInputData(props.companyId, props.companyName, props.siteName, indexNumber)\n\n        getTopCausesOfWaste(props.companyId, props.companyName, props.siteName).then((data) => {\n          setData(data.newMenuWaste)\n          console.log(\"data.newMenuWaste)\",data.newMenuWaste)\n          filterDataForChart(data.newMenuWaste)\n        });\n\n    }\n   // eslint-disable-next-line react-hooks/exhaustive-deps\n}, [ props.siteName, props.companyId, props.companyName, props.updateGraph])\n\n\nconst filterDataForChart = (dataFromDB) => {\n  // console.log(\"dataFromDB\",dataFromDB)\n\n  const noEmptyValues = dataFromDB.map((item) => {\n    const result = item.menuItems.filter((val) => {\n      return val.itemName !== \"\"\n    })\n    // console.log(\"result\",result)\n    return result;\n  })\n\n  console.log(\"noEmptyValues\",noEmptyValues)\n\n  const removeEmptyArray = noEmptyValues.filter((val) => {\n    // console.log(\"val\",val.length)\n    return val.length !== 0;\n  });\n\n  console.log(\"removeEmptyArray\",removeEmptyArray)\n\n\n  let putAlllabelsInArray = []\n\n  removeEmptyArray.map((item) => {\n    item.map((data) => {\n      putAlllabelsInArray.push(data.itemName.toLowerCase())\n      return \"\";\n    })\n    return \"\";\n  })\n\n  // console.log(\"putAlllabelsInArray\",putAlllabelsInArray)\n\n  const uniqueArray = removeArrayDuplicates(putAlllabelsInArray)\n  // console.log(\"uniqueArray\",uniqueArray)\n\n  let dataSet = []\n\n  const colors = [\n  \"rgb(133, 165, 101)\",\n  \"rgb(15, 128, 140)\",\n  \"rgb(140, 112, 140)\",\n  \"rgb(47, 67, 30)\",\n  \"rgb(56, 166, 126)\",\n  \"rgb(106, 217, 123)\",\n  \"rgb(188, 242, 107)\",\n  \"rgb(47, 64, 30)\",\n  \"rgb(68, 89, 46)\",\n  \"rgb(178, 191, 80)\",\n\n  \"rgb(133, 165, 101)\",\n  \"rgb(15, 128, 140)\",\n  \"rgb(140, 112, 140)\",\n  \"rgb(47, 67, 30)\",\n  \"rgb(56, 166, 126)\",\n  \"rgb(106, 217, 123)\",\n  \"rgb(188, 242, 107)\",\n  \"rgb(47, 64, 30)\",\n  \"rgb(68, 89, 46)\",\n  \"rgb(178, 191, 80)\",\n\n  \"rgb(133, 165, 101)\",\n  \"rgb(15, 128, 140)\",\n  \"rgb(140, 112, 140)\",\n  \"rgb(47, 67, 30)\",\n  \"rgb(56, 166, 126)\",\n  \"rgb(106, 217, 123)\",\n  \"rgb(188, 242, 107)\",\n  \"rgb(47, 64, 30)\",\n  \"rgb(68, 89, 46)\",\n  \"rgb(178, 191, 80)\",\n\n  \"rgb(133, 165, 101)\",\n  \"rgb(15, 128, 140)\",\n  \"rgb(140, 112, 140)\",\n  \"rgb(47, 67, 30)\",\n  \"rgb(56, 166, 126)\",\n  \"rgb(106, 217, 123)\",\n  \"rgb(188, 242, 107)\",\n  \"rgb(47, 64, 30)\",\n  \"rgb(68, 89, 46)\",\n  \"rgb(178, 191, 80)\",\n\n  \"rgb(133, 165, 101)\",\n  \"rgb(15, 128, 140)\",\n  \"rgb(140, 112, 140)\",\n  \"rgb(47, 67, 30)\",\n  \"rgb(56, 166, 126)\",\n  \"rgb(106, 217, 123)\",\n  \"rgb(188, 242, 107)\",\n  \"rgb(47, 64, 30)\",\n  \"rgb(68, 89, 46)\",\n  \"rgb(178, 191, 80)\",\n\n  \"rgb(133, 165, 101)\",\n  \"rgb(15, 128, 140)\",\n  \"rgb(140, 112, 140)\",\n  \"rgb(47, 67, 30)\",\n  \"rgb(56, 166, 126)\",\n  \"rgb(106, 217, 123)\",\n  \"rgb(188, 242, 107)\",\n  \"rgb(47, 64, 30)\",\n  \"rgb(68, 89, 46)\",\n  \"rgb(178, 191, 80)\",\n\n  \"rgb(133, 165, 101)\",\n  \"rgb(15, 128, 140)\",\n  \"rgb(140, 112, 140)\",\n  \"rgb(47, 67, 30)\",\n  \"rgb(56, 166, 126)\",\n  \"rgb(106, 217, 123)\",\n  \"rgb(188, 242, 107)\",\n  \"rgb(47, 64, 30)\",\n  \"rgb(68, 89, 46)\",\n  \"rgb(178, 191, 80)\",\n  ]\n\n  uniqueArray.map((label, i) => {\n    const dataFormatForChart = {\n      label: label,\n      data: [0, 0, 0, 0, 0, 0, 0],\n      fill: false,\n      backgroundColor: colors[i],\n      minBarLength: 0.3,\n      barPercentage: 0.7,\n      categoryPercentage: 0.7,\n    };\n    dataSet.push(dataFormatForChart)\n    return \"\";\n  })\n\n  console.log(\"dataFromDB dataSet\",dataSet)\n  // console.log(\"dataFromDB\",dataFromDB)\n\n  dataFromDB.map((data, i) => {\n    // console.log(\"menuItems\",data.menuItems)\n    data.menuItems.map((item) => {\n      // console.log(\"item.itemName\",item.itemName)\n      dataSet.map((val) => {\n\n        // console.log(\"val.lable === item.itemName.toLowerCase()\",val.label === item.itemName.toLowerCase())\n\n        if (val.label === item.itemName.toLowerCase()) {\n\n          // console.log(\"true\")\n          // console.log(\"date\",i)\n          // console.log(\"totalWastePerItem\",item.totalWastePerItem)\n          val.data[i] = item.totalWastePerItem\n          return \"\";\n        } else {\n          // console.log(\"false\")\n          return \"\";\n        }\n\n      })\n      return \"\";\n    })\n    return \"\";\n  })\n\n  console.log(\"dataFromDB\",dataFromDB)\n\n  console.log(\"after dataSet\",dataSet)\n\n  var d = new Date();\n  var n = d.getDay()\n  let day;\n  if (n=== 0) {\n    day = 6;\n  } else {\n    day = n - 1;\n  }\n\n  let result = dataSet.filter((item) => {\n    return item.data[day] > 0;\n  });\n\n  setIndex(day)\n  console.log(\"result\",result);\n  setChartData(result)\n  // setChartData(dataSet)\n  setAllFormatedData(dataSet)\n}\n\nconst removeArrayDuplicates = (data) => {\n  // https://medium.com/dailyjs/how-to-remove-array-duplicates-in-es6-5daa8789641c\n  let array = data\n  // console.log(\"array\",array)\n  const uniqueSet = new Set(array);\n  const backToArray = [...uniqueSet]\n  // console.log(\"backToArray\",backToArray)\n  return backToArray;\n}\n\n\nconst updateDailySalesVsWasteInput = (companyId, companyName, siteName, indexNumber) => {\n  getMenuInputData(companyId, companyName, siteName, indexNumber);\n};\n\nconst getMenuInputData = (companyId, companyName, siteName, index) => {\n    getMenuInput(companyId, companyName, siteName).then((data) => {\n\n        console.log(\"index\",index);\n\n        let indexNumber = index;\n\n        setSiteName(siteName);\n        setId(companyId);\n        setCompanyName(companyName);\n\n        // const d = new Date();\n        // const n = d.getDay()\n        // let indexNumber = n === 0 ? 6: n - 1;\n\n        const weekOfTheYear = getWeekOfTheYear()\n        // console.log(\"weekOfTheYear\",weekOfTheYear)\n        // console.log(\"n\",n)\n\n        data.map((item) => {\n\n          // console.log(\"item.menuWaste\",item.menuWaste)\n\n            const weekOfTheYearData = item.menuWaste.filter((val) => {\n              // console.log(\"weekOfTheYear\",weekOfTheYear)\n              // console.log(\"val.weekOfYear\",val.weekOfYear)\n\n                return val.weekOfYear === (weekOfTheYear).toString()\n            })\n\n            // console.log(\"weekOfTheYearData\",weekOfTheYearData)\n\n            const getFirstDayOfTheWeek = weekOfTheYearData.map((data) => {\n              return data.Date;\n            })\n\n            setFirstDayOfTheWeek(getFirstDayOfTheWeek[0])\n\n            // console.log(\"getFirstDayOfTheWeek\",getFirstDayOfTheWeek[0])\n\n            setAllMenuItems(weekOfTheYearData);\n            // console.log(\"n\",n)\n            // console.log(\"indexNumber\",indexNumber)\n\n            const dailyMenuInputsData = weekOfTheYearData.map((data) => {\n                return data.menuWasteWeek[indexNumber]\n            })\n\n            // console.log(\"dailyMenuInputsData\",dailyMenuInputsData)\n            const dailyMenuInputsDataAfterFiltered = filterOutEmptyObjects(dailyMenuInputsData[0])\n\n            setDailyMenuInputs(dailyMenuInputsDataAfterFiltered)\n            return \"\"\n        })\n    }).catch((err) =>{\n        console.log(\"err\",err)\n    })\n}\n\nconst filterOutEmptyObjects = (data) => {\n  // console.log(\"dailyMenuInputsData\",dailyMenuInputsData)\n\n  // const filteredArray = dailyMenuInputsData.map((data, i) => {\n    // console.log(\"data\",data)\n\n    const results = data.filter((item, i) => {\n      // console.log(\"item\",item)\n      // console.log(\"i\",i)\n      // console.log(\"  item.menuItem !==  && item.menuItem ==! menu item \",item.menuItem !== \"\" && item.menuItem !== \"menu item\")\n\n      return item.menuItem !== \"\" && item.menuItem !== \"menu item\";\n    })\n    // console.log(\"results\",results)\n    return results;\n  // })\n  // return filteredArray;\n}\n\nconst filterDataByDate = (index) => {\n  // console.log(\"index\",index);\n  // console.log(\"allFormatedData\",allFormatedData);\n\n  let result = allFormatedData.filter((item) => {\n      return item.data[index] > 0;\n  });\n  setChartData(result)\n  setIndex(index)\n  // console.log(\"result\",result)\n\n}\n\nconst filterMenuItems = (selectedPage) => {\n  // console.log(\"selectedPage\",selectedPage);\n\n  const menuItemsForSelectedPage = allMenuItems.map((data) => {\n    return data.menuWasteWeek[selectedPage]\n  })\n\n  // console.log(\"menuItemsForSelectedPage\",menuItemsForSelectedPage);\n\n  const dailyMenuInputsDataAfterFiltered = filterOutEmptyObjects(menuItemsForSelectedPage[0])\n\n  // console.log(\"dailyMenuInputsDataAfterFiltered\",dailyMenuInputsDataAfterFiltered);\n\n  setDailyMenuInputs(dailyMenuInputsDataAfterFiltered)\n  return \"\"\n\n};\n\n  return (\n    <DailySalesVsWasteContext.Provider\n      value={{\n        dailyMenuInputs,\n        siteName,\n        companyName,\n        id,\n        filterOutEmptyObjects,\n        chartData,\n        dataFromDB,\n        filterDataByDate,\n        index,\n        filterMenuItems,\n        firstDayOfTheWeek,\n        updateDailySalesVsWasteInput\n      }}\n    >\n      {props.children}\n    </DailySalesVsWasteContext.Provider>\n  )\n}\n\nexport default DailySalesVsWasteInputsProvider"]},"metadata":{},"sourceType":"module"}