{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/contexts/id-customer-waste-context.js\";\nimport React, { createContext, useEffect, useState } from 'react';\nimport { getIdCustomerWaste } from \"../api\";\nexport const IdCustomerWasteContext = createContext();\n\nconst IdCustomerWasteProvider = props => {\n  const [xaxis, setXaxis] = useState([]);\n  const [yaxis, setYaxis] = useState([]);\n  const [eventName, setEventName] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  useEffect(() => {\n    if (props.siteName, props.companyName, props.companyId) {\n      callIdCustomerWasteAPI(props.companyId, props.companyName, props.siteName, 0);\n    }\n\n    ;\n  }, [props.siteName, props.companyName, props.companyId]);\n\n  const callIdCustomerWasteAPI = (companyNumber, companyName, siteName, selected) => {\n    getIdCustomerWaste(companyNumber, companyName, siteName, selected).then(data => {\n      // console.log(\"callIdCustomerWasteAPI\",data);\n      setXaxis(data.xaxis);\n      setYaxis(data.yaxis);\n      setEventName(data.eventName);\n      setDate(data.date);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(IdCustomerWasteContext.Provider, {\n    value: {\n      xaxis,\n      yaxis,\n      eventName,\n      date\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default IdCustomerWasteProvider;","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/contexts/id-customer-waste-context.js"],"names":["React","createContext","useEffect","useState","getIdCustomerWaste","IdCustomerWasteContext","IdCustomerWasteProvider","props","xaxis","setXaxis","yaxis","setYaxis","eventName","setEventName","date","setDate","siteName","companyName","companyId","callIdCustomerWasteAPI","companyNumber","selected","then","data","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAAyD,OAAzD;AACA,SAASC,kBAAT,QAAmC,QAAnC;AAEA,OAAO,MAAMC,sBAAsB,GAAGJ,aAAa,EAA5C;;AAGP,MAAMK,uBAAuB,GAAGC,KAAK,IAAI;AAErC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEFD,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAIK,KAAK,CAACS,QAAN,EAAgBT,KAAK,CAACU,WAAtB,EAAmCV,KAAK,CAACW,SAA7C,EAAwD;AACpDC,MAAAA,sBAAsB,CAACZ,KAAK,CAACW,SAAP,EAAkBX,KAAK,CAACU,WAAxB,EAAqCV,KAAK,CAACS,QAA3C,EAAqD,CAArD,CAAtB;AACH;;AAAA;AACF,GALQ,EAKN,CAAET,KAAK,CAACS,QAAR,EAAkBT,KAAK,CAACU,WAAxB,EAAqCV,KAAK,CAACW,SAA3C,CALM,CAAT;;AAOA,QAAMC,sBAAsB,GAAI,CAACC,aAAD,EAAgBH,WAAhB,EAA6BD,QAA7B,EAAuCK,QAAvC,KAAoD;AAClFjB,IAAAA,kBAAkB,CAACgB,aAAD,EAAgBH,WAAhB,EAA6BD,QAA7B,EAAuCK,QAAvC,CAAlB,CAAmEC,IAAnE,CAAyEC,IAAD,IAAU;AAC9E;AACAd,MAAAA,QAAQ,CAACc,IAAI,CAACf,KAAN,CAAR;AACAG,MAAAA,QAAQ,CAACY,IAAI,CAACb,KAAN,CAAR;AACAG,MAAAA,YAAY,CAACU,IAAI,CAACX,SAAN,CAAZ;AACAG,MAAAA,OAAO,CAACQ,IAAI,CAACT,IAAN,CAAP;AACH,KAND;AAOD,GARD;;AAUA,sBACE,oBAAC,sBAAD,CAAwB,QAAxB;AACE,IAAA,KAAK,EAAE;AACLN,MAAAA,KADK;AAELE,MAAAA,KAFK;AAGLE,MAAAA,SAHK;AAILE,MAAAA;AAJK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGP,KAAK,CAACiB,QART,CADF;AAYD,CApCD;;AAsCA,eAAelB,uBAAf","sourcesContent":["import React, { createContext, useEffect, useState} from 'react'\nimport { getIdCustomerWaste } from \"../api\";\n\nexport const IdCustomerWasteContext = createContext()\n\n\nconst IdCustomerWasteProvider = props => {\n\n    const [xaxis, setXaxis] = useState([])\n    const [yaxis, setYaxis] = useState([])\n    const [eventName, setEventName] = useState(\"\")\n    const [date, setDate] = useState(\"\")\n\n  useEffect(() => {\n\n    if (props.siteName, props.companyName, props.companyId) {\n        callIdCustomerWasteAPI(props.companyId, props.companyName, props.siteName, 0)\n    };\n  }, [ props.siteName, props.companyName, props.companyId]);\n\n  const callIdCustomerWasteAPI = ((companyNumber, companyName, siteName, selected) => {\n    getIdCustomerWaste(companyNumber, companyName, siteName, selected).then((data) => {\n        // console.log(\"callIdCustomerWasteAPI\",data);\n        setXaxis(data.xaxis)\n        setYaxis(data.yaxis)\n        setEventName(data.eventName)\n        setDate(data.date)\n    });\n  });\n\n  return (\n    <IdCustomerWasteContext.Provider\n      value={{\n        xaxis,\n        yaxis,\n        eventName,\n        date\n      }}\n    >\n      {props.children}\n    </IdCustomerWasteContext.Provider>\n  )\n}\n\nexport default IdCustomerWasteProvider"]},"metadata":{},"sourceType":"module"}