{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/live-feeds/public-live-feed.js\";\nimport React, { useRef, useState, useContext } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { useHistory } from \"react-router-dom\";\nimport { updateLiveFeedContent } from \"../../../../api.js\";\nimport { LiveFeedContext } from \"../../../../contexts/live-feed-context\";\nimport \"./public-live-feed.css\";\nimport { s3Upload } from \"./file-uploader\";\nimport SurveyGraph from \"./live-feed-graph\";\nexport default function PublicLiveFeed() {\n  const file = useRef(null);\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [content, setContent] = useState(\"\");\n  const [surveyOneContent, setSurveyOneContent] = useState(\"\");\n  const [surveyTwoContent, setSurveyTwoContent] = useState(\"\");\n  const [surveyThreeContent, setSurveyThreeContent] = useState(\"\");\n  const [surveyFourContent, setSurveyFourContent] = useState(\"\");\n  const {\n    siteName,\n    companyName,\n    companyId,\n    introduction,\n    surveyOne,\n    surveyTwo,\n    surveyThree,\n    surveyFour\n  } = useContext(LiveFeedContext);\n\n  function validateForm() {\n    return content.length > 0;\n  }\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    if (file.current && file.current.size > 5000000) {\n      alert(`Please pick a file smaller than ${5000000 / 1000000} MB.`);\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      // console.log(\"file.current\",file.current);\n      // const attachment = file.current ? await s3Upload(file.current) : null;\n      // console.log(\"attachment\",attachment);\n      updateLiveFeedContent({\n        content: content,\n        surveyOneContent: surveyOneContent,\n        surveyTwoContent: surveyTwoContent,\n        surveyThreeContent: surveyThreeContent,\n        surveyFourContent: surveyFourContent\n      }, siteName, companyName, companyId);\n      history.push(\"/dashboard\"); // const test = \"1638021221938-fxplus_logo.jpeg\"\n      // const note = Storage.vault.get(test);\n      // console.log(\"note\",note);\n      // await createNote({ content, attachment });\n      // history.push(\"/\");\n    } catch (e) {\n      // onError(e);\n      setIsLoading(false);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contentManagement\",\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      // paddingTop: \"15rem\"\n      padding: \"15rem 1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100%\",\n      width: \"50%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100%\",\n      width: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\" // backgroundColor: \"red\"\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    className: \"contentManagement_form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Write your opening lines for the live feed below:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    // value={content}\n    value: introduction,\n    as: \"textarea\",\n    onChange: e => setContent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Survey question 1\"), /*#__PURE__*/React.createElement(Form.Control, {\n    value: surveyOneContent,\n    as: \"textarea\",\n    onChange: e => setSurveyOneContent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Survey question 2\"), /*#__PURE__*/React.createElement(Form.Control, {\n    value: surveyTwoContent,\n    as: \"textarea\",\n    onChange: e => setSurveyTwoContent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"Survey question 3\"), /*#__PURE__*/React.createElement(Form.Control, {\n    value: surveyThreeContent,\n    as: \"textarea\",\n    onChange: e => setSurveyThreeContent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Survey question 4\"), /*#__PURE__*/React.createElement(Form.Control, {\n    value: surveyFourContent,\n    as: \"textarea\",\n    onChange: e => setSurveyFourContent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Attachment (add company logo for live feed)\"), /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: handleFileChange,\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(SurveyGraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/live-feeds/public-live-feed.js"],"names":["React","useRef","useState","useContext","Form","useHistory","updateLiveFeedContent","LiveFeedContext","s3Upload","SurveyGraph","PublicLiveFeed","file","history","isLoading","setIsLoading","content","setContent","surveyOneContent","setSurveyOneContent","surveyTwoContent","setSurveyTwoContent","surveyThreeContent","setSurveyThreeContent","surveyFourContent","setSurveyFourContent","siteName","companyName","companyId","introduction","surveyOne","surveyTwo","surveyThree","surveyFour","validateForm","length","handleFileChange","event","current","target","files","handleSubmit","preventDefault","size","alert","push","e","width","height","padding","display","flexDirection","value"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useContext } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { useHistory } from \"react-router-dom\";\nimport { updateLiveFeedContent } from \"../../../../api.js\";\nimport { LiveFeedContext } from \"../../../../contexts/live-feed-context\";\n\nimport \"./public-live-feed.css\";\nimport { s3Upload } from \"./file-uploader\";\nimport SurveyGraph from \"./live-feed-graph\";\n\nexport default function PublicLiveFeed() {\n  const file = useRef(null);\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [content, setContent] = useState(\"\");\n  const [surveyOneContent, setSurveyOneContent] = useState(\"\");\n  const [surveyTwoContent, setSurveyTwoContent] = useState(\"\");\n  const [surveyThreeContent, setSurveyThreeContent] = useState(\"\");\n  const [surveyFourContent, setSurveyFourContent] = useState(\"\");\n\n  const {\n    siteName,\n    companyName,\n    companyId,\n\n    introduction,\n    surveyOne,\n    surveyTwo,\n    surveyThree,\n    surveyFour\n  } = useContext(LiveFeedContext);\n\n  function validateForm() {\n    return content.length > 0;\n  }\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    if (file.current && file.current.size > 5000000) {\n      alert(\n        `Please pick a file smaller than ${\n          5000000 / 1000000\n        } MB.`\n      );\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      // console.log(\"file.current\",file.current);\n      // const attachment = file.current ? await s3Upload(file.current) : null;\n      // console.log(\"attachment\",attachment);\n\n      updateLiveFeedContent({content: content,surveyOneContent:surveyOneContent, surveyTwoContent:surveyTwoContent,surveyThreeContent:surveyThreeContent,surveyFourContent:surveyFourContent},siteName, companyName, companyId)\n\n      history.push(\"/dashboard\");\n      // const test = \"1638021221938-fxplus_logo.jpeg\"\n      // const note = Storage.vault.get(test);\n      // console.log(\"note\",note);\n\n      // await createNote({ content, attachment });\n      // history.push(\"/\");\n    } catch (e) {\n      // onError(e);\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <div className=\"contentManagement\" style={{\n      width: \"100%\",\n      height: \"100%\",\n      // paddingTop: \"15rem\"\n      padding: \"15rem 1rem\"\n    }}>\n      <div style={{\n            display: \"flex\",\n            height: \"100%\",\n            width: \"50%\"\n      }}>\n        <div style={{\n          height: \"100%\",\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          // backgroundColor: \"red\"\n        }}>\n\n      <Form onSubmit={handleSubmit} className=\"contentManagement_form\">\n        <Form.Group controlId=\"content\">\n          <h2>Write your opening lines for the live feed below:</h2>\n          <Form.Control\n            // value={content}\n            value={introduction}\n\n            as=\"textarea\"\n            onChange={(e) => setContent(e.target.value)}\n          />\n          <h2>Survey question 1</h2>\n          <Form.Control\n            value={surveyOneContent}\n            as=\"textarea\"\n            onChange={(e) => setSurveyOneContent(e.target.value)}\n          />\n          <h2>Survey question 2</h2>\n          <Form.Control\n            value={surveyTwoContent}\n            as=\"textarea\"\n            onChange={(e) => setSurveyTwoContent(e.target.value)}\n          />\n          <h2>Survey question 3</h2>\n          <Form.Control\n            value={surveyThreeContent}\n            as=\"textarea\"\n            onChange={(e) => setSurveyThreeContent(e.target.value)}\n          />\n          <h2>Survey question 4</h2>\n          <Form.Control\n            value={surveyFourContent}\n            as=\"textarea\"\n            onChange={(e) => setSurveyFourContent(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"file\">\n          <Form.Label>Attachment (add company logo for live feed)</Form.Label>\n          <Form.Control onChange={handleFileChange} type=\"file\" />\n        </Form.Group>\n        <button>\n            <h3>Submit</h3>\n        </button>\n      </Form>\n\n        </div>\n          <SurveyGraph />\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}