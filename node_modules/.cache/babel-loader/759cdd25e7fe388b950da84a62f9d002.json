{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/auth/sign-up.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { faAsterisk } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useForm } from \"react-hook-form\";\nimport { Auth } from \"aws-amplify\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { addToGroup, updateUsersAttribute, createUserLoginTime, verifyEmail } from \"../../../../api\";\nimport useSpinner from \"../../libs/use-spinner\";\nimport { TableRow, Paper, TableHead, Table, TableContainer, TableCell, TableBody } from \"@material-ui/core\";\nexport default function Signup(props) {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [errorMessageFromAWS, setErrorMessageFromAWS] = useState(\"\");\n  const [stage, setStage] = useState(1);\n  const [loginEmailAddress, setLoginEmailAddress] = useState(\"\");\n  const [spinner, showSpinner, hideSpinner] = useSpinner();\n  const useStyles = makeStyles(theme => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    }\n  }));\n  const classes = useStyles();\n  const [userType, setUserType] = React.useState(\"user\");\n\n  const handleChange = event => {\n    setUserType(event.target.value);\n  };\n\n  useEffect(() => {\n    setLoginEmailAddress(props.userDetail.email); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.userDetail]);\n\n  async function submit(values) {\n    showSpinner();\n    const username = values.email;\n    const password = values.password;\n    const name = values.name;\n    const phone = values.phone;\n    const company = props.companyName;\n    const noOfUsers = props.noOfUsers + 1;\n    const companyID = props.companyID;\n    const signUpInformation = {\n      username,\n      password,\n      attributes: {\n        name: name,\n        \"custom:company\": company,\n        \"custom:NumberOfUsersSix\": \"0\",\n        \"custom:companyId\": companyID,\n        \"custom:smsAlerts\": \"true\",\n        \"custom:emailAlerts\": \"true\",\n        \"custom:mobile\": phone,\n        \"custom:companyStartDate\": props.startDate\n      }\n    };\n    console.log(\"signUpInformation\", signUpInformation); //prevent adding user already been added\n\n    let error = false;\n\n    try {\n      await Auth.signUp(signUpInformation);\n      error = true;\n      hideSpinner();\n      setErrorMessageFromAWS(\"\");\n      setStage(2);\n    } catch (error) {\n      hideSpinner();\n      setErrorMessageFromAWS(error.message); // error = false\n\n      console.log(\"error signing up:\", error);\n    }\n\n    if (error) {\n      if (userType === \"admin\") {\n        try {\n          await verifyEmail(username);\n        } catch (error) {\n          setErrorMessageFromAWS(error.message);\n          console.log(\"error verifyEmail:\", error);\n        }\n      }\n\n      try {\n        await addToGroup(username, userType);\n      } catch (error) {\n        setErrorMessageFromAWS(error.message);\n        console.log(\"error addToGroup:\", error);\n      }\n\n      try {\n        const numberOfUsers = noOfUsers.toString();\n        await updateUsersAttribute(loginEmailAddress, numberOfUsers);\n      } catch (error) {\n        setErrorMessageFromAWS(error.message);\n        console.log(\"error updateUsersAttribute:\", error);\n      }\n\n      try {\n        await createUserLoginTime(name, username, company, companyID);\n      } catch (error) {\n        setErrorMessageFromAWS(error.message);\n        console.log(\"error createUserLoginTime:\", error);\n      }\n    }\n  }\n\n  async function confirmSignUp(values) {\n    const username = values.email;\n    const code = values.code;\n\n    try {\n      await Auth.confirmSignUp(username, code).then(() => {\n        props.history.push(\"/dashboard\");\n      });\n    } catch (error) {\n      setErrorMessageFromAWS(error.message);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, spinner, stage === 1 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(submit),\n    className: \"signup__form signup__column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__heading--style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, \"Sign up maximum of \", props.noOfUsers === 0 ? 6 : 6 - props.noOfUsers, \" users\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__textWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faAsterisk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__inputText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, \"Email (Username)\"), \" \"), /*#__PURE__*/React.createElement(\"input\", {\n    autoFocus: true,\n    type: \"email\",\n    name: \"email\",\n    className: \"signup__emailInput\",\n    ref: register({\n      required: \"required\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"invalid email address\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }), errors.email ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, errors.email.message, \" \") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__textWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faAsterisk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__inputText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, \"New Password\"), \" \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: \"signup__passwordInput\",\n    ref: register({\n      required: \"required\",\n      minLength: {\n        value: 8,\n        message: \"min length is 8\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }), errors.password ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, errors.password.message, \" \") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__textWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faAsterisk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__inputText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, \"Full Name\"), \" \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"name\",\n    name: \"name\",\n    className: \"signup__passwordInput\",\n    ref: register({\n      required: \"required\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }), errors.name ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, errors.name.message, \" \") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__textWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faAsterisk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__inputText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, \"Mobile Number\"), \" \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"phone\",\n    className: \"signup__passwordInput\",\n    ref: register({\n      required: \"required\",\n      minLength: {\n        value: 11,\n        message: \"invalid number\"\n      },\n      maxLength: {\n        value: 11,\n        message: \"invalid number\"\n      }\n    }),\n    onKeyDown: evt => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }), errors.phone ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, errors.phone.message, \" \") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__userType__formWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, \"User Role\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    value: userType,\n    onChange: handleChange,\n    label: \"users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }, \"Staff\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"admin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }\n  }, \"Head chef\")))), props.noOfUsers === 6 ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 38\n    }\n  }, \"\\\"You have reached the maximum amount of users\\\"\") : /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signUp__errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }, errorMessageFromAWS))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"superAdminCreatedUsers__table\",\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 25\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 25\n    }\n  }, \"Most Recent Logins\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 21\n    }\n  }, props.superAdminCreatedUsers.map((row, id) => /*#__PURE__*/React.createElement(TableRow, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 27\n    }\n  }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 27\n    }\n  }, row.loginTime.map(data => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 33\n      }\n    }, data.time);\n  })))))))))), stage === 2 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(confirmSignUp),\n    className: \"signup__form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__heading--style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }, \"Confirm Sign Up\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__emailText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 15\n    }\n  }, \"Username (Email)\"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n    autoFocus: true,\n    type: \"email\",\n    name: \"email\",\n    className: \"signup__emailInput\",\n    ref: register({\n      required: \"required\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"invalid email address\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup__passwordText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  }, \"Verification code\"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"code\",\n    name: \"code\",\n    className: \"signup__passwordInput\",\n    ref: register({\n      required: \"required\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    bssize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }, \"confirm\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forget-password-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 15\n    }\n  }, errorMessageFromAWS)))));\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/auth/sign-up.js"],"names":["React","useState","useEffect","faAsterisk","FontAwesomeIcon","useForm","Auth","makeStyles","InputLabel","MenuItem","FormControl","Select","addToGroup","updateUsersAttribute","createUserLoginTime","verifyEmail","useSpinner","TableRow","Paper","TableHead","Table","TableContainer","TableCell","TableBody","Signup","props","register","handleSubmit","errors","errorMessageFromAWS","setErrorMessageFromAWS","stage","setStage","loginEmailAddress","setLoginEmailAddress","spinner","showSpinner","hideSpinner","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","classes","userType","setUserType","handleChange","event","target","value","userDetail","email","submit","values","username","password","name","phone","company","companyName","noOfUsers","companyID","signUpInformation","attributes","startDate","console","log","error","signUp","message","numberOfUsers","toString","confirmSignUp","code","then","history","push","required","pattern","minLength","maxLength","evt","includes","key","preventDefault","display","justifyContent","color","superAdminCreatedUsers","map","row","id","loginTime","data","time"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  faAsterisk,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useForm } from \"react-hook-form\";\nimport { Auth } from \"aws-amplify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nimport {\n  addToGroup,\n  updateUsersAttribute,\n  createUserLoginTime,\n  verifyEmail\n} from \"../../../../api\";\n\nimport useSpinner from \"../../libs/use-spinner\";\n\nimport {\n  TableRow,\n  Paper,\n  TableHead,\n  Table,\n  TableContainer,\n  TableCell,\n  TableBody,\n} from \"@material-ui/core\";\n\nexport default function Signup(props) {\n  const { register, handleSubmit, errors } = useForm();\n  const [errorMessageFromAWS, setErrorMessageFromAWS] = useState(\"\");\n\n  const [stage, setStage] = useState(1);\n  const [loginEmailAddress, setLoginEmailAddress] = useState(\"\");\n\n  const [ spinner, showSpinner, hideSpinner ] = useSpinner();\n\n  const useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    }\n  }));\n\n  const classes = useStyles();\n  const [userType, setUserType] = React.useState(\"user\");\n\n  const handleChange = (event) => {\n    setUserType(event.target.value);\n  };\n\n  useEffect(() => {\n    setLoginEmailAddress(props.userDetail.email)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ props.userDetail])\n\n  async function submit(values) {\n\n    showSpinner()\n\n    const username = values.email;\n    const password = values.password;\n    const name = values.name;\n    const phone = values.phone;\n\n    const company = props.companyName;\n    const noOfUsers = props.noOfUsers + 1\n    const companyID = props.companyID;\n\n    const signUpInformation = {\n      username,\n      password,\n      attributes: {\n          name: name,\n        \"custom:company\": company,\n        \"custom:NumberOfUsersSix\": \"0\",\n        \"custom:companyId\": companyID,\n        \"custom:smsAlerts\": \"true\",\n        \"custom:emailAlerts\": \"true\",\n        \"custom:mobile\": phone,\n        \"custom:companyStartDate\": props.startDate\n      },\n    };\n\n    console.log(\"signUpInformation\",signUpInformation);\n\n    //prevent adding user already been added\n    let error = false;\n\n    try {\n      await Auth.signUp(signUpInformation)\n      error = true;\n      hideSpinner()\n      setErrorMessageFromAWS(\"\")\n      setStage(2);\n    } catch (error) {\n      hideSpinner()\n      setErrorMessageFromAWS(error.message);\n      // error = false\n      console.log(\"error signing up:\", error);\n    }\n\n    if (error) {\n\n      if (userType === \"admin\") {\n        try {\n          await verifyEmail(username)\n        } catch (error) {\n          setErrorMessageFromAWS(error.message);\n          console.log(\"error verifyEmail:\", error);\n        }\n      }\n\n      try {\n        await addToGroup(username, userType)\n      } catch (error) {\n        setErrorMessageFromAWS(error.message);\n        console.log(\"error addToGroup:\", error);\n      }\n\n      try {\n        const numberOfUsers = noOfUsers.toString()\n        await updateUsersAttribute(loginEmailAddress, numberOfUsers)\n      } catch (error) {\n        setErrorMessageFromAWS(error.message);\n        console.log(\"error updateUsersAttribute:\", error);\n      }\n\n      try {\n        await createUserLoginTime(name, username, company, companyID);\n      } catch (error) {\n        setErrorMessageFromAWS(error.message);\n        console.log(\"error createUserLoginTime:\", error);\n      }\n    }\n\n  }\n\n\n  async function confirmSignUp(values) {\n    const username = values.email;\n    const code = values.code;\n\n    try {\n      await Auth.confirmSignUp(username, code).then(() => {\n        props.history.push(\"/dashboard\");\n      });\n    } catch (error) {\n      setErrorMessageFromAWS(error.message);\n    }\n  }\n\n  return (\n    <>\n      {spinner}\n      {stage === 1 && (\n        <div className=\"signup\">\n          <div className=\"signup__columns\">\n            <form onSubmit={handleSubmit(submit)} className=\"signup__form signup__column\">\n            <div className=\"signup__heading--style\">\n              Sign up maximum of {props.noOfUsers === 0 ? 6: 6 - props.noOfUsers} users\n            </div>\n\n            <div className=\"signup__wrapper\">\n              <div className=\"signup__textWrapper\">\n                <FontAwesomeIcon icon={faAsterisk} />\n                <div className=\"signup__inputText\">Email (Username)</div>{\" \"}\n              </div>\n              <input\n                autoFocus\n                type=\"email\"\n                name=\"email\"\n                className=\"signup__emailInput\"\n                ref={register({\n                  required: \"required\",\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: \"invalid email address\",\n                  },\n                })}\n              />\n              {errors.email ? (\n                <p>{errors.email.message} </p>\n              ): \"\"}\n            </div>\n\n            <div className=\"signup__wrapper\">\n              <div className=\"signup__textWrapper\">\n                <FontAwesomeIcon icon={faAsterisk} />\n                <div className=\"signup__inputText\">New Password</div>{\" \"}\n              </div>\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"signup__passwordInput\"\n                ref={register({\n                  required: \"required\",\n                  minLength: {\n                    value: 8,\n                    message: \"min length is 8\",\n                  },\n                })}\n              />\n              {errors.password ? (\n                <p>{errors.password.message} </p>\n              ):\"\"}\n            </div>\n\n            <div className=\"signup__wrapper\">\n              <div className=\"signup__textWrapper\">\n                <FontAwesomeIcon icon={faAsterisk} />\n                <div className=\"signup__inputText\">Full Name</div>{\" \"}\n              </div>\n              <input\n                type=\"name\"\n                name=\"name\"\n                className=\"signup__passwordInput\"\n                ref={register({\n                  required: \"required\",\n                })}\n              />\n              {errors.name ? (\n                <p>{errors.name.message} </p>\n              ):\"\"}\n            </div>\n\n            <div className=\"signup__wrapper\">\n              <div className=\"signup__textWrapper\">\n                <FontAwesomeIcon icon={faAsterisk} />\n                <div className=\"signup__inputText\">Mobile Number</div>{\" \"}\n              </div>\n              <input\n                type=\"number\"\n                name=\"phone\"\n                className=\"signup__passwordInput\"\n                ref={register({\n                  required: \"required\",\n                  minLength: {\n                    value: 11,\n                    message: \"invalid number\",\n                  },\n                  maxLength: {\n                    value: 11,\n                    message: \"invalid number\",\n                  },\n                })}\n                onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n              />\n              {errors.phone ? (\n                <p>{errors.phone.message} </p>\n              ):\"\"}\n            </div>\n\n            <div className=\"signup__userType__formWrapper\">\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                User Role\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={userType}\n                onChange={handleChange}\n                label=\"users\"\n              >\n                <MenuItem value={\"user\"}>Staff</MenuItem>\n                <MenuItem value={\"admin\"}>Head chef</MenuItem>\n              </Select>\n            </FormControl>\n            </div>\n\n            {props.noOfUsers === 6 ? <div style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              color: \"red\"\n            }}>\"You have reached the maximum amount of users\"</div> :\n            <button\n              type=\"submit\"\n            >\n              Sign up\n            </button>\n            }\n\n            <div className=\"signUp__errorMessage\">\n              <p>{errorMessageFromAWS}</p>\n            </div>\n          </form>\n            <div className=\"signup__column\">\n\n\n                <TableContainer component={Paper}>\n                  <Table className=\"superAdminCreatedUsers__table\" aria-label=\"simple table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Full Name</TableCell>\n                        <TableCell align=\"left\">Most Recent Logins</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {props.superAdminCreatedUsers.map((row, id) => (\n                        <TableRow key={id}>\n                          <TableCell component=\"th\" scope=\"row\">\n                            {row.name}\n                          </TableCell>\n                          <TableCell align=\"left\">\n                            {\n                              row.loginTime.map((data) => {\n                                return (\n                                <div>\n                                  {data.time}\n                                </div>\n                                )\n                              })\n                            }\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n\n\n            </div>\n          </div>\n        </div>\n      )}\n\n      {stage === 2 && (\n        <div className=\"signup\">\n          <form onSubmit={handleSubmit(confirmSignUp)} className=\"signup__form\">\n            <div className=\"signup__heading--style\">Confirm Sign Up</div>\n\n            <div className=\"signup__wrapper\">\n              <div className=\"signup__emailText\">Username (Email)</div>{\" \"}\n              <input\n                autoFocus\n                type=\"email\"\n                name=\"email\"\n                className=\"signup__emailInput\"\n                ref={register({\n                  required: \"required\",\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: \"invalid email address\",\n                  },\n                })}\n              />\n            </div>\n            <div className=\"signup__wrapper\">\n              <div className=\"signup__passwordText\">Verification code</div>{\" \"}\n              <input\n                type=\"code\"\n                name=\"code\"\n                className=\"signup__passwordInput\"\n                ref={register({\n                  required: \"required\",\n                })}\n              />\n            </div>\n\n            <button\n              type=\"submit\"\n              bssize=\"large\"\n            >\n              confirm\n            </button>\n\n            <div className=\"forget-password-message\">\n              <p>{errorMessageFromAWS}</p>\n            </div>\n          </form>\n        </div>\n      )}\n\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}