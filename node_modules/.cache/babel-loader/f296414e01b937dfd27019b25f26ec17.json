{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/contexts/waste-labels-context.js\";\nimport React, { createContext, useEffect, useState } from 'react';\nimport { getWasteLabel } from \"../api\";\nexport const WasteLabelsContext = createContext();\n\nconst WasteLabelsContextProvider = props => {\n  const [labels, setLabels] = useState({\n    acronyms: {\n      c: \"C\",\n      p: \"P\",\n      s: \"S\"\n    },\n    titleLabels: {\n      c: \"cover\",\n      p: \"preparation\",\n      s: \"spoilage\"\n    }\n  });\n  useEffect(() => {\n    if (props.companyName && props.companyId && props.siteName) {\n      getWasteLabelFunc(companyName, companyId, siteName);\n    }\n\n    ;\n  }, [props.companyName, props.companyId, props.siteName]);\n\n  const getWasteLabelFunc = (companyName, companyId, siteName) => {\n    getWasteLabel(companyName, companyId, siteName).then(data => {\n      setLabels(data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(WasteLabelsContext.Provider, {\n    value: {\n      labels\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default WasteLabelsContextProvider;","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/contexts/waste-labels-context.js"],"names":["React","createContext","useEffect","useState","getWasteLabel","WasteLabelsContext","WasteLabelsContextProvider","props","labels","setLabels","acronyms","c","p","s","titleLabels","companyName","companyId","siteName","getWasteLabelFunc","then","data","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,SAASC,aAAT,QAA8B,QAA9B;AAEA,OAAO,MAAMC,kBAAkB,GAAGJ,aAAa,EAAxC;;AAEP,MAAMK,0BAA0B,GAAGC,KAAK,IAAI;AAC1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACnCO,IAAAA,QAAQ,EAAE;AACRC,MAAAA,CAAC,EAAE,GADK;AAERC,MAAAA,CAAC,EAAE,GAFK;AAGRC,MAAAA,CAAC,EAAE;AAHK,KADyB;AAMnCC,IAAAA,WAAW,EAAE;AACXH,MAAAA,CAAC,EAAE,OADQ;AAEXC,MAAAA,CAAC,EAAE,aAFQ;AAGXC,MAAAA,CAAC,EAAE;AAHQ;AANsB,GAAD,CAApC;AAaAX,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAIK,KAAK,CAACQ,WAAN,IAAqBR,KAAK,CAACS,SAA3B,IAAwCT,KAAK,CAACU,QAAlD,EAA4D;AAC1DC,MAAAA,iBAAiB,CAACH,WAAD,EAAcC,SAAd,EAAyBC,QAAzB,CAAjB;AACD;;AAAA;AAEJ,GANU,EAMR,CAAEV,KAAK,CAACQ,WAAR,EAAqBR,KAAK,CAACS,SAA3B,EAAsCT,KAAK,CAACU,QAA5C,CANQ,CAAT;;AAQA,QAAMC,iBAAiB,GAAG,CAACH,WAAD,EAAcC,SAAd,EAAyBC,QAAzB,KAAsC;AAC9Db,IAAAA,aAAa,CAACW,WAAD,EAAcC,SAAd,EAAyBC,QAAzB,CAAb,CAAgDE,IAAhD,CAAsDC,IAAD,IAAU;AAC7DX,MAAAA,SAAS,CAACW,IAAD,CAAT;AACD,KAFD;AAGD,GAJD;;AAOA,sBACE,oBAAC,kBAAD,CAAoB,QAApB;AACE,IAAA,KAAK,EAAE;AACLZ,MAAAA;AADK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGD,KAAK,CAACc,QALT,CADF;AASD,CAtCD;;AAwCA,eAAef,0BAAf","sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\nimport { getWasteLabel } from \"../api\";\n\nexport const WasteLabelsContext = createContext()\n\nconst WasteLabelsContextProvider = props => {\n  const [labels, setLabels] = useState({\n    acronyms: {\n      c: \"C\",\n      p: \"P\",\n      s: \"S\"\n    },\n    titleLabels: {\n      c: \"cover\",\n      p: \"preparation\",\n      s: \"spoilage\"\n    }\n  });\n\n  useEffect(() => {\n\n    if (props.companyName && props.companyId && props.siteName) {\n      getWasteLabelFunc(companyName, companyId, siteName);\n    };\n\n}, [ props.companyName, props.companyId, props.siteName])\n\n  const getWasteLabelFunc = (companyName, companyId, siteName) => {\n    getWasteLabel(companyName, companyId, siteName).then((data) => {\n      setLabels(data);\n    });\n  };\n\n\n  return (\n    <WasteLabelsContext.Provider\n      value={{\n        labels\n      }}\n    >\n      {props.children}\n    </WasteLabelsContext.Provider>\n  )\n}\n\nexport default WasteLabelsContextProvider\n"]},"metadata":{},"sourceType":"module"}