{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/dashboard.js\";\nimport React, { useContext, useState } from \"react\";\nimport { DashboardContext } from \"../../../contexts/dashboard-context.js\";\nimport Switches from \"../libs/use-switches\";\nimport PerformanceSummary from \"./performance-summary\";\nimport { Radio, TableRow, Paper, TablePagination, TableHead, Table, TableContainer, TableCell, TableBody } from \"@material-ui/core\";\nimport Controller from \"./controller.js\"; // import Group from \"./group.js\";\n// import GroupTwo from \"./group-one.js\";\n// import GroupThree from \"./group-two.js\";\n// import GroupFour from \"./group-three.js\";\n\nimport Group from \"./group-two.js\";\nimport GroupTwo from \"./group-three.js\";\nimport GroupThree from \"./group-four.js\";\nimport GroupFour from \"./group-four.js\";\nimport { setItemInLocalStorage, calculateTodaysDate, splitCamelCaseStringAndMakeFirstCharacterUpperCase } from \"../../../utilities.js\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nexport default function Dashboard(props) {\n  const {\n    showHourlyChart,\n    showDailyChart,\n    showWeeklyChart,\n    showMonthlyChart,\n    setShowHourlyChart,\n    setShowDailyChart,\n    setShowWeeklyChart,\n    setShowMonthlyChart,\n    showTotalWasteChart,\n    setShowTotalWasteChart,\n    foodWasteTargetSavings,\n    setFoodWasteTargetSavings,\n    aiPredictions,\n    setAiPredictions,\n    wastePerCover,\n    setWastePerCover,\n    wastePerSales,\n    setWastePerSales,\n    showWeeklyTrendChart,\n    setShowWeeklyTrendChart,\n    checked,\n    handleChangeForCheckedAndAccordion,\n    showWasteOnAdayOfTheWeek,\n    setShowWasteOnAdayOfTheWeek,\n    showDailySalesVsWasteReport,\n    setShowDailySalesVsWasteReport,\n    showEventProductionWaste,\n    setShowEventProductionWaste,\n    showEventCustomerWasteVcustomerRef,\n    setShowEventCustomerWasteVcustomerRef,\n    showGroup,\n    setShowGroup,\n    showGroupOne,\n    setShowGroupOne,\n    showGroupTwo,\n    setShowGroupTwo,\n    showGroupThree,\n    setShowGroupThree\n  } = Switches();\n  const {\n    handleSiteChange,\n    selectedValue,\n    siteName,\n    companyName,\n    sitesID,\n    sites,\n    startDate,\n    showPounds,\n    userType,\n    userDetail,\n    handleSiteIDchange,\n    selectedSiteValueID,\n    companyID,\n    weeklyDailyLabels,\n    weeklyDailyRange\n  } = useContext(DashboardContext);\n  const leftColumn = [{\n    id: '0',\n    type: 'WASTE INPUTS'\n  }, {\n    id: '1',\n    type: 'WASTE TRENDS'\n  }, {\n    id: '2',\n    type: 'WEEKLY WASTE REPORTS'\n  }];\n  const rightColumn = [{\n    id: '3',\n    type: 'WASTE EVENTS'\n  }];\n  const twoColumns = {\n    leftColumn: {\n      name: \"left-hand-side\",\n      // items: rightColumnDisplay,\n      items: leftColumn\n    },\n    rightColumn: {\n      name: \"right-hand-side\",\n      // items: leftColumnDisplay,\n      items: rightColumn\n    }\n  };\n  const initialStateForColumns = JSON.parse(localStorage.getItem('twoColumns')) || twoColumns;\n  const [columns, setColumns] = useState(initialStateForColumns);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(4);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const onDragEnd = (result, columns, setColumns) => {\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n      const [removed] = sourceItems.splice(source.index, 1);\n      destItems.splice(destination.index, 0, removed);\n      setColumns({ ...columns,\n        [source.droppableId]: { ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: { ...destColumn,\n          items: destItems\n        }\n      });\n      setItemInLocalStorage(\"twoColumns\", { ...columns,\n        [source.droppableId]: { ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: { ...destColumn,\n          items: destItems\n        }\n      });\n    } else {\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n      const [removed] = copiedItems.splice(source.index, 1);\n      copiedItems.splice(destination.index, 0, removed);\n      setColumns({ ...columns,\n        [source.droppableId]: { ...column,\n          items: copiedItems\n        }\n      });\n      setItemInLocalStorage(\"twoColumns\", { ...columns,\n        [source.droppableId]: { ...column,\n          items: copiedItems\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: result => onDragEnd(result, columns, setColumns),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PerformanceSummary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, Object.entries(columns).map(([columnId, column], index) => {\n    return /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"dashboard\",\n      droppableId: columnId,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"main\", Object.assign({\n      className: \"dashboard__reportsWrapper\"\n    }, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }), column.items.map(({\n      id,\n      type\n    }, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }\n      }, type === \"companyInfor\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard__overviewSites--positioning showOnMobile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard__date__user dashboard__userInformationWrapper cooperHewittBold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard__userDateNameAndUserType cooperHewittBold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 29\n        }\n      }, calculateTodaysDate(), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard__date__user__type cooperHewittBold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 31\n        }\n      }, userDetail.typeOfUser), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard__date__user__name cooperHewittBold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 31\n        }\n      }, \"Welcome back\", \" \", userDetail.fullName)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard__companyName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 27\n        }\n      }, splitCamelCaseStringAndMakeFirstCharacterUpperCase(userDetail.companyname)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard__overviewSitesReportTable report-subtitle showOnMobile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"report-subtitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }\n      }, \"Sites\"), /*#__PURE__*/React.createElement(Paper, {\n        className: \"dashboard__paper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TableContainer, {\n        className: \"dashboard__tableContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        className: \"dashboard__table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        className: \"dashboard__tableCell\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 35\n        }\n      }), /*#__PURE__*/React.createElement(TableCell, {\n        className: \"dashboard__tableCell\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"report-subtitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 37\n        }\n      }, \"TOTAL CSP WASTE\")), /*#__PURE__*/React.createElement(TableCell, {\n        className: \"dashboard__tableCell\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"report-subtitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 37\n        }\n      }, \"MONTHLY CSP TREND\")))), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 31\n        }\n      }, sites.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((site, index) => /*#__PURE__*/React.createElement(TableRow, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        className: \"dashboard__tableCell--style\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard__radio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Radio, {\n        checked: selectedSiteValueID === site.siteName,\n        onChange: handleSiteIDchange,\n        value: site.siteName,\n        color: \"default\",\n        inputProps: {\n          \"aria-label\": \"D\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 43\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard__siteName--color\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 43\n        }\n      }, \" \", site.siteName.replace(/[^A-Za-z]+/g, '').toLowerCase()))), /*#__PURE__*/React.createElement(TableCell, {\n        className: \"dashboard__tableCell--style\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 39\n        }\n      }, showPounds ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 45\n        }\n      }, \"\\xA3\"), parseInt((site.totalWaste * 2.775).toFixed(0))) : /*#__PURE__*/React.createElement(React.Fragment, null, parseInt(site.totalWaste.toFixed(0)), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 45\n        }\n      }, \"Kg\"))), /*#__PURE__*/React.createElement(TableCell, {\n        className: \"dashboard__tableCell--style\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 39\n        }\n      }, showPounds ? /*#__PURE__*/React.createElement(React.Fragment, null, parseInt((site.trends * 2.775).toFixed(0))) : /*#__PURE__*/React.createElement(React.Fragment, null, parseInt(site.trends.toFixed(0)), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 45\n        }\n      }, \"Kg\")))))))), /*#__PURE__*/React.createElement(TablePagination, {\n        rowsPerPageOptions: [2],\n        component: \"div\",\n        count: sites.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 27\n        }\n      })))), type === \"WASTE INPUTS\" && /*#__PURE__*/React.createElement(Draggable, {\n        draggableId: id,\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 23\n        }\n      }, provided => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"section\", Object.assign({\n        className: \"group\"\n      }, provided.draggableProps, provided.dragHandleProps, {\n        ref: provided.innerRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Group, {\n        columnId: columnId,\n        index: index,\n        wastePerCover: wastePerCover,\n        setWastePerCover: setWastePerCover,\n        showPoundsWastePerCover: showPounds,\n        hideReportWastePerCover: checked.wastePerCoverSwitch,\n        siteNameWastePerCover: siteName,\n        wastePerSales: wastePerSales,\n        setWastePerSales: setWastePerSales,\n        showPoundsWastePerSales: showPounds,\n        hideReportWastePerSales: checked.wastePerSalesSwitch,\n        siteNameWastePerSales: siteName,\n        siteNameDailySalesVsWasteReport: siteName,\n        showPoundsDailySalesVsWasteReport: showPounds,\n        showDailySalesVsWasteReport: showDailySalesVsWasteReport,\n        setShowDailySalesVsWasteReport: setShowDailySalesVsWasteReport,\n        hideReportDailySalesVsWasteReport: checked.dailySalesVsWasteReportSwitch,\n        weeklyDailyLabels: weeklyDailyLabels,\n        weeklyDailyRange: weeklyDailyRange,\n        showGroup: showGroup,\n        setShowGroup: setShowGroup,\n        handleChangeForCheckedAndAccordion: handleChangeForCheckedAndAccordion,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 31\n        }\n      })))), type === \"WASTE TRENDS\" && /*#__PURE__*/React.createElement(Draggable, {\n        draggableId: id,\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 23\n        }\n      }, provided => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"section\", Object.assign({\n        className: \"group\"\n      }, provided.draggableProps, provided.dragHandleProps, {\n        ref: provided.innerRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(GroupTwo, {\n        columnId: columnId,\n        index: index,\n        foodWasteTargetSavings: foodWasteTargetSavings,\n        setFoodWasteTargetSavings: setFoodWasteTargetSavings,\n        hideReportFoodWasteTargetSavings: checked.foodWasteTargetSwitch,\n        aiPredictions: aiPredictions,\n        setAiPredictions: setAiPredictions,\n        showPoundsAiPredictions: showPounds,\n        hideReportAiPredictions: checked.aiPredictionSwitch,\n        siteNameMonthlyChart: siteName,\n        showPoundsMonthlyChart: showPounds,\n        showMonthlyChart: showMonthlyChart,\n        setShowMonthlyChart: setShowMonthlyChart,\n        handleChangeForCheckedAndAccordionMonthlyChart: handleChangeForCheckedAndAccordion,\n        hideReportMonthlyChart: checked.monthlyChartSwitch,\n        siteNameWeeklyTrend: siteName,\n        showPoundsWeeklyTrend: showPounds,\n        showWeeklyTrendChart: showWeeklyTrendChart,\n        setShowWeeklyTrendChart: setShowWeeklyTrendChart,\n        handleChangeForCheckedAndAccordionWeeklyTrend: handleChangeForCheckedAndAccordion,\n        hideReportWeeklyTrend: checked.weeklyWasteTrendSwitch,\n        showGroupOne: showGroupOne,\n        setShowGroupOne: setShowGroupOne,\n        handleChangeForCheckedAndAccordion: handleChangeForCheckedAndAccordion,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 31\n        }\n      })))), type === \"WEEKLY WASTE REPORTS\" && /*#__PURE__*/React.createElement(Draggable, {\n        draggableId: id,\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 23\n        }\n      }, provided => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"section\", Object.assign({\n        className: \"group\"\n      }, provided.draggableProps, provided.dragHandleProps, {\n        ref: provided.innerRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(GroupThree, {\n        startDateTotalWaste: startDate,\n        showPoundsTotalWaste: showPounds,\n        showTotalWasteChart: showTotalWasteChart,\n        setShowTotalWasteChart: setShowTotalWasteChart,\n        hideReportTotalWaste: checked.totalSiteWasteSwitch,\n        siteNameHourlyWaste: siteName,\n        showPoundsHourlyWaste: showPounds,\n        showHourlyChart: showHourlyChart,\n        setShowHourlyChart: setShowHourlyChart,\n        handleChangeForCheckedAndAccordionHourlyWaste: handleChangeForCheckedAndAccordion,\n        hideReportHourlyWaste: checked.hourlyChartSwitch,\n        siteNameDailyWaste: siteName,\n        showPoundsDailyWaste: showPounds,\n        showDailyChart: showDailyChart,\n        setShowDailyChart: setShowDailyChart,\n        handleChangeForCheckedAndAccordionDailyWaste: handleChangeForCheckedAndAccordion,\n        hideReportDailyWaste: checked.dailyChartSwitch,\n        showPoundsWeeklyChart: showPounds,\n        showWeeklyChart: showWeeklyChart,\n        setShowWeeklyChart: setShowWeeklyChart,\n        handleChangeForCheckedAndAccordionWeeklyChart: handleChangeForCheckedAndAccordion,\n        hideReportWeekyChart: checked.weeklyChartSwitch,\n        siteNameWasteOnAdayOfTheWeek: siteName,\n        showPoundsWasteOnAdayOfTheWeek: showPounds,\n        showWasteOnAdayOfTheWeek: showWasteOnAdayOfTheWeek,\n        setShowWasteOnAdayOfTheWeek: setShowWasteOnAdayOfTheWeek,\n        hideReportWasteOnAdayOfTheWeek: checked.wasteOnAdayOfTheWeekSwitch,\n        showGroupTwo: showGroupTwo,\n        setShowGroupTwo: setShowGroupTwo,\n        handleChangeForCheckedAndAccordion: handleChangeForCheckedAndAccordion,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 31\n        }\n      })))), type === \"WASTE EVENTS\" && /*#__PURE__*/React.createElement(Draggable, {\n        draggableId: id,\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 23\n        }\n      }, provided => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"section\", Object.assign({\n        className: \"group\"\n      }, provided.draggableProps, provided.dragHandleProps, {\n        ref: provided.innerRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(GroupFour, {\n        siteNameDailySalesVsWasteReport: siteName,\n        showPoundsDailySalesVsWasteReport: showPounds,\n        showEventProductionWaste: showEventProductionWaste,\n        setShowEventProductionWaste: setShowEventProductionWaste,\n        hideReportDailySalesVsWasteReport: checked.dailySalesVsWasteReportSwitch,\n        weeklyDailyLabels: weeklyDailyLabels,\n        weeklyDailyRange: weeklyDailyRange,\n        showGroupThree: showGroupThree,\n        setShowGroupThree: setShowGroupThree,\n        handleChangeForCheckedAndAccordion: handleChangeForCheckedAndAccordion,\n        showEventCustomerWasteVcustomerRef: showEventCustomerWasteVcustomerRef,\n        setShowEventCustomerWasteVcustomerRef: setShowEventCustomerWasteVcustomerRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 31\n        }\n      })))));\n    }), provided.placeholder));\n  }), /*#__PURE__*/React.createElement(Controller, {\n    checked: checked,\n    showHourlyChart: showHourlyChart,\n    setShowHourlyChart: setShowHourlyChart,\n    sitesID: sitesID,\n    handleSiteChange: handleSiteChange,\n    selectedValue: selectedValue,\n    allsites: sites,\n    showPounds: showPounds,\n    companyName: companyName,\n    userType: userType,\n    handleSiteIDchange: handleSiteIDchange,\n    selectedSiteValueID: selectedSiteValueID,\n    companyID: companyID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/dashboard.js"],"names":["React","useContext","useState","DashboardContext","Switches","PerformanceSummary","Radio","TableRow","Paper","TablePagination","TableHead","Table","TableContainer","TableCell","TableBody","Controller","Group","GroupTwo","GroupThree","GroupFour","setItemInLocalStorage","calculateTodaysDate","splitCamelCaseStringAndMakeFirstCharacterUpperCase","DragDropContext","Draggable","Droppable","Dashboard","props","showHourlyChart","showDailyChart","showWeeklyChart","showMonthlyChart","setShowHourlyChart","setShowDailyChart","setShowWeeklyChart","setShowMonthlyChart","showTotalWasteChart","setShowTotalWasteChart","foodWasteTargetSavings","setFoodWasteTargetSavings","aiPredictions","setAiPredictions","wastePerCover","setWastePerCover","wastePerSales","setWastePerSales","showWeeklyTrendChart","setShowWeeklyTrendChart","checked","handleChangeForCheckedAndAccordion","showWasteOnAdayOfTheWeek","setShowWasteOnAdayOfTheWeek","showDailySalesVsWasteReport","setShowDailySalesVsWasteReport","showEventProductionWaste","setShowEventProductionWaste","showEventCustomerWasteVcustomerRef","setShowEventCustomerWasteVcustomerRef","showGroup","setShowGroup","showGroupOne","setShowGroupOne","showGroupTwo","setShowGroupTwo","showGroupThree","setShowGroupThree","handleSiteChange","selectedValue","siteName","companyName","sitesID","sites","startDate","showPounds","userType","userDetail","handleSiteIDchange","selectedSiteValueID","companyID","weeklyDailyLabels","weeklyDailyRange","leftColumn","id","type","rightColumn","twoColumns","name","items","initialStateForColumns","JSON","parse","localStorage","getItem","columns","setColumns","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","onDragEnd","result","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","removed","splice","index","column","copiedItems","Object","entries","map","columnId","provided","droppableProps","innerRef","typeOfUser","fullName","companyname","slice","site","replace","toLowerCase","parseInt","totalWaste","toFixed","trends","length","draggableProps","dragHandleProps","wastePerCoverSwitch","wastePerSalesSwitch","dailySalesVsWasteReportSwitch","foodWasteTargetSwitch","aiPredictionSwitch","monthlyChartSwitch","weeklyWasteTrendSwitch","totalSiteWasteSwitch","hourlyChartSwitch","dailyChartSwitch","weeklyChartSwitch","wasteOnAdayOfTheWeekSwitch","placeholder"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\n\nimport { DashboardContext } from \"../../../contexts/dashboard-context.js\";\n\nimport Switches from \"../libs/use-switches\";\n\nimport PerformanceSummary from \"./performance-summary\"\n\nimport {\n  Radio,\n  TableRow,\n  Paper,\n  TablePagination,\n  TableHead,\n  Table,\n  TableContainer,\n  TableCell,\n  TableBody,\n} from \"@material-ui/core\";\n\nimport Controller from \"./controller.js\";\n// import Group from \"./group.js\";\n// import GroupTwo from \"./group-one.js\";\n// import GroupThree from \"./group-two.js\";\n// import GroupFour from \"./group-three.js\";\n\nimport Group from \"./group-two.js\";\nimport GroupTwo from \"./group-three.js\";\nimport GroupThree from \"./group-four.js\";\nimport GroupFour from \"./group-four.js\";\n\nimport {\n  setItemInLocalStorage,\n  calculateTodaysDate,\n  splitCamelCaseStringAndMakeFirstCharacterUpperCase\n} from \"../../../utilities.js\"\n\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\n\nexport default function Dashboard(props) {\n\n  const {\n    showHourlyChart,\n    showDailyChart,\n    showWeeklyChart,\n    showMonthlyChart,\n    setShowHourlyChart,\n    setShowDailyChart,\n    setShowWeeklyChart,\n    setShowMonthlyChart,\n    showTotalWasteChart,\n    setShowTotalWasteChart,\n    foodWasteTargetSavings,\n    setFoodWasteTargetSavings,\n    aiPredictions,\n    setAiPredictions,\n    wastePerCover,\n    setWastePerCover,\n    wastePerSales,\n    setWastePerSales,\n    showWeeklyTrendChart,\n    setShowWeeklyTrendChart,\n    checked,\n    handleChangeForCheckedAndAccordion,\n\n    showWasteOnAdayOfTheWeek,\n    setShowWasteOnAdayOfTheWeek,\n\n    showDailySalesVsWasteReport,\n    setShowDailySalesVsWasteReport,\n\n    showEventProductionWaste,\n    setShowEventProductionWaste,\n\n    showEventCustomerWasteVcustomerRef,\n    setShowEventCustomerWasteVcustomerRef,\n\n    showGroup,\n    setShowGroup,\n    showGroupOne,\n    setShowGroupOne,\n    showGroupTwo,\n    setShowGroupTwo,\n    showGroupThree,\n    setShowGroupThree\n  } = Switches()\n\n  const {\n    handleSiteChange,\n    selectedValue,\n    siteName,\n    companyName,\n    sitesID,\n    sites,\n    startDate,\n    showPounds,\n    userType,\n    userDetail,\n    handleSiteIDchange,\n    selectedSiteValueID,\n    companyID,\n\n    weeklyDailyLabels,\n    weeklyDailyRange\n  } = useContext(DashboardContext)\n\n  const leftColumn = [\n    {\n      id: '0',\n      type: 'WASTE INPUTS'\n    },\n    {\n      id: '1',\n      type: 'WASTE TRENDS'\n    },\n    {\n      id: '2',\n      type: 'WEEKLY WASTE REPORTS'\n    }\n  ]\n\n  const rightColumn = [\n    {\n      id: '3',\n      type: 'WASTE EVENTS'\n    }\n  ]\n\n  const twoColumns = {\n    leftColumn: {\n      name: \"left-hand-side\",\n      // items: rightColumnDisplay,\n      items: leftColumn,\n    },\n    rightColumn: {\n      name: \"right-hand-side\",\n      // items: leftColumnDisplay,\n      items: rightColumn,\n    },\n  };\n\n  const initialStateForColumns = JSON.parse(localStorage.getItem('twoColumns')) || twoColumns\n  const [columns, setColumns] = useState(initialStateForColumns);\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(4);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const onDragEnd = (result, columns, setColumns) => {\n    if (!result.destination) return;\n    const { source, destination } = result;\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n      const [removed] = sourceItems.splice(source.index, 1);\n      destItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems\n        }\n      });\n      setItemInLocalStorage(\"twoColumns\", {\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems\n        }\n      });\n\n    } else {\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n      const [removed] = copiedItems.splice(source.index, 1);\n      copiedItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...column,\n          items: copiedItems\n        }\n      });\n      setItemInLocalStorage(\"twoColumns\", {\n        ...columns,\n        [source.droppableId]: {\n          ...column,\n          items: copiedItems\n        }\n      });\n\n    }\n  };\n\n    return (\n      <DragDropContext\n      onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\n      >\n\n      <PerformanceSummary />\n\n      <div className=\"dashboard\">\n\n          {Object.entries(columns).map(([columnId, column], index) => {\n\n          return (\n\n\n            <Droppable droppableId=\"dashboard\" droppableId={columnId} key={index}>\n\n            {(provided) => (\n              <main className=\"dashboard__reportsWrapper\" {...provided.droppableProps} ref={provided.innerRef}>\n                {column.items.map(({id, type}, index) => {\n\n                  return (\n                    <div key={index}>\n\n                    {type === \"companyInfor\" &&\n                      <>\n                      <div className=\"dashboard__overviewSites--positioning showOnMobile\">\n                        <div className=\"dashboard__date__user dashboard__userInformationWrapper cooperHewittBold\">\n                            <div className=\"dashboard__userDateNameAndUserType cooperHewittBold\">\n                                {calculateTodaysDate()}\n                              <div className=\"dashboard__date__user__type cooperHewittBold\">\n                                {userDetail.typeOfUser}\n                              </div>\n                              <div className=\"dashboard__date__user__name cooperHewittBold\">\n                                Welcome back\n                                {\" \"}\n                                {userDetail.fullName}\n                              </div>\n                            </div>\n                          <div className=\"dashboard__companyName\">{splitCamelCaseStringAndMakeFirstCharacterUpperCase(userDetail.companyname)}</div>\n                        </div>\n                      </div>\n\n                      <div className=\"dashboard__overviewSitesReportTable report-subtitle showOnMobile\">\n                        <div className=\"report-subtitle\">\n                          Sites\n                        </div>\n\n                        <Paper className=\"dashboard__paper\">\n                          <TableContainer className=\"dashboard__tableContainer\">\n                            <Table\n                              stickyHeader\n                              aria-label=\"sticky table\"\n                              className=\"dashboard__table\"\n                            >\n                              <TableHead>\n                                <TableRow>\n                                  <TableCell className=\"dashboard__tableCell\"></TableCell>\n                                  <TableCell className=\"dashboard__tableCell\">\n                                    <div className=\"report-subtitle\">\n                                      TOTAL CSP WASTE\n                                    </div>\n                                  </TableCell>\n                                  <TableCell className=\"dashboard__tableCell\">\n                                    <div className=\"report-subtitle\">\n                                    MONTHLY CSP TREND\n                                    </div>\n                                  </TableCell>\n                                </TableRow>\n                              </TableHead>\n\n                              <TableBody>\n                                {sites\n                                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                  .map((site, index) => (\n                                    <TableRow key={index}>\n                                      <TableCell className=\"dashboard__tableCell--style\">\n                                        <div className=\"dashboard__radio\">\n                                          <Radio\n                                            checked={selectedSiteValueID === site.siteName}\n                                            onChange={handleSiteIDchange}\n                                            value={site.siteName}\n                                            color=\"default\"\n                                            inputProps={{ \"aria-label\": \"D\" }}\n                                          />\n                                          <div className=\"dashboard__siteName--color\">\n                                            {\" \"}\n                                            {site.siteName.replace(/[^A-Za-z]+/g, '').toLowerCase()}\n                                          </div>\n                                        </div>\n                                      </TableCell>\n                                      <TableCell className=\"dashboard__tableCell--style\">\n\n                                        {showPounds ? (\n                                          <>\n                                            <span className=\"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\">\n                                              £\n                                            </span>\n                                            {parseInt((site.totalWaste * 2.775).toFixed(0))}\n                                          </>\n                                        ) : (\n                                          <>\n                                          {parseInt(site.totalWaste.toFixed(0))}\n                                            <span className=\"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\">\n                                              Kg\n                                            </span>\n                                          </>\n                                        )}\n\n                                      </TableCell>\n                                      <TableCell className=\"dashboard__tableCell--style\">\n                                        {showPounds ? (\n                                          <>\n                                          {parseInt((site.trends * 2.775).toFixed(0))}\n                                          </>\n                                        ) :\n                                        <>\n                                        {parseInt(site.trends.toFixed(0))}\n                                            <span className=\"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\">\n                                              Kg\n                                            </span>\n                                            </>\n                                        }\n\n                                      </TableCell>\n                                    </TableRow>\n                                  ))}\n                              </TableBody>\n                            </Table>\n                          </TableContainer>\n\n                          <TablePagination\n                            rowsPerPageOptions={[2]}\n                            component=\"div\"\n                            count={sites.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                          />\n                        </Paper>\n                      </div>\n                      </>\n                    }\n\n                    {type === \"WASTE INPUTS\" &&\n                      <Draggable draggableId={id} index={index}>\n                        {(provided) => (\n                          <div>\n                            <section className=\"group\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                              <Group\n                                columnId={columnId}\n                                index={index}\n\n                                wastePerCover={wastePerCover}\n                                setWastePerCover={setWastePerCover}\n                                showPoundsWastePerCover={showPounds}\n                                hideReportWastePerCover={checked.wastePerCoverSwitch}\n                                siteNameWastePerCover={siteName}\n\n                                wastePerSales={wastePerSales}\n                                setWastePerSales={setWastePerSales}\n                                showPoundsWastePerSales={showPounds}\n                                hideReportWastePerSales={checked.wastePerSalesSwitch}\n                                siteNameWastePerSales={siteName}\n\n                                siteNameDailySalesVsWasteReport={siteName}\n                                showPoundsDailySalesVsWasteReport={showPounds}\n                                showDailySalesVsWasteReport={showDailySalesVsWasteReport}\n                                setShowDailySalesVsWasteReport={setShowDailySalesVsWasteReport}\n                                hideReportDailySalesVsWasteReport={checked.dailySalesVsWasteReportSwitch}\n                                weeklyDailyLabels={weeklyDailyLabels}\n                                weeklyDailyRange={weeklyDailyRange}\n\n                                showGroup={showGroup}\n                                setShowGroup={setShowGroup}\n                                handleChangeForCheckedAndAccordion={handleChangeForCheckedAndAccordion}\n                              />\n                            </section>\n                          </div>\n                        )}\n                      </Draggable>\n                    }\n\n                    {type === \"WASTE TRENDS\" &&\n                      <Draggable draggableId={id} index={index}>\n                        {(provided) => (\n                          <div>\n                            <section className=\"group\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                              <GroupTwo\n                                columnId={columnId}\n                                index={index}\n\n                                foodWasteTargetSavings={foodWasteTargetSavings}\n                                setFoodWasteTargetSavings={setFoodWasteTargetSavings}\n                                hideReportFoodWasteTargetSavings={checked.foodWasteTargetSwitch}\n\n                                aiPredictions={aiPredictions}\n                                setAiPredictions={setAiPredictions}\n                                showPoundsAiPredictions={showPounds}\n                                hideReportAiPredictions={checked.aiPredictionSwitch}\n\n                                siteNameMonthlyChart={siteName}\n                                showPoundsMonthlyChart={showPounds}\n                                showMonthlyChart={showMonthlyChart}\n                                setShowMonthlyChart={setShowMonthlyChart}\n                                handleChangeForCheckedAndAccordionMonthlyChart={handleChangeForCheckedAndAccordion}\n                                hideReportMonthlyChart={checked.monthlyChartSwitch}\n\n                                siteNameWeeklyTrend={siteName}\n                                showPoundsWeeklyTrend={showPounds}\n                                showWeeklyTrendChart={showWeeklyTrendChart}\n                                setShowWeeklyTrendChart={setShowWeeklyTrendChart}\n                                handleChangeForCheckedAndAccordionWeeklyTrend={handleChangeForCheckedAndAccordion}\n                                hideReportWeeklyTrend={checked.weeklyWasteTrendSwitch}\n\n                                showGroupOne={showGroupOne}\n                                setShowGroupOne={setShowGroupOne}\n                                handleChangeForCheckedAndAccordion={handleChangeForCheckedAndAccordion}\n\n                              />\n                            </section>\n                          </div>\n                        )}\n                      </Draggable>\n                    }\n\n                    {type === \"WEEKLY WASTE REPORTS\" &&\n                      <Draggable draggableId={id} index={index}>\n                        {(provided) => (\n                          <div>\n                            <section className=\"group\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                              <GroupThree\n                                startDateTotalWaste={startDate}\n                                showPoundsTotalWaste={showPounds}\n                                showTotalWasteChart={showTotalWasteChart}\n                                setShowTotalWasteChart={setShowTotalWasteChart}\n                                hideReportTotalWaste={checked.totalSiteWasteSwitch}\n\n                                siteNameHourlyWaste={siteName}\n                                showPoundsHourlyWaste={showPounds}\n                                showHourlyChart={showHourlyChart}\n                                setShowHourlyChart={setShowHourlyChart}\n                                handleChangeForCheckedAndAccordionHourlyWaste={handleChangeForCheckedAndAccordion}\n                                hideReportHourlyWaste={checked.hourlyChartSwitch}\n\n                                siteNameDailyWaste={siteName}\n                                showPoundsDailyWaste={showPounds}\n                                showDailyChart={showDailyChart}\n                                setShowDailyChart={setShowDailyChart}\n                                handleChangeForCheckedAndAccordionDailyWaste={handleChangeForCheckedAndAccordion}\n                                hideReportDailyWaste={checked.dailyChartSwitch}\n\n                                showPoundsWeeklyChart={showPounds}\n                                showWeeklyChart={showWeeklyChart}\n                                setShowWeeklyChart={setShowWeeklyChart}\n                                handleChangeForCheckedAndAccordionWeeklyChart={handleChangeForCheckedAndAccordion}\n                                hideReportWeekyChart={checked.weeklyChartSwitch}\n\n                                siteNameWasteOnAdayOfTheWeek={siteName}\n                                showPoundsWasteOnAdayOfTheWeek={showPounds}\n                                showWasteOnAdayOfTheWeek={showWasteOnAdayOfTheWeek}\n                                setShowWasteOnAdayOfTheWeek={setShowWasteOnAdayOfTheWeek}\n                                hideReportWasteOnAdayOfTheWeek={checked.wasteOnAdayOfTheWeekSwitch}\n\n                                showGroupTwo={showGroupTwo}\n                                setShowGroupTwo={setShowGroupTwo}\n                                handleChangeForCheckedAndAccordion={handleChangeForCheckedAndAccordion}\n\n                              />\n                            </section>\n                          </div>\n                        )}\n                      </Draggable>\n                    }\n\n                    {type === \"WASTE EVENTS\" &&\n                      <Draggable draggableId={id} index={index}>\n                        {(provided) => (\n                          <div>\n                            <section className=\"group\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                              <GroupFour\n                                siteNameDailySalesVsWasteReport={siteName}\n                                showPoundsDailySalesVsWasteReport={showPounds}\n                                showEventProductionWaste={showEventProductionWaste}\n                                setShowEventProductionWaste={setShowEventProductionWaste}\n                                hideReportDailySalesVsWasteReport={checked.dailySalesVsWasteReportSwitch}\n                                weeklyDailyLabels={weeklyDailyLabels}\n                                weeklyDailyRange={weeklyDailyRange}\n\n                                showGroupThree={showGroupThree}\n                                setShowGroupThree={setShowGroupThree}\n                                handleChangeForCheckedAndAccordion={handleChangeForCheckedAndAccordion}\n\n                                showEventCustomerWasteVcustomerRef={showEventCustomerWasteVcustomerRef}\n                                setShowEventCustomerWasteVcustomerRef={setShowEventCustomerWasteVcustomerRef}\n\n                              />\n                            </section>\n                          </div>\n                        )}\n                      </Draggable>\n                    }\n\n                    </div>\n                  )\n              })}\n              {provided.placeholder}\n              </main>\n            )}\n\n\n\n            </Droppable>\n\n          )\n\n          })}\n\n          <Controller\n            checked={checked}\n            showHourlyChart={showHourlyChart}\n            setShowHourlyChart={setShowHourlyChart}\n            sitesID={sitesID}\n            handleSiteChange={handleSiteChange}\n            selectedValue={selectedValue}\n            allsites={sites}\n            showPounds={showPounds}\n            companyName={companyName}\n            userType={userType}\n            handleSiteIDchange={handleSiteIDchange}\n            selectedSiteValueID={selectedSiteValueID}\n            companyID={companyID}\n          />\n\n        </div>\n\n      </DragDropContext>\n    );\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}