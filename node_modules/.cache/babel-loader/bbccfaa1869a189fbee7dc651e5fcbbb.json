{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/contexts/production-preparation-context.js\";\nimport React, { createContext, useEffect, useState } from 'react';\nimport { getProductionPreparationInputs } from \"../api\";\nimport { getWeekOfTheYear, setItemInLocalStorage } from \"../utilities.js\";\nexport const ProductionPreparationContext = createContext();\n\nconst ProductionPreparationProvider = props => {\n  const [productionInputs, setProductionInputs] = useState([]);\n  const [siteName, setSiteName] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [index, setIndex] = useState(0);\n  const [allMenuItems, setAllMenuItems] = useState([]);\n  const [firstDayOfTheWeek, setFirstDayOfTheWeek] = useState(1);\n  const [numberOfWeeks, setNumberOfWeeks] = useState(0);\n  const [weeklyArry, setWeeklyArry] = useState([]);\n  const [weeklyStartDateArry, setWeeklyStartDateArry] = useState([]);\n  const [weeklyNumbers, setWeeklyNumbers] = useState([]);\n  const [paginationIndex, setPaginationIndex] = useState(0);\n  useEffect(() => {\n    if (props.companyId && props.companyName && props.siteName) {\n      const d = new Date();\n      const n = d.getDay();\n      let indexNumber = n === 0 ? 6 : n - 1;\n      productionPreparationInputsFunc(props.companyId, props.companyName, props.siteName, indexNumber);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props.siteName, props.companyId, props.companyName, props.updateGraph]);\n\n  const updateProductionInputs = (companyId, companyName, siteName, indexNumber) => {\n    props.updateValues(\"UPDATE GRAPH\");\n    productionPreparationInputsFunc(companyId, companyName, siteName, indexNumber);\n  };\n\n  const productionPreparationInputsFunc = (companyId, companyName, siteName, index) => {\n    getProductionPreparationInputs(companyId, companyName, siteName).then(data => {\n      let allTheWeeks = data.map(item => {\n        return item.productionPreparation.map(data => {\n          return data.weekOfYear;\n        });\n      });\n      setWeeklyNumbers(allTheWeeks[0]);\n      let indexNumber = index;\n      setSiteName(siteName);\n      setId(companyId);\n      setCompanyName(companyName);\n      const weekOfTheYear = getWeekOfTheYear();\n      data.map(item => {\n        const weeksNumber = item.productionPreparation.length;\n        let allStartDateOfEachWeekAvailable = [];\n        item.productionPreparation.map(data => {\n          allStartDateOfEachWeekAvailable.push(data.Date);\n        });\n        setWeeklyStartDateArry(allStartDateOfEachWeekAvailable); // console.log(\"weeksNumber\",weeksNumber);\n        // setItemInLocalStorage(\"index\",weeksNumber)\n\n        setNumberOfWeeks(weeksNumber);\n        const index = weeksNumber - 1 < 0 ? 0 : weeksNumber - 1;\n        setPaginationIndex(index);\n        setWeeklyArry(item.productionPreparation);\n        const weekOfTheYearData = item.productionPreparation.filter(val => {\n          return val.weekOfYear === weekOfTheYear.toString();\n        });\n        const getFirstDayOfTheWeek = weekOfTheYearData.map(data => {\n          return data.Date;\n        });\n        setFirstDayOfTheWeek(getFirstDayOfTheWeek[0]);\n        setAllMenuItems(weekOfTheYearData);\n        const productionInputsData = weekOfTheYearData.map(data => {\n          return data.productionWasteWeek[indexNumber];\n        });\n        const productionInputsDataAfterFiltered = filterOutEmptyObjects(productionInputsData[0]);\n        setProductionInputs(productionInputsDataAfterFiltered);\n        return \"\";\n      });\n    }).catch(err => {\n      console.log(\"err\", err);\n    });\n  };\n\n  const filterOutEmptyObjects = data => {\n    const results = data.filter((item, i) => {\n      return item.productionFood !== \"\";\n    });\n    return results;\n  };\n\n  const filterMenuItems = selectedPage => {\n    const menuItemsForSelectedPage = allMenuItems.map(data => {\n      return data.productionWasteWeek[selectedPage];\n    });\n    const dailyMenuInputsDataAfterFiltered = filterOutEmptyObjects(menuItemsForSelectedPage[0]);\n    setProductionInputs(dailyMenuInputsDataAfterFiltered);\n    return \"\";\n  };\n\n  const filterbyWeeks = (data, pageNumber) => {\n    setAllMenuItems([data]);\n    const prodWasteWeek = filterOutEmptyObjects(data.productionWasteWeek[pageNumber]);\n    setProductionInputs(prodWasteWeek);\n    setFirstDayOfTheWeek(data.Date);\n    return \"\";\n  };\n\n  return /*#__PURE__*/React.createElement(ProductionPreparationContext.Provider, {\n    value: {\n      siteName,\n      companyName,\n      id,\n      filterOutEmptyObjects,\n      index,\n      filterMenuItems,\n      firstDayOfTheWeek,\n      updateProductionInputs,\n      productionInputs,\n      numberOfWeeks,\n      weeklyArry,\n      filterbyWeeks,\n      weeklyStartDateArry,\n      weeklyNumbers,\n      paginationIndex\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ProductionPreparationProvider;","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/contexts/production-preparation-context.js"],"names":["React","createContext","useEffect","useState","getProductionPreparationInputs","getWeekOfTheYear","setItemInLocalStorage","ProductionPreparationContext","ProductionPreparationProvider","props","productionInputs","setProductionInputs","siteName","setSiteName","id","setId","companyName","setCompanyName","index","setIndex","allMenuItems","setAllMenuItems","firstDayOfTheWeek","setFirstDayOfTheWeek","numberOfWeeks","setNumberOfWeeks","weeklyArry","setWeeklyArry","weeklyStartDateArry","setWeeklyStartDateArry","weeklyNumbers","setWeeklyNumbers","paginationIndex","setPaginationIndex","companyId","d","Date","n","getDay","indexNumber","productionPreparationInputsFunc","updateGraph","updateProductionInputs","updateValues","then","data","allTheWeeks","map","item","productionPreparation","weekOfYear","weekOfTheYear","weeksNumber","length","allStartDateOfEachWeekAvailable","push","weekOfTheYearData","filter","val","toString","getFirstDayOfTheWeek","productionInputsData","productionWasteWeek","productionInputsDataAfterFiltered","filterOutEmptyObjects","catch","err","console","log","results","i","productionFood","filterMenuItems","selectedPage","menuItemsForSelectedPage","dailyMenuInputsDataAfterFiltered","filterbyWeeks","pageNumber","prodWasteWeek","children"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\nimport { getProductionPreparationInputs } from \"../api\";\nimport { getWeekOfTheYear, setItemInLocalStorage } from \"../utilities.js\"\n\nexport const ProductionPreparationContext = createContext()\n\nconst ProductionPreparationProvider = props => {\n\n  const [productionInputs, setProductionInputs] = useState([]);\n  const [siteName, setSiteName] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [index, setIndex] = useState(0);\n  const [allMenuItems, setAllMenuItems] = useState([]);\n  const [firstDayOfTheWeek, setFirstDayOfTheWeek] = useState(1);\n  const [numberOfWeeks, setNumberOfWeeks] = useState(0);\n  const [weeklyArry, setWeeklyArry] = useState([]);\n  const [weeklyStartDateArry, setWeeklyStartDateArry] = useState([]);\n  const [weeklyNumbers, setWeeklyNumbers] = useState([]);\n  const [paginationIndex, setPaginationIndex] = useState(0);\n\n  useEffect(() => {\n\n\n\n    if (props.companyId && props.companyName && props.siteName) {\n\n        const d = new Date();\n        const n = d.getDay()\n        let indexNumber = n === 0 ? 6: n - 1;\n\n        productionPreparationInputsFunc(props.companyId, props.companyName, props.siteName, indexNumber)\n\n    }\n   // eslint-disable-next-line react-hooks/exhaustive-deps\n}, [ props.siteName, props.companyId, props.companyName, props.updateGraph])\n\n\nconst updateProductionInputs = (companyId, companyName, siteName, indexNumber) => {\n  props.updateValues(\"UPDATE GRAPH\")\n  productionPreparationInputsFunc(companyId, companyName, siteName, indexNumber);\n};\n\nconst productionPreparationInputsFunc = (companyId, companyName, siteName, index) => {\n  getProductionPreparationInputs(companyId, companyName, siteName).then((data) => {\n\n        let allTheWeeks = data.map((item) => {\n          return item.productionPreparation.map((data) => {\n            return data.weekOfYear;\n          })\n        });\n\n        setWeeklyNumbers(allTheWeeks[0])\n\n        let indexNumber = index;\n        setSiteName(siteName);\n        setId(companyId);\n        setCompanyName(companyName);\n\n        const weekOfTheYear = getWeekOfTheYear()\n\n        data.map((item) => {\n            const weeksNumber = item.productionPreparation.length;\n            let allStartDateOfEachWeekAvailable = [];\n\n            item.productionPreparation.map((data) => {\n              allStartDateOfEachWeekAvailable.push(data.Date)\n            })\n\n            setWeeklyStartDateArry(allStartDateOfEachWeekAvailable);\n\n            // console.log(\"weeksNumber\",weeksNumber);\n            // setItemInLocalStorage(\"index\",weeksNumber)\n            setNumberOfWeeks(weeksNumber);\n\n            const index = weeksNumber - 1 < 0 ? 0 : weeksNumber - 1;\n            setPaginationIndex(index);\n\n            setWeeklyArry(item.productionPreparation);\n\n            const weekOfTheYearData = item.productionPreparation.filter((val) => {\n                return val.weekOfYear === (weekOfTheYear).toString()\n            });\n\n            const getFirstDayOfTheWeek = weekOfTheYearData.map((data) => {\n              return data.Date;\n            })\n\n            setFirstDayOfTheWeek(getFirstDayOfTheWeek[0])\n\n            setAllMenuItems(weekOfTheYearData);\n\n            const productionInputsData = weekOfTheYearData.map((data) => {\n                return data.productionWasteWeek[indexNumber]\n            })\n\n            const productionInputsDataAfterFiltered = filterOutEmptyObjects(productionInputsData[0])\n            setProductionInputs(productionInputsDataAfterFiltered)\n            return \"\"\n        })\n    }).catch((err) =>{\n        console.log(\"err\",err)\n    })\n}\n\nconst filterOutEmptyObjects = (data) => {\n    const results = data.filter((item, i) => {\n      return item.productionFood !== \"\";\n    })\n    return results;\n}\n\nconst filterMenuItems = (selectedPage) => {\n  const menuItemsForSelectedPage = allMenuItems.map((data) => {\n    return data.productionWasteWeek[selectedPage]\n  })\n\n  const dailyMenuInputsDataAfterFiltered = filterOutEmptyObjects(menuItemsForSelectedPage[0])\n  setProductionInputs(dailyMenuInputsDataAfterFiltered)\n  return \"\"\n\n};\n\nconst filterbyWeeks = (data, pageNumber) => {\n  setAllMenuItems([data])\n  const prodWasteWeek = filterOutEmptyObjects(data.productionWasteWeek[pageNumber])\n  setProductionInputs(prodWasteWeek)\n  setFirstDayOfTheWeek(data.Date)\n  return \"\"\n};\n\n  return (\n    <ProductionPreparationContext.Provider\n      value={{\n        siteName,\n        companyName,\n        id,\n        filterOutEmptyObjects,\n        index,\n        filterMenuItems,\n        firstDayOfTheWeek,\n        updateProductionInputs,\n        productionInputs,\n        numberOfWeeks,\n        weeklyArry,\n        filterbyWeeks,\n        weeklyStartDateArry,\n        weeklyNumbers,\n        paginationIndex\n      }}\n    >\n      {props.children}\n    </ProductionPreparationContext.Provider>\n  )\n}\n\nexport default ProductionPreparationProvider"]},"metadata":{},"sourceType":"module"}