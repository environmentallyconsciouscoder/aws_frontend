{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/reports/hourly-waste-report.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Chart from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"chartjs-plugin-annotation\";\nimport useWindowDimensions from \"../../libs/use-window-dimensions\";\nimport { WasteCapContext } from \"../../../../contexts/waste-cap-context\";\nimport { HourlyFoodWasteContext } from \"../../../../contexts/hourly-food-waste-context\";\nimport { WasteLabelsContext } from \"../../../../contexts/waste-labels-context\";\nimport { AccordionHeading, AccordionBody } from \"../accordion\";\nimport { hourlyWasteDateConverter, maxNumForHourlyChartFunction, roundedUpNumberAndTurnBackToNumber } from \"../../../../utilities\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nChart.defaults.global.defaultFontFamily = \"CooperHewitt-Book\";\nChart.defaults.global.legend.display = false;\nChart.defaults.global.hover.intersect = false;\nChart.defaults.global.tooltips.enabled = false;\nexport default function HourlyWasteChart(props) {\n  const [tooltipIsOpen, setTooltipIsOpen] = React.useState(true);\n  const {\n    labels\n  } = useContext(WasteLabelsContext);\n  const {\n    hourlyWasteValues,\n    hourlyWasteSelector,\n    hourlyCoverWasteData,\n    hourlyPreparationWasteData,\n    hourlySpoilageWasteData,\n    showCoverWasteLabelRed,\n    handleHourlyWasteCategory,\n    hourlyWasteDate,\n    clickOnHourlyBarChart,\n    getIndexesForBackgroundColours,\n    showTooltip\n  } = useContext(HourlyFoodWasteContext);\n  const {\n    hourlyCoverWastes,\n    hourlySpoliageWastes,\n    hourlyPeparationWastes\n  } = useContext(WasteCapContext); //  console.log(\"hourlyCoverWaste\",hourlyCoverWaste)\n  //  console.log(\"hourlyPreparationWaste\",hourlyPreparationWaste)\n  //  console.log(\"hourlySpoilageWaste\",hourlySpoilageWaste)\n  //  console.log(\"hourlyCoverWasteData\",hourlyCoverWasteData)\n  //  console.log(\"hourlyPreparationWasteData\",hourlyPreparationWasteData)\n  //  console.log(\"hourlySpoilageWasteData\",hourlySpoilageWasteData)\n\n  const {\n    width\n  } = useWindowDimensions();\n  let hourlyWasteHeight = 129;\n  let hourlyWasteWidth = 400;\n  let fontSize = 12;\n  const [activeState, changeActiveState] = useState({\n    coverWaste: false,\n    spoliageWaste: false,\n    productionWaste: true\n  });\n  const [dailyWasteCappingInPounds, setDailyWasteCappingInPounds] = useState([]);\n  const [prepWasteCappingInPounds, setPrepWasteCappingInPounds] = useState([]);\n  const [spoilageWasteCappingInPounds, setSpoilageWasteCappingInPounds] = useState([]); // let hourlyWasteDataFormated = hourlyWasteValues ? hourlyWasteValues : []\n\n  let hourlyCoverWastesCap = hourlyCoverWastes ? hourlyCoverWastes : 0;\n  let hourlySpoliageWastesCap = hourlySpoliageWastes ? hourlySpoliageWastes : 0;\n  let hourlyPeparationWastesCap = hourlyPeparationWastes ? hourlyPeparationWastes : 0;\n  const [warning, setWarning] = useState(hourlyPeparationWastesCap);\n  const [displayValues, setDisplayValues] = useState([]); // let barColors = \"rgb(178, 191, 80)\";\n\n  const [appState, changeState] = useState({\n    activeObject: {\n      id: 2,\n      val: hourlyWasteSelector,\n      name: \"\"\n    },\n    objects: [{\n      id: 0,\n      val: \"C\",\n      name: \"COVER WASTE\"\n    }, {\n      id: 1,\n      val: \"S\",\n      name: \"SPOILAGE WASTE\"\n    }, {\n      id: 2,\n      val: \"P\",\n      name: \"PREPARATION WASTE\"\n    }]\n  });\n  let barColors = [\"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\", \"rgb(178, 191, 80)\"];\n  let indexes;\n  const targetsInPounds = {\n    dailyWasteCappingInPounds,\n    prepWasteCappingInPounds,\n    spoilageWasteCappingInPounds\n  };\n  const allCappings = {\n    hourlyCoverWastesCap,\n    hourlySpoliageWastesCap,\n    hourlyPeparationWastesCap\n  }; // if (targets) {\n  //   indexes = getIndexesForBackgroundColours(props.showPounds, targetsInPounds, allCappings)\n  // }\n\n  indexes = getIndexesForBackgroundColours(props.showPounds, targetsInPounds, allCappings);\n\n  if (indexes) {\n    if (appState.activeObject.name === \"PREPARATION WASTE\") {\n      indexes.prepWasteOverTargetIndexArray.map(data => {\n        barColors[data] = \"rgba(255, 0, 0, 0.9)\";\n        return \"\";\n      });\n    } else if (appState.activeObject.name === \"COVER WASTE\") {\n      indexes.coverWasteOverTargetIndexArray.map(data => {\n        barColors[data] = \"rgba(255, 0, 0, 0.9)\";\n        return \"\";\n      });\n    } else if (appState.activeObject.name === \"SPOILAGE WASTE\") {\n      indexes.spoilageWasteOverTargetIndexArray.map(data => {\n        barColors[data] = \"rgba(255, 0, 0, 0.9)\";\n        return \"\";\n      });\n    }\n  }\n\n  useEffect(() => {\n    const dailyWasteWarningInPounds = roundedUpNumberAndTurnBackToNumber(hourlyCoverWastes * 2.775);\n    const prepWasteWarningInPounds = roundedUpNumberAndTurnBackToNumber(hourlyPeparationWastes * 2.775);\n    const spoilageWasteWarningInPounds = roundedUpNumberAndTurnBackToNumber(hourlySpoliageWastes * 2.775);\n    setDailyWasteCappingInPounds(dailyWasteWarningInPounds);\n    setPrepWasteCappingInPounds(prepWasteWarningInPounds);\n    setSpoilageWasteCappingInPounds(spoilageWasteWarningInPounds);\n    toggleActive(hourlyWasteSelector);\n    setDisplayValues(hourlyWasteValues);\n\n    if (props.showHourlyChart && showTooltip) {\n      setTooltipIsOpen(true);\n    } else {\n      setTooltipIsOpen(false);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [hourlyPeparationWastesCap, hourlyCoverWastesCap, hourlySpoliageWastesCap, hourlyWasteSelector, hourlyWasteValues, props]);\n\n  if (width <= 700) {\n    hourlyWasteWidth = 400;\n    hourlyWasteHeight = 200;\n    fontSize = 12 * 0.60;\n  }\n\n  let maxNumForHourlyChart = maxNumForHourlyChartFunction(displayValues);\n  let maxNumForHourlyChartInPounds = maxNumForHourlyChart * 2.775;\n\n  function toggleActive(type) {\n    switch (type) {\n      case \"cover\":\n        changeActiveState({\n          coverWaste: true,\n          spoliageWaste: false,\n          productionWaste: false\n        });\n        changeState({ ...appState,\n          activeObject: appState.objects[0]\n        });\n        setWarning(hourlyCoverWastesCap);\n        break;\n\n      case \"production\":\n        changeActiveState({\n          coverWaste: false,\n          spoliageWaste: false,\n          productionWaste: true\n        });\n        changeState({ ...appState,\n          activeObject: appState.objects[2]\n        });\n        setWarning(hourlyPeparationWastesCap);\n        break;\n\n      case \"spoliage\":\n        changeActiveState({\n          coverWaste: false,\n          spoliageWaste: true,\n          productionWaste: false\n        });\n        changeState({ ...appState,\n          activeObject: appState.objects[1]\n        });\n        setWarning(hourlySpoliageWastesCap);\n        break;\n\n      default:\n    }\n  } // const coverWasteLableRed = showCoverWasteLabelRed(hourlyCoverWastesCap,hourlyCoverWaste, props.showPounds, converterValue, dailyWasteCappingInPounds)\n  // const prepWasteLableRed = showCoverWasteLabelRed(hourlyPeparationWastesCap,hourlyPreparationWaste, props.showPounds, converterValue, prepWasteCappingInPounds)\n  // const spoilageWasteLableRed = showCoverWasteLabelRed(hourlySpoliageWastesCap,hourlySpoilageWaste, props.showPounds, converterValue, spoilageWasteCappingInPounds)\n\n\n  const coverWasteLableRed = showCoverWasteLabelRed(hourlyCoverWastesCap, hourlyCoverWasteData, props.showPounds, dailyWasteCappingInPounds);\n  const prepWasteLableRed = showCoverWasteLabelRed(hourlyPeparationWastesCap, hourlyPreparationWasteData, props.showPounds, prepWasteCappingInPounds);\n  const spoilageWasteLableRed = showCoverWasteLabelRed(hourlySpoliageWastesCap, hourlySpoilageWasteData, props.showPounds, spoilageWasteCappingInPounds);\n  let hourlyWasteXaxisColors;\n\n  if (props.showDarkTheme) {\n    hourlyWasteXaxisColors = \"rgb(255, 231, 227)\";\n  } else {\n    hourlyWasteXaxisColors = \"rgb(133, 165, 101)\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.hideReport ? \"HourWasteChart displayNone\" : \"HourWasteChart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AccordionHeading, {\n    color: \"primPurpleBackgroundColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, \"HOURLY WASTE\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => props.handleChangeForCheckedAndAccordion(!props.showHourlyChart, \"hourlyChartSwitch\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, props.showHourlyChart ? \"X\" : \"| | | \"))), /*#__PURE__*/React.createElement(AccordionBody, {\n    open: props.showHourlyChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem\" : \"originalTheme__reportBackgroundColor addPaddingOfHalveRem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"HourWasteChart--spacing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"report-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }, props.siteName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"b\", {\n    className: \"HourWasteChart--dateStyling\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, \" \", hourlyWasteDateConverter(hourlyWasteDate), \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"HourWasteChart__headingWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-title center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }, \"WASTE BY TIME OF DAY\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyMarginRightAndLeft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 71\n    }\n  }, props.showPounds ? \"(£)\" : \"(Kg)\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"HourWasteChart--spacing--secondRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"HourWasteChart--spacing--secondRow--csp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, clickOnHourlyBarChart && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: activeState.coverWaste ? \"active\" : \"inactive\",\n    id: 0,\n    onClick: () => {\n      const label = labels.titleLabels.c;\n      toggleActive(label);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    open: tooltipIsOpen,\n    onClose: () => setTooltipIsOpen(false),\n    title: \"clickable waste stream\",\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"C\",\n    onClick: handleHourlyWasteCategory,\n    className: \"HourWasteChart--CSPlabel\",\n    className: activeState.coverWaste ? \"reduceOpacity\" : \"\",\n    className: coverWasteLableRed ? \"showRedColor\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 21\n    }\n  }, labels.acronyms.c))), /*#__PURE__*/React.createElement(\"div\", {\n    className: activeState.spoliageWaste ? \"active\" : \"inactive\",\n    id: 1,\n    onClick: () => {\n      const label = labels.titleLabels.s;\n      toggleActive(label);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    open: tooltipIsOpen,\n    onClose: () => setTooltipIsOpen(false) // title=\"click on C, S or P waste stream\"\n    ,\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"S\",\n    onClick: handleHourlyWasteCategory,\n    className: \"HourWasteChart--CSPlabel\",\n    className: activeState.spoliageWaste ? \"reduceOpacity\" : \"\",\n    className: spoilageWasteLableRed ? \"showRedColor\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 21\n    }\n  }, labels.acronyms.s))), /*#__PURE__*/React.createElement(\"div\", {\n    className: activeState.productionWaste ? \"active\" : \"inactive\",\n    id: 2,\n    onClick: () => {\n      const label = labels.titleLabels.p;\n      toggleActive(label);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    open: tooltipIsOpen,\n    onClose: () => setTooltipIsOpen(false) // title=\"click on C, S or P waste stream\"\n    ,\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"P\",\n    onClick: handleHourlyWasteCategory,\n    className: \"HourWasteChart--CSPlabel\",\n    className: activeState.productionWaste ? \"reduceOpacity\" : \"\",\n    className: prepWasteLableRed ? \"showRedColor\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 1\n    }\n  }, labels.acronyms.p))))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"HourWasteChart--CSPheadingSize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 13\n    }\n  }, appState.activeObject.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"capping__hourWasteChartWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    className: \"capping\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 17\n    }\n  }, \"Cap\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"capping__text applyMarginRightAndLeft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"darkTheme__selectedLabelColor cooperHewittBold\" : \"applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 19\n    }\n  }, \" \", labels.acronyms.c)), /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"darkTheme__numberColor\" : \"applyBlueTuckGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 19\n    }\n  }, props.showPounds ? dailyWasteCappingInPounds : roundedUpNumberAndTurnBackToNumber(hourlyCoverWastesCap)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"capping__text applyMarginRightAndLeft applyPurpleColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"darkTheme__selectedLabelColor cooperHewittBold\" : \"applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 19\n    }\n  }, \" \", labels.acronyms.s)), /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"darkTheme__numberColor\" : \"applyBlueTuckGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 19\n    }\n  }, props.showPounds ? spoilageWasteCappingInPounds : roundedUpNumberAndTurnBackToNumber(hourlySpoliageWastesCap)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"darkTheme__selectedLabelColor cooperHewittBold\" : \"applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 19\n    }\n  }, \" \", labels.acronyms.p)), /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"darkTheme__numberColor\" : \"applyBlueTuckGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 19\n    }\n  }, props.showPounds ? prepWasteCappingInPounds : roundedUpNumberAndTurnBackToNumber(hourlyPeparationWastesCap))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],\n      datasets: [{\n        data: props.showPounds ? displayValues.map(data => {\n          return roundedUpNumberAndTurnBackToNumber(data * 2.775);\n        }) : displayValues,\n        fill: false,\n        backgroundColor: barColors,\n        minBarLength: 0.3,\n        barPercentage: 0.3,\n        categoryPercentage: 0.7\n      }]\n    },\n    width: hourlyWasteWidth,\n    height: hourlyWasteHeight,\n    options: {\n      responsive: true,\n      maintainAspectRatio: true,\n      scales: {\n        xAxes: [{\n          gridLines: {\n            display: false\n          },\n          ticks: {\n            fontColor: hourlyWasteXaxisColors,\n            fontSize\n          }\n        }],\n        yAxes: [{\n          gridLines: {\n            display: false\n          },\n          ticks: {\n            maxTicksLimit: 4,\n            display: false,\n            beginAtZero: true,\n            max: props.showPounds ? maxNumForHourlyChartInPounds : Math.round(maxNumForHourlyChart)\n          }\n        }]\n      },\n      plugins: {\n        datalabels: {\n          display: true,\n          // color: \"rgb(47, 64, 30)\",\n          anchor: \"end\",\n          align: \"end\",\n          clamp: true,\n          backgroundColor: null,\n          borderColor: null,\n          borderRadius: 4,\n          borderWidth: 1,\n          font: {\n            size: fontSize,\n            weight: 900\n          },\n          offset: 4,\n          padding: 0,\n          color: function (context) {\n            var index = context.dataIndex;\n            var value = context.dataset.data[index];\n            let warningKGConverted;\n\n            if (props.showPounds) {\n              warningKGConverted = parseInt(warning * 2.775);\n              let numberValue = parseInt(value);\n\n              if (numberValue >= warningKGConverted) {\n                return \"rgba(255, 0, 0, 0.9)\";\n              } else {\n                return \"rgba(133, 165, 101, 1)\";\n              }\n            } else {\n              let numberValue = parseInt(value);\n\n              if (numberValue >= parseInt(warning)) {\n                return \"rgba(255, 0, 0, 0.9)\";\n              } else {\n                if (props.showDarkTheme) {\n                  return \"rgb(255, 231, 227)\";\n                } else {\n                  return \"rgba(133, 165, 101, 1)\";\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weeklyWaste__message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 11\n    }\n  }, \"(summer and winter time are not change on the day but on the month)\"))));\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/reports/hourly-waste-report.js"],"names":["React","useState","useEffect","useContext","Chart","Bar","useWindowDimensions","WasteCapContext","HourlyFoodWasteContext","WasteLabelsContext","AccordionHeading","AccordionBody","hourlyWasteDateConverter","maxNumForHourlyChartFunction","roundedUpNumberAndTurnBackToNumber","Tooltip","defaults","global","defaultFontFamily","legend","display","hover","intersect","tooltips","enabled","HourlyWasteChart","props","tooltipIsOpen","setTooltipIsOpen","labels","hourlyWasteValues","hourlyWasteSelector","hourlyCoverWasteData","hourlyPreparationWasteData","hourlySpoilageWasteData","showCoverWasteLabelRed","handleHourlyWasteCategory","hourlyWasteDate","clickOnHourlyBarChart","getIndexesForBackgroundColours","showTooltip","hourlyCoverWastes","hourlySpoliageWastes","hourlyPeparationWastes","width","hourlyWasteHeight","hourlyWasteWidth","fontSize","activeState","changeActiveState","coverWaste","spoliageWaste","productionWaste","dailyWasteCappingInPounds","setDailyWasteCappingInPounds","prepWasteCappingInPounds","setPrepWasteCappingInPounds","spoilageWasteCappingInPounds","setSpoilageWasteCappingInPounds","hourlyCoverWastesCap","hourlySpoliageWastesCap","hourlyPeparationWastesCap","warning","setWarning","displayValues","setDisplayValues","appState","changeState","activeObject","id","val","name","objects","barColors","indexes","targetsInPounds","allCappings","showPounds","prepWasteOverTargetIndexArray","map","data","coverWasteOverTargetIndexArray","spoilageWasteOverTargetIndexArray","dailyWasteWarningInPounds","prepWasteWarningInPounds","spoilageWasteWarningInPounds","toggleActive","showHourlyChart","maxNumForHourlyChart","maxNumForHourlyChartInPounds","type","coverWasteLableRed","prepWasteLableRed","spoilageWasteLableRed","hourlyWasteXaxisColors","showDarkTheme","hideReport","handleChangeForCheckedAndAccordion","siteName","label","titleLabels","c","acronyms","s","p","datasets","fill","backgroundColor","minBarLength","barPercentage","categoryPercentage","responsive","maintainAspectRatio","scales","xAxes","gridLines","ticks","fontColor","yAxes","maxTicksLimit","beginAtZero","max","Math","round","plugins","datalabels","anchor","align","clamp","borderColor","borderRadius","borderWidth","font","size","weight","offset","padding","color","context","index","dataIndex","value","dataset","warningKGConverted","parseInt","numberValue"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport Chart from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"chartjs-plugin-annotation\";\nimport useWindowDimensions from \"../../libs/use-window-dimensions\";\n\nimport { WasteCapContext } from \"../../../../contexts/waste-cap-context\";\nimport { HourlyFoodWasteContext } from \"../../../../contexts/hourly-food-waste-context\";\n\nimport { WasteLabelsContext } from \"../../../../contexts/waste-labels-context\";\n\nimport { AccordionHeading, AccordionBody } from \"../accordion\"\n\nimport { hourlyWasteDateConverter, maxNumForHourlyChartFunction, roundedUpNumberAndTurnBackToNumber } from \"../../../../utilities\";\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nChart.defaults.global.defaultFontFamily = \"CooperHewitt-Book\";\nChart.defaults.global.legend.display = false;\nChart.defaults.global.hover.intersect = false;\nChart.defaults.global.tooltips.enabled = false;\n\nexport default function HourlyWasteChart(props) {\n\n  const [tooltipIsOpen, setTooltipIsOpen] = React.useState(true);\n\n  const {\n    labels\n   } = useContext(WasteLabelsContext);\n\n  const {\n    hourlyWasteValues,\n    hourlyWasteSelector,\n\n    hourlyCoverWasteData,\n    hourlyPreparationWasteData,\n    hourlySpoilageWasteData,\n\n    showCoverWasteLabelRed,\n    handleHourlyWasteCategory,\n\n    hourlyWasteDate,\n    clickOnHourlyBarChart,\n\n    getIndexesForBackgroundColours,\n\n    showTooltip\n   } = useContext(HourlyFoodWasteContext);\n\n\n  const {\n    hourlyCoverWastes,\n    hourlySpoliageWastes,\n    hourlyPeparationWastes\n   } = useContext(WasteCapContext);\n\n  //  console.log(\"hourlyCoverWaste\",hourlyCoverWaste)\n  //  console.log(\"hourlyPreparationWaste\",hourlyPreparationWaste)\n  //  console.log(\"hourlySpoilageWaste\",hourlySpoilageWaste)\n\n  //  console.log(\"hourlyCoverWasteData\",hourlyCoverWasteData)\n  //  console.log(\"hourlyPreparationWasteData\",hourlyPreparationWasteData)\n  //  console.log(\"hourlySpoilageWasteData\",hourlySpoilageWasteData)\n\n  const { width } = useWindowDimensions();\n  let hourlyWasteHeight = 129;\n  let hourlyWasteWidth = 400;\n  let fontSize = 12\n\n  const [activeState, changeActiveState] = useState({\n    coverWaste: false,\n    spoliageWaste: false,\n    productionWaste: true,\n  });\n\n\n  const [ dailyWasteCappingInPounds, setDailyWasteCappingInPounds ] = useState([])\n  const [ prepWasteCappingInPounds, setPrepWasteCappingInPounds ] = useState([])\n  const [ spoilageWasteCappingInPounds, setSpoilageWasteCappingInPounds ] = useState([])\n\n  // let hourlyWasteDataFormated = hourlyWasteValues ? hourlyWasteValues : []\n\n  let hourlyCoverWastesCap = hourlyCoverWastes ? hourlyCoverWastes : 0\n  let hourlySpoliageWastesCap = hourlySpoliageWastes ? hourlySpoliageWastes : 0\n  let hourlyPeparationWastesCap = hourlyPeparationWastes ? hourlyPeparationWastes : 0\n\n  const [warning, setWarning] = useState(hourlyPeparationWastesCap);\n\n  const [ displayValues, setDisplayValues ] = useState([])\n\n  // let barColors = \"rgb(178, 191, 80)\";\n\n  const [appState, changeState] = useState({\n    activeObject: {\n      id: 2,\n      val: hourlyWasteSelector,\n      name: \"\",\n    },\n    objects: [\n      { id: 0, val: \"C\", name: \"COVER WASTE\" },\n      { id: 1, val: \"S\", name: \"SPOILAGE WASTE\" },\n      { id: 2, val: \"P\", name: \"PREPARATION WASTE\" },\n    ],\n  });\n\n  let barColors = [\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n  ];\n\n\n  let indexes;\n\n  const targetsInPounds = {\n    dailyWasteCappingInPounds,\n    prepWasteCappingInPounds,\n    spoilageWasteCappingInPounds\n  }\n\n  const allCappings = {\n    hourlyCoverWastesCap,\n    hourlySpoliageWastesCap,\n    hourlyPeparationWastesCap\n  }\n\n  // if (targets) {\n  //   indexes = getIndexesForBackgroundColours(props.showPounds, targetsInPounds, allCappings)\n  // }\n  indexes = getIndexesForBackgroundColours(props.showPounds, targetsInPounds, allCappings)\n\n\n  if (indexes) {\n    if (appState.activeObject.name === \"PREPARATION WASTE\") {\n      indexes.prepWasteOverTargetIndexArray.map((data) => {\n        barColors[data] = \"rgba(255, 0, 0, 0.9)\";\n        return \"\"\n      })\n    } else if (appState.activeObject.name === \"COVER WASTE\") {\n      indexes.coverWasteOverTargetIndexArray.map((data) => {\n        barColors[data] = \"rgba(255, 0, 0, 0.9)\";\n        return \"\"\n      })\n    } else if (appState.activeObject.name === \"SPOILAGE WASTE\") {\n      indexes.spoilageWasteOverTargetIndexArray.map((data) => {\n        barColors[data] = \"rgba(255, 0, 0, 0.9)\";\n        return \"\"\n      })\n    }\n  }\n\n\n\n\n  useEffect(() => {\n    const dailyWasteWarningInPounds = roundedUpNumberAndTurnBackToNumber(hourlyCoverWastes * 2.775)\n    const prepWasteWarningInPounds = roundedUpNumberAndTurnBackToNumber(hourlyPeparationWastes * 2.775)\n    const spoilageWasteWarningInPounds = roundedUpNumberAndTurnBackToNumber(hourlySpoliageWastes * 2.775)\n\n    setDailyWasteCappingInPounds(dailyWasteWarningInPounds)\n    setPrepWasteCappingInPounds(prepWasteWarningInPounds)\n    setSpoilageWasteCappingInPounds(spoilageWasteWarningInPounds)\n\n\n    toggleActive(hourlyWasteSelector)\n\n    setDisplayValues(hourlyWasteValues)\n\n    if (props.showHourlyChart && showTooltip){\n      setTooltipIsOpen(true)\n    } else {\n      setTooltipIsOpen(false)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n}, [ hourlyPeparationWastesCap, hourlyCoverWastesCap, hourlySpoliageWastesCap, hourlyWasteSelector, hourlyWasteValues, props]);\n\n\n  if (width <= 700) {\n    hourlyWasteWidth = 400;\n    hourlyWasteHeight = 200;\n    fontSize = 12 * 0.60\n  }\n\n  let maxNumForHourlyChart = maxNumForHourlyChartFunction(\n    displayValues\n  );\n\n  let maxNumForHourlyChartInPounds = maxNumForHourlyChart * 2.775;\n\n  function toggleActive(type) {\n    switch (type) {\n      case \"cover\":\n        changeActiveState({\n          coverWaste: true,\n          spoliageWaste: false,\n          productionWaste: false,\n        });\n        changeState({ ...appState, activeObject: appState.objects[0] });\n          setWarning(hourlyCoverWastesCap)\n\n        break;\n      case \"production\":\n        changeActiveState({\n          coverWaste: false,\n          spoliageWaste: false,\n          productionWaste: true,\n        });\n        changeState({ ...appState, activeObject: appState.objects[2] });\n\n          setWarning(hourlyPeparationWastesCap)\n\n        break;\n      case \"spoliage\":\n        changeActiveState({\n          coverWaste: false,\n          spoliageWaste: true,\n          productionWaste: false,\n        });\n        changeState({ ...appState, activeObject: appState.objects[1] });\n\n        setWarning(hourlySpoliageWastesCap)\n\n        break;\n      default:\n    }\n  }\n\n  // const coverWasteLableRed = showCoverWasteLabelRed(hourlyCoverWastesCap,hourlyCoverWaste, props.showPounds, converterValue, dailyWasteCappingInPounds)\n  // const prepWasteLableRed = showCoverWasteLabelRed(hourlyPeparationWastesCap,hourlyPreparationWaste, props.showPounds, converterValue, prepWasteCappingInPounds)\n  // const spoilageWasteLableRed = showCoverWasteLabelRed(hourlySpoliageWastesCap,hourlySpoilageWaste, props.showPounds, converterValue, spoilageWasteCappingInPounds)\n\n\n  const coverWasteLableRed = showCoverWasteLabelRed(hourlyCoverWastesCap,hourlyCoverWasteData, props.showPounds, dailyWasteCappingInPounds)\n  const prepWasteLableRed = showCoverWasteLabelRed(hourlyPeparationWastesCap,hourlyPreparationWasteData, props.showPounds, prepWasteCappingInPounds)\n  const spoilageWasteLableRed = showCoverWasteLabelRed(hourlySpoliageWastesCap,hourlySpoilageWasteData, props.showPounds, spoilageWasteCappingInPounds)\n\n\n  let hourlyWasteXaxisColors;\n\n  if (props.showDarkTheme) {\n    hourlyWasteXaxisColors =   \"rgb(255, 231, 227)\";\n  } else {\n    hourlyWasteXaxisColors =   \"rgb(133, 165, 101)\";\n  }\n\n  return (\n    <div className={props.hideReport ? \"HourWasteChart displayNone\":\"HourWasteChart\"}>\n\n      <AccordionHeading color={\"primPurpleBackgroundColor\"}>\n\n        <div className=\"section-title\">HOURLY WASTE</div>\n        <div className=\"container\">\n            <span onClick={() => props.handleChangeForCheckedAndAccordion(!props.showHourlyChart, \"hourlyChartSwitch\")}>\n              {props.showHourlyChart ? (\"X\"):\"| | | \"}\n            </span>\n        </div>\n\n      </AccordionHeading>\n\n      <AccordionBody open={props.showHourlyChart}>\n\n        <div className= { props.showDarkTheme ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem\": \"originalTheme__reportBackgroundColor addPaddingOfHalveRem\"}>\n\n          <div className=\"HourWasteChart--spacing\">\n            <div className=\"report-subtitle\">{props.siteName}</div>\n            <p>\n                {\" \"}\n                <b className=\"HourWasteChart--dateStyling\"> {hourlyWasteDateConverter(hourlyWasteDate)} </b>\n              </p>\n          </div>\n\n          <div className=\"HourWasteChart__headingWrapper\">\n            <div className=\"section-title center\">WASTE BY TIME OF DAY<div className=\"applyMarginRightAndLeft\">{props.showPounds? \"(£)\" : \"(Kg)\" }</div></div>\n          </div>\n\n          <div className=\"HourWasteChart--spacing--secondRow\">\n            <div className=\"HourWasteChart--spacing--secondRow--csp\">\n              {clickOnHourlyBarChart && (\n                <>\n                  <div\n                    className={activeState.coverWaste ? \"active\" : \"inactive\"}\n                    id={0}\n                    onClick={() => {\n                      const label = labels.titleLabels.c\n                      toggleActive(label);\n                    }}\n                  >\n\n                  <Tooltip\n                    open={tooltipIsOpen}\n                    onClose={() => setTooltipIsOpen(false)}\n                    title=\"clickable waste stream\"\n                    arrow\n                  >\n\n                    <h2\n                      id={\"C\"}\n                      onClick={handleHourlyWasteCategory}\n                      className=\"HourWasteChart--CSPlabel\"\n                      className={activeState.coverWaste ? \"reduceOpacity\" : \"\"}\n                      className={coverWasteLableRed? \"showRedColor\": \"\"}\n                    >\n                      {labels.acronyms.c}\n                    </h2>\n\n                    </Tooltip>\n\n                  </div>\n                  <div\n                    className={activeState.spoliageWaste ? \"active\" : \"inactive\"}\n                    id={1}\n                    onClick={() => {\n                      const label = labels.titleLabels.s\n                      toggleActive(label);\n                    }}\n                  >\n\n                    <Tooltip\n                    open={tooltipIsOpen}\n                    onClose={() => setTooltipIsOpen(false)}\n                    // title=\"click on C, S or P waste stream\"\n                    arrow\n                  >\n\n                    <h2\n                      id={\"S\"}\n                      onClick={handleHourlyWasteCategory}\n                      className=\"HourWasteChart--CSPlabel\"\n                      className={activeState.spoliageWaste ? \"reduceOpacity\" : \"\"}\n                      className={spoilageWasteLableRed ? \"showRedColor\": \"\"}\n                    >\n                      {labels.acronyms.s}\n                    </h2>\n\n                    </Tooltip>\n\n\n                  </div>\n                  <div\n                    className={activeState.productionWaste ? \"active\" : \"inactive\"}\n                    id={2}\n                    onClick={() => {\n                      const label = labels.titleLabels.p\n                      toggleActive(label);\n                    }}\n                  >\n\n                    <Tooltip\n                    open={tooltipIsOpen}\n                    onClose={() => setTooltipIsOpen(false)}\n                    // title=\"click on C, S or P waste stream\"\n                    arrow\n                  >\n\n<h2\n                      id={\"P\"}\n                      onClick={handleHourlyWasteCategory}\n                      className=\"HourWasteChart--CSPlabel\"\n                      className={activeState.productionWaste ? \"reduceOpacity\" : \"\"}\n                      className={prepWasteLableRed ? \"showRedColor\": \"\"}\n                    >\n                      {labels.acronyms.p}\n                    </h2>\n\n\n                    </Tooltip>\n\n\n                  </div>\n                </>\n              )}\n            </div>\n            <p className=\"HourWasteChart--CSPheadingSize\">{appState.activeObject.name}</p>\n\n            <div className=\"capping__hourWasteChartWrapper\">\n              <b className=\"capping\">\n                <div className=\"applyPurpleColor cooperHewittBold\">Cap</div>\n                <div className=\"capping__text applyMarginRightAndLeft\">\n                  <div className={props.showDarkTheme? \"darkTheme__selectedLabelColor cooperHewittBold\" : \"applyPurpleColor cooperHewittBold\"}> {labels.acronyms.c}</div>\n                </div>\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                    {props.showPounds ? dailyWasteCappingInPounds : roundedUpNumberAndTurnBackToNumber(hourlyCoverWastesCap)}\n                  </div>\n                <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor\">\n                  <div className={props.showDarkTheme? \"darkTheme__selectedLabelColor cooperHewittBold\" : \"applyPurpleColor cooperHewittBold\"}> {labels.acronyms.s}</div>\n                </div>\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                    {props.showPounds ? spoilageWasteCappingInPounds : roundedUpNumberAndTurnBackToNumber(hourlySpoliageWastesCap)}\n                  </div>\n                <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\">\n                  <div className={props.showDarkTheme? \"darkTheme__selectedLabelColor cooperHewittBold\" : \"applyPurpleColor cooperHewittBold\"}> {labels.acronyms.p}</div>\n                </div>\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                    {props.showPounds ? prepWasteCappingInPounds : roundedUpNumberAndTurnBackToNumber(hourlyPeparationWastesCap)}\n                  </div>\n                </b>\n              </div>\n\n          </div>\n\n          <div>\n            <div>\n              <Bar\n                data={{\n                  labels: [\n                    0,\n                    1,\n                    2,\n                    3,\n                    4,\n                    5,\n                    6,\n                    7,\n                    8,\n                    9,\n                    10,\n                    11,\n                    12,\n                    13,\n                    14,\n                    15,\n                    16,\n                    17,\n                    18,\n                    19,\n                    20,\n                    21,\n                    22,\n                    23,\n                  ],\n                  datasets: [\n                    {\n                      data: props.showPounds\n                        ? displayValues.map((data) => {\n                            return roundedUpNumberAndTurnBackToNumber(data * 2.775);\n                        }) : displayValues,\n                      fill: false,\n                      backgroundColor: barColors,\n                      minBarLength: 0.3,\n                      barPercentage: 0.3,\n                      categoryPercentage: 0.7,\n                    },\n                  ],\n                }}\n                width={hourlyWasteWidth}\n                height={hourlyWasteHeight}\n                options={{\n                  responsive: true,\n                  maintainAspectRatio: true,\n                  scales: {\n                    xAxes: [\n                      {\n                        gridLines: {\n                          display: false,\n                        },\n                        ticks: {\n                          fontColor: hourlyWasteXaxisColors,\n                          fontSize\n                        },\n                      },\n                    ],\n                    yAxes: [\n                      {\n                        gridLines: {\n                          display: false,\n                        },\n                        ticks: {\n                          maxTicksLimit: 4,\n                          display: false,\n                          beginAtZero: true,\n                          max: props.showPounds\n                          ? maxNumForHourlyChartInPounds: Math.round(maxNumForHourlyChart)\n                        },\n                      },\n                    ],\n                  },\n\n                  plugins: {\n                    datalabels: {\n                      display: true,\n                      // color: \"rgb(47, 64, 30)\",\n                      anchor: \"end\",\n                      align: \"end\",\n                      clamp: true,\n                      backgroundColor: null,\n                      borderColor: null,\n                      borderRadius: 4,\n                      borderWidth: 1,\n                      font: {\n                        size: fontSize,\n                        weight: 900,\n                      },\n                      offset: 4,\n                      padding: 0,\n                      color: function (context) {\n                          var index = context.dataIndex;\n                          var value = context.dataset.data[index];\n                          let warningKGConverted;\n\n                            if (props.showPounds) {\n\n                              warningKGConverted = parseInt(warning * 2.775);\n\n                              let numberValue = parseInt(value)\n\n                              if (numberValue >= warningKGConverted) {\n                                return \"rgba(255, 0, 0, 0.9)\";\n                              } else {\n                                return \"rgba(133, 165, 101, 1)\";\n                              }\n\n                            } else {\n\n                              let numberValue = parseInt(value)\n\n                              if (numberValue >= parseInt(warning)) {\n                                return \"rgba(255, 0, 0, 0.9)\";\n                              } else {\n\n                                  if (props.showDarkTheme) {\n                                    return \"rgb(255, 231, 227)\";\n                                  } else {\n                                    return \"rgba(133, 165, 101, 1)\";\n                                  }\n\n                              }\n\n                            }\n                        },\n                    },\n                  },\n                }}\n              />\n            </div>\n          </div>\n\n          <div className=\"weeklyWaste__message\">\n              (summer and winter time are not change on the day but on the month)\n          </div>\n\n        </div>\n\n      </AccordionBody>\n\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}