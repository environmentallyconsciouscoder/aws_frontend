{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/reports/weekly-waste-report.js\";\nimport React, { useContext } from \"react\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport { WasteCapContext } from \"../../../../contexts/waste-cap-context\";\nimport { WeeklyWasteContext } from \"../../../../contexts/weekly-waste-context\";\nimport { AccordionHeading, AccordionBody } from \"../accordion\";\nimport { wasteDailyDateRange, getLocalStorageData, roundedUpNumberAndTurnBackToNumber } from \"../../../../utilities\";\n\nfunction ReportOne({\n  showDarkTheme,\n  showWeeklyChart,\n  handleChangeForCheckedAndAccordion,\n  hideReport\n}) {\n  const {\n    weeklyCoverWastes,\n    weeklySpoliageWastes,\n    weeklyPeparationWastes,\n    showPounds\n  } = useContext(WasteCapContext);\n  const {\n    // cover,\n    // production,\n    // spoliage,\n    coverWaste,\n    productionWaste,\n    spoliageWaste,\n    siteName\n  } = useContext(WeeklyWasteContext);\n  let cover = 0;\n  let production = 0;\n  let spoliage = 0;\n\n  if (showPounds) {\n    cover = roundedUpNumberAndTurnBackToNumber(coverWaste * 2.775);\n    spoliage = roundedUpNumberAndTurnBackToNumber(spoliageWaste * 2.775);\n    production = roundedUpNumberAndTurnBackToNumber(productionWaste * 2.775);\n  } else {\n    cover = coverWaste;\n    spoliage = spoliageWaste;\n    production = productionWaste;\n  }\n\n  const totalWaste = parseInt(cover) + parseInt(spoliage) + parseInt(production);\n  let weeklyCoverCap = 0;\n  let weeklySpoliageCap = 0;\n  let weeklyPreparationCap = 0;\n\n  if (showPounds) {\n    weeklyCoverCap = weeklyCoverWastes * 2.775;\n    weeklySpoliageCap = weeklySpoliageWastes * 2.775;\n    weeklyPreparationCap = weeklyPeparationWastes * 2.775;\n  } else {\n    weeklyCoverCap = weeklyCoverWastes;\n    weeklySpoliageCap = weeklySpoliageWastes;\n    weeklyPreparationCap = weeklyPeparationWastes;\n  }\n\n  let coverWastepercentage;\n  let spoliageWastepercentage;\n  let productionWastepercentage;\n\n  if (isNaN(cover / weeklyCoverCap * 100)) {\n    coverWastepercentage = 100;\n  } else {\n    coverWastepercentage = cover / weeklyCoverCap * 100;\n  }\n\n  if (isNaN(spoliage / weeklySpoliageCap * 100)) {\n    spoliageWastepercentage = 100;\n  } else {\n    spoliageWastepercentage = spoliage / weeklySpoliageCap * 100;\n  }\n\n  if (isNaN(production / weeklyPreparationCap * 100)) {\n    productionWastepercentage = 100;\n  } else {\n    productionWastepercentage = production / weeklyPreparationCap * 100;\n  }\n\n  let totalWastepercentage;\n  const totalCapping = roundedUpNumberAndTurnBackToNumber(weeklyCoverCap + weeklySpoliageCap + weeklyPreparationCap);\n\n  if (isNaN(totalWaste / totalCapping * 100)) {\n    totalWastepercentage = 100;\n  } else {\n    totalWastepercentage = totalWaste / totalCapping * 100;\n  }\n\n  let totalWasteColor;\n\n  if (totalWaste >= totalCapping) {\n    totalWasteColor = \"rgba(255, 0, 0, 0.9)\";\n  } else if (totalWaste === 0) {\n    totalWasteColor = \"rgb(163, 181, 44)\";\n  } else {\n    totalWasteColor = \"rgb(47, 67, 30)\";\n  }\n\n  let coverWasteColor;\n\n  if (cover >= weeklyCoverCap) {\n    coverWasteColor = \"rgba(255, 0, 0, 0.9)\";\n  } else if (cover === 0) {\n    coverWasteColor = \"rgb(163, 181, 44)\";\n  } else {\n    coverWasteColor = \"rgb(47, 67, 30)\";\n  }\n\n  let spoliageWasteColor;\n\n  if (spoliage >= weeklySpoliageCap) {\n    spoliageWasteColor = \"rgba(255, 0, 0, 0.9)\";\n  } else if (spoliage === 0) {\n    spoliageWasteColor = \"rgb(163, 181, 44)\";\n  } else {\n    spoliageWasteColor = \"rgb(47, 67, 30)\";\n  }\n\n  let preparationWasteColor;\n\n  if (production >= weeklyPreparationCap) {\n    preparationWasteColor = \"rgba(255, 0, 0, 0.9)\";\n  } else if (production === 0) {\n    preparationWasteColor = \"rgb(163, 181, 44)\";\n  } else {\n    preparationWasteColor = \"rgb(47, 67, 30)\";\n  }\n\n  const xAxis = getLocalStorageData(\"dailyChartXaxis\");\n  let dateRangeLable = wasteDailyDateRange(xAxis);\n  let textColor;\n\n  if (showDarkTheme) {\n    textColor = \"rgb(255, 231, 227)\";\n  } else {\n    textColor = \"rgb(140, 112, 140)\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: hideReport ? \"dashboard__weeklyWaste displayNone\" : \"dashboard__weeklyWaste\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AccordionHeading, {\n    color: \"primPurpleBackgroundColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, \"WEEKLY WASTE\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => handleChangeForCheckedAndAccordion(!showWeeklyChart, \"weeklyChartSwitch\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, showWeeklyChart ? \"X\" : \"| | | \"))), /*#__PURE__*/React.createElement(AccordionBody, {\n    open: showWeeklyChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: showDarkTheme ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem\" : \"addPaddingOfHalveRem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__overviewSitesReportHeading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"report-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, siteName)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weeklyWaste__headingWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-title center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, \"WEEKLY WASTE\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyMarginRightAndLeft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 65\n    }\n  }, showPounds ? \"(Â£)\" : \"(Kg)\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__overviewSitesReport__capping\",\n    style: {\n      justifyContent: \"space-evenly\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"capping__weeklyWasteChart leftPadding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"capping__text applyPurpleColor cooperHewittBold capping__flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  }, \"Total\", /*#__PURE__*/React.createElement(\"div\", {\n    className: showDarkTheme ? \"darkTheme__numberColor\" : \"applyBlueTuckGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }, roundedUpNumberAndTurnBackToNumber(weeklyCoverCap + weeklySpoliageCap + weeklyPreparationCap))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"capping__text applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }, \"=\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, \"C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: showDarkTheme ? \"darkTheme__numberColor\" : \"applyBlueTuckGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, roundedUpNumberAndTurnBackToNumber(weeklyCoverCap)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, \"S\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: showDarkTheme ? \"darkTheme__numberColor\" : \"applyBlueTuckGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, roundedUpNumberAndTurnBackToNumber(weeklySpoliageCap)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }, \"P\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: showDarkTheme ? \"darkTheme__numberColor\" : \"applyBlueTuckGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, roundedUpNumberAndTurnBackToNumber(weeklyPreparationCap))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__overviewSitesReportProgressBarWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__weeklyWaste__progressBarWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, totalWaste >= totalCapping ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__warningText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, \"WARNING!\") : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgressbar, {\n    value: totalWastepercentage,\n    text: // showPounds ?  (`${totalWaste}` * 2.775).toFixed(0) : `${totalWaste}`\n    `${totalWaste}`,\n    styles: buildStyles({\n      textColor: textColor,\n      pathColor: totalWasteColor,\n      trailColor: \"rgb(163, 181, 44)\",\n      textSize: \"20px\",\n      strokeLinecap: \"butt\"\n    }),\n    strokeWidth: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__textSize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"foodWasteTrackingProgress__date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }, dateRangeLable))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__totalWasteValue--icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 15\n    }\n  }, \"=\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }\n  }, cover >= weeklyCoverCap ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__warningText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 19\n    }\n  }, \"WARNING!\") : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgressbar, {\n    value: coverWastepercentage,\n    text: // showPounds ?  (`${cover}` * 2.775).toFixed(0) : `${cover}`\n    `${cover}`,\n    styles: buildStyles({\n      textColor: textColor,\n      pathColor: coverWasteColor,\n      trailColor: \"rgb(163, 181, 44)\",\n      textSize: \"20px\",\n      strokeLinecap: \"butt\"\n    }),\n    strokeWidth: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__textSize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 23\n    }\n  }, \"C\"), \"OVER WASTE\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__totalWasteValue--icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 17\n    }\n  }, spoliage >= weeklySpoliageCap ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__warningText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 19\n    }\n  }, \"WARNING!\") : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(CircularProgressbar, {\n    value: spoliageWastepercentage,\n    text: // showPounds ?  (`${spoliage}` * 2.775).toFixed(0) : `${spoliage}`\n    `${spoliage}`,\n    styles: buildStyles({\n      textColor: textColor,\n      pathColor: spoliageWasteColor,\n      trailColor: \"rgb(163, 181, 44)\",\n      textSize: \"20px\",\n      strokeLinecap: \"butt\"\n    }),\n    strokeWidth: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__textSize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 25\n    }\n  }, \"S\"), \"POILAGE\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__totalWasteValue--icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 17\n    }\n  }, production >= weeklyPreparationCap ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__warningText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 17\n    }\n  }, \"WARNING!\") : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(CircularProgressbar, {\n    value: productionWastepercentage,\n    text: // showPounds ?  (`${production}` * 2.775).toFixed(0) : `${production}`\n    `${production}`,\n    styles: buildStyles({\n      textColor: textColor,\n      pathColor: preparationWasteColor,\n      trailColor: \"rgb(163, 181, 44)\",\n      textSize: \"20px\",\n      strokeLinecap: \"butt\"\n    }),\n    strokeWidth: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__textSize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 21\n    }\n  }, \"P\"), \"REPARATION\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weeklyWaste__message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }\n  }, \"(Weekly waste is updated 11pm everyday)\")))));\n}\n\nexport default ReportOne;","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/reports/weekly-waste-report.js"],"names":["React","useContext","CircularProgressbar","buildStyles","WasteCapContext","WeeklyWasteContext","AccordionHeading","AccordionBody","wasteDailyDateRange","getLocalStorageData","roundedUpNumberAndTurnBackToNumber","ReportOne","showDarkTheme","showWeeklyChart","handleChangeForCheckedAndAccordion","hideReport","weeklyCoverWastes","weeklySpoliageWastes","weeklyPeparationWastes","showPounds","coverWaste","productionWaste","spoliageWaste","siteName","cover","production","spoliage","totalWaste","parseInt","weeklyCoverCap","weeklySpoliageCap","weeklyPreparationCap","coverWastepercentage","spoliageWastepercentage","productionWastepercentage","isNaN","totalWastepercentage","totalCapping","totalWasteColor","coverWasteColor","spoliageWasteColor","preparationWasteColor","xAxis","dateRangeLable","textColor","justifyContent","marginTop","pathColor","trailColor","textSize","strokeLinecap"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport { WasteCapContext } from \"../../../../contexts/waste-cap-context\";\nimport { WeeklyWasteContext } from \"../../../../contexts/weekly-waste-context\";\n\nimport { AccordionHeading, AccordionBody } from \"../accordion\"\n\nimport {\n  wasteDailyDateRange,\n  getLocalStorageData,\n  roundedUpNumberAndTurnBackToNumber\n} from \"../../../../utilities\";\n\nfunction ReportOne({\n  showDarkTheme,\n  showWeeklyChart,\n  handleChangeForCheckedAndAccordion,\n  hideReport\n}) {\n\n  const {\n    weeklyCoverWastes,\n    weeklySpoliageWastes,\n    weeklyPeparationWastes,\n    showPounds\n  } = useContext(WasteCapContext);\n\n  const {\n    // cover,\n    // production,\n    // spoliage,\n    coverWaste,\n    productionWaste,\n    spoliageWaste,\n    siteName\n  } = useContext(WeeklyWasteContext);\n\n  let cover = 0\n  let production = 0\n  let spoliage = 0\n\n  if (showPounds) {\n    cover = roundedUpNumberAndTurnBackToNumber(coverWaste * 2.775)\n    spoliage = roundedUpNumberAndTurnBackToNumber(spoliageWaste * 2.775)\n    production = roundedUpNumberAndTurnBackToNumber(productionWaste * 2.775)\n  } else {\n    cover = coverWaste\n    spoliage = spoliageWaste\n    production = productionWaste\n  }\n\n  const totalWaste = parseInt(cover) + parseInt(spoliage) + parseInt(production);\n\n  let weeklyCoverCap = 0\n  let weeklySpoliageCap = 0\n  let weeklyPreparationCap = 0\n\n  if (showPounds) {\n    weeklyCoverCap = weeklyCoverWastes * 2.775\n    weeklySpoliageCap = weeklySpoliageWastes * 2.775\n    weeklyPreparationCap = weeklyPeparationWastes * 2.775\n  } else {\n    weeklyCoverCap = weeklyCoverWastes\n    weeklySpoliageCap = weeklySpoliageWastes\n    weeklyPreparationCap = weeklyPeparationWastes\n  }\n\nlet coverWastepercentage;\nlet spoliageWastepercentage;\nlet productionWastepercentage;\n\nif (isNaN((cover / weeklyCoverCap) * 100)) {\n  coverWastepercentage = 100\n} else {\n  coverWastepercentage = (cover / weeklyCoverCap) * 100\n}\n\nif (isNaN((spoliage / weeklySpoliageCap) * 100)) {\n  spoliageWastepercentage = 100\n} else {\n  spoliageWastepercentage = (spoliage / weeklySpoliageCap) * 100\n}\n\nif (isNaN((production / weeklyPreparationCap) * 100)) {\n  productionWastepercentage = 100\n} else {\n  productionWastepercentage = (production / weeklyPreparationCap) * 100\n}\n\nlet totalWastepercentage;\n\nconst totalCapping = roundedUpNumberAndTurnBackToNumber(weeklyCoverCap + weeklySpoliageCap + weeklyPreparationCap)\n\nif (isNaN((totalWaste / totalCapping) * 100)) {\n  totalWastepercentage = 100\n} else {\n  totalWastepercentage = (totalWaste / totalCapping) * 100\n}\n\n  let totalWasteColor;\n  if (totalWaste >= totalCapping) {\n    totalWasteColor = \"rgba(255, 0, 0, 0.9)\";\n  } else if (totalWaste === 0) {\n    totalWasteColor = \"rgb(163, 181, 44)\"\n  } else {\n    totalWasteColor = \"rgb(47, 67, 30)\";\n  }\n\n  let coverWasteColor;\n  if (cover >= weeklyCoverCap) {\n    coverWasteColor = \"rgba(255, 0, 0, 0.9)\";\n  } else if (cover === 0) {\n    coverWasteColor = \"rgb(163, 181, 44)\"\n  } else {\n    coverWasteColor = \"rgb(47, 67, 30)\";\n  }\n\n  let spoliageWasteColor;\n  if (spoliage >= weeklySpoliageCap) {\n    spoliageWasteColor = \"rgba(255, 0, 0, 0.9)\";\n  } else if (spoliage === 0) {\n    spoliageWasteColor = \"rgb(163, 181, 44)\"\n  } else {\n    spoliageWasteColor = \"rgb(47, 67, 30)\";\n  }\n\n  let preparationWasteColor;\n  if (production >= weeklyPreparationCap) {\n    preparationWasteColor = \"rgba(255, 0, 0, 0.9)\";\n  } else if (production === 0) {\n    preparationWasteColor = \"rgb(163, 181, 44)\"\n  } else {\n    preparationWasteColor = \"rgb(47, 67, 30)\";\n  }\n\n  const xAxis = getLocalStorageData(\"dailyChartXaxis\");\n  let dateRangeLable = wasteDailyDateRange(xAxis);\n\n  let textColor;\n\n  if (showDarkTheme) {\n    textColor = \"rgb(255, 231, 227)\";\n    } else {\n    textColor = \"rgb(140, 112, 140)\";\n  }\n\n  return (\n    <div className={hideReport ? \"dashboard__weeklyWaste displayNone\":\"dashboard__weeklyWaste\"}>\n\n      {/* <div className= { showDarkTheme ? \"dashboard__weeklyWaste__accordionHeading darkTheme__accordionHeading\":\"dashboard__weeklyWaste__accordionHeading originalTheme__accordionHeading\"}> */}\n\n          <AccordionHeading color={\"primPurpleBackgroundColor\"}>\n\n            <div className=\"section-title\">WEEKLY WASTE</div>\n            <div className=\"container\">\n\n              <span onClick={() => handleChangeForCheckedAndAccordion(!showWeeklyChart, \"weeklyChartSwitch\")}>\n                {showWeeklyChart ? (\"X\"):\"| | | \"}\n              </span>\n\n            </div>\n\n          </AccordionHeading>\n\n       {/* </div> */}\n\n       {/* <div className={(showWeeklyChart ? \"dashboard__weeklyWaste__accordionContent\"  + \" dashboard__weeklyWaste__accordionContentOpening\" : \"displayNone\" + \" dashboard__weeklyWaste__accordionContentClosing\")}> */}\n\n       <AccordionBody open={showWeeklyChart}>\n\n          <div className= { showDarkTheme ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem\": \"addPaddingOfHalveRem\"}>\n\n            <div className=\"dashboard__overviewSitesReportHeading\">\n              <div className=\"report-subtitle\">{siteName}</div>\n            </div>\n\n            <div className=\"weeklyWaste__headingWrapper\">\n              <div className=\"section-title center\">WEEKLY WASTE<div className=\"applyMarginRightAndLeft\">{showPounds? \"(Â£)\" : \"(Kg)\" }</div></div>\n            </div>\n\n            <div\n              className=\"dashboard__overviewSitesReport__capping\"\n              style={{ justifyContent: \"space-evenly\" }}\n            >\n              <div className=\"capping__weeklyWasteChart leftPadding\">\n\n                  <div className=\"capping__text applyPurpleColor cooperHewittBold capping__flex\">\n                    Total\n                    <div className={showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                      {roundedUpNumberAndTurnBackToNumber(weeklyCoverCap + weeklySpoliageCap + weeklyPreparationCap)}\n                    </div>\n                  </div>\n\n                  <>\n                  <div className=\"capping__text applyPurpleColor cooperHewittBold\">=</div>\n\n                    <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\">C</div>\n\n                    <div className={showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                      {roundedUpNumberAndTurnBackToNumber(weeklyCoverCap)}\n                    </div>\n\n                    <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\">S</div>\n\n                    <div className={showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                      {roundedUpNumberAndTurnBackToNumber(weeklySpoliageCap)}\n                    </div>\n\n                    <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\">P</div>\n\n                    <div className={showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                      {roundedUpNumberAndTurnBackToNumber(weeklyPreparationCap)}\n                    </div>\n\n                  </>\n              </div>\n            </div>\n\n            <div className=\"dashboard__overviewSitesReportProgressBarWrapper\">\n\n\n            <div className=\"dashboard__progressBar\">\n\n\n              <div className=\"dashboard__weeklyWaste__progressBarWrapper\">\n\n\n              <div className=\"dashboard__progressBar__size\">\n\n              {totalWaste >= totalCapping ? (\n                <div className=\"dashboard__progressBar__warningText\">WARNING!</div>\n              ) : (\n                <div\n                  style={{\n                    marginTop: \"1rem\",\n                  }}\n                ></div>\n              )}\n\n\n              <div className=\"dashboard__progressBar__wrapper\">\n                <CircularProgressbar\n                  value={totalWastepercentage}\n                  text={\n                    // showPounds ?  (`${totalWaste}` * 2.775).toFixed(0) : `${totalWaste}`\n                    `${totalWaste}`\n                  }\n                  styles={buildStyles({\n                    textColor: textColor,\n                    pathColor: totalWasteColor,\n                    trailColor: \"rgb(163, 181, 44)\",\n                    textSize: \"20px\",\n                    strokeLinecap: \"butt\",\n                  })}\n                  strokeWidth={10}\n                />\n                <div className=\"dashboard__progressBar__text\">\n                  <div className=\"dashboard__progressBar__textSize\">\n                    <div className=\"foodWasteTrackingProgress__date\">{dateRangeLable}</div>\n                  </div>\n                </div>\n              </div>\n\n              </div>\n\n              <div className=\"dashboard__progressBar__totalWasteValue--icon\">=</div>\n\n\n\n                <div className=\"dashboard__progressBar__size\">\n\n                {cover >= weeklyCoverCap ? (\n                  <div className=\"dashboard__progressBar__warningText\">WARNING!</div>\n                ) : (\n                  <div\n                    style={{\n                      marginTop: \"1rem\",\n                    }}\n                  ></div>\n                )}\n\n                <div className=\"dashboard__progressBar__wrapper\">\n                  <CircularProgressbar\n                    value={coverWastepercentage}\n                    text={\n                      // showPounds ?  (`${cover}` * 2.775).toFixed(0) : `${cover}`\n                      `${cover}`\n                    }\n                    styles={buildStyles({\n                      textColor: textColor,\n                      pathColor: coverWasteColor,\n                      trailColor: \"rgb(163, 181, 44)\",\n                      textSize: \"20px\",\n                      strokeLinecap: \"butt\",\n                    })}\n                    strokeWidth={10}\n                  />\n                  <div className=\"dashboard__progressBar__text\">\n                    <div className=\"dashboard__progressBar__textSize\">\n                      <b>C</b>OVER WASTE\n                    </div>\n                  </div>\n                </div>\n\n                </div>\n\n                <div className=\"dashboard__progressBar__totalWasteValue--icon\">+</div>\n\n                <div className=\"dashboard__progressBar__size\">\n\n                {spoliage >= weeklySpoliageCap ? (\n                  <div className=\"dashboard__progressBar__warningText\">WARNING!</div>\n                ) : (\n                  <div\n                    style={{\n                      marginTop: \"1rem\",\n                    }}\n                  ></div>\n                )}\n\n                  <CircularProgressbar\n                    value={spoliageWastepercentage}\n                    text={\n                      // showPounds ?  (`${spoliage}` * 2.775).toFixed(0) : `${spoliage}`\n                       `${spoliage}`\n                    }\n                    styles={buildStyles({\n                      textColor: textColor,\n                      pathColor: spoliageWasteColor,\n                      trailColor: \"rgb(163, 181, 44)\",\n                      textSize: \"20px\",\n                      strokeLinecap: \"butt\",\n                    })}\n                    strokeWidth={10}\n                  />\n                    <div className=\"dashboard__progressBar__text\">\n                      <div className=\"dashboard__progressBar__textSize\">\n                        <b>S</b>POILAGE\n                      </div>\n                    </div>\n                </div>\n\n                <div className=\"dashboard__progressBar__totalWasteValue--icon\">+</div>\n\n                <div className=\"dashboard__progressBar__size\">\n\n                {production >= weeklyPreparationCap ? (\n                <div className=\"dashboard__progressBar__warningText\">WARNING!</div>\n                ) : (\n                  <div\n                    style={{\n                      marginTop: \"1rem\",\n                    }}\n                  ></div>\n                )}\n\n\n                <CircularProgressbar\n                  value={productionWastepercentage}\n                  text={\n                    // showPounds ?  (`${production}` * 2.775).toFixed(0) : `${production}`\n                    `${production}`\n                  }\n                  styles={buildStyles({\n                    textColor: textColor,\n                    pathColor: preparationWasteColor,\n                    trailColor: \"rgb(163, 181, 44)\",\n                    textSize: \"20px\",\n                    strokeLinecap: \"butt\",\n                  })}\n                  strokeWidth={10}\n                />\n\n                <div className=\"dashboard__progressBar__text\">\n                  <div className=\"dashboard__progressBar__textSize\">\n                    <b>P</b>REPARATION\n                  </div>\n                </div>\n\n\n              </div>\n              </div>\n\n            </div>\n\n            <div className=\"weeklyWaste__message\">\n                (Weekly waste is updated 11pm everyday)\n            </div>\n\n            </div>\n\n          </div>\n\n        </AccordionBody>\n\n        {/* </div> */}\n\n      </div>\n  );\n}\n\nexport default ReportOne;\n"]},"metadata":{},"sourceType":"module"}