{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/reports/weekly-trend-report.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport { weeklyWasteDateRange, setItemInLocalStorage } from \"../../../../utilities\";\nimport { WeeklyWasteTrendContext } from \"../../../../contexts/weekly-trends-context\";\nimport BarChart from \"./../reuseable-components/charts/bar-chart/bar-chart\";\nimport { AccordionHeading, AccordionBody } from \"../accordion\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nfunction ReportOne({\n  siteName,\n  showPounds,\n  setShowWeeklyTrendChart,\n  showWeeklyTrendChart,\n  showDarkTheme,\n  hideReport\n}) {\n  const {\n    setDateRange,\n    coverWaste,\n    preparationWaste,\n    spoilageWaste,\n    totalWaste,\n    weeklyWasteValuesForCurrentWeekAndLastWeek,\n    handleWeeklyTrendValues,\n    showTooltip\n  } = useContext(WeeklyWasteTrendContext);\n  const [tooltipIsOpen, setTooltipIsOpen] = React.useState(true); // selectCurrentYearlyWeeklyWasteValues()\n\n  const dateRange = setDateRange();\n  const formatedDateRange = weeklyWasteDateRange(dateRange);\n  let cover = coverWaste;\n  let production = preparationWaste;\n  let spoliage = spoilageWaste;\n  let coverWastepercentage = 0;\n  let spoliageWastepercentage = 0;\n  let productionWastepercentage = 0;\n  let coverWasteColor;\n  let spoliageWasteColor;\n  let preparationWasteColor;\n\n  if (cover > 0) {\n    coverWasteColor = \"rgba(255, 0, 0, 0.9)\";\n  } else if (cover === 0) {\n    coverWasteColor = \"rgb(237, 242, 99)\";\n  } else {\n    coverWasteColor = \"rgb(47, 67, 30)\";\n  }\n\n  if (production > 0) {\n    preparationWasteColor = \"rgba(255, 0, 0, 0.9)\";\n  } else if (production === 0) {\n    preparationWasteColor = \"rgb(237, 242, 99)\";\n  } else {\n    preparationWasteColor = \"rgb(47, 67, 30)\";\n  }\n\n  if (spoliage > 0) {\n    spoliageWasteColor = \"rgba(255, 0, 0, 0.9)\";\n  } else if (spoliage === 0) {\n    spoliageWasteColor = \"rgb(237, 242, 99)\";\n  } else {\n    spoliageWasteColor = \"rgb(47, 67, 30)\";\n  }\n\n  let textColor;\n\n  if (showDarkTheme) {\n    textColor = \"rgb(255, 231, 227)\";\n  } else {\n    textColor = \"rgb(140, 112, 140)\";\n  }\n\n  const [appState, changeState] = useState({\n    activeObject: {\n      id: 3,\n      name: \"TOTAL WASTE\"\n    },\n    objects: [{\n      id: 0,\n      val: \"C\",\n      name: \"COVER WASTE\"\n    }, {\n      id: 1,\n      val: \"S\",\n      name: \"SPOILAGE WASTE\"\n    }, {\n      id: 2,\n      val: \"P\",\n      name: \"PREPARATION WASTE\"\n    }, {\n      id: 3,\n      val: \"A\",\n      name: \"TOTAL WASTE\"\n    }]\n  });\n  const [activeState, changeActiveState] = useState({\n    coverWaste: false,\n    spoliageWaste: false,\n    productionWaste: false,\n    allWaste: true\n  });\n\n  function toggleActive(type) {\n    switch (type) {\n      case \"cover\":\n        changeActiveState({\n          coverWaste: true,\n          spoliageWaste: false,\n          productionWaste: false,\n          allWaste: false\n        });\n        changeState({ ...appState,\n          activeObject: appState.objects[0]\n        });\n        break;\n\n      case \"production\":\n        changeActiveState({\n          coverWaste: false,\n          spoliageWaste: false,\n          productionWaste: true,\n          allWaste: false\n        });\n        changeState({ ...appState,\n          activeObject: appState.objects[2]\n        });\n        break;\n\n      case \"spoliage\":\n        changeActiveState({\n          coverWaste: false,\n          spoliageWaste: true,\n          productionWaste: false,\n          allWaste: false\n        });\n        changeState({ ...appState,\n          activeObject: appState.objects[1]\n        });\n        break;\n\n      case \"all\":\n        changeActiveState({\n          coverWaste: false,\n          spoliageWaste: false,\n          productionWaste: false,\n          allWaste: true\n        });\n        changeState({ ...appState,\n          activeObject: appState.objects[3]\n        });\n        break;\n\n      default:\n    }\n  }\n\n  useEffect(() => {\n    if (showWeeklyTrendChart && showTooltip) {\n      setTooltipIsOpen(true);\n    } else {\n      setTooltipIsOpen(false);\n    }\n  }, [showWeeklyTrendChart, showTooltip]); // console.log(\"weeklyWasteValuesForCurrentWeekAndLastWeek\",weeklyWasteValuesForCurrentWeekAndLastWeek)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weeklyWasteTrend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, !hideReport && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AccordionHeading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"WEEKLY WASTE TREND\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, showWeeklyTrendChart ? /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => {\n      setShowWeeklyTrendChart(!showWeeklyTrendChart);\n      setItemInLocalStorage(\"showWeeklyTrendChart\", !showWeeklyTrendChart);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, \"X\") : /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => {\n      setShowWeeklyTrendChart(!showWeeklyTrendChart);\n      setItemInLocalStorage(\"showWeeklyTrendChart\", !showWeeklyTrendChart);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, \" | | | \"))), /*#__PURE__*/React.createElement(AccordionBody, {\n    open: showWeeklyTrendChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: showDarkTheme ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem\" : \"originalTheme__reportBackgroundColor addPaddingOfHalveRem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__overviewSitesReportHeading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"report-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, siteName)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__overviewSitesReport__capping\",\n    style: {\n      justifyContent: \"space-evenly\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__overviewSitesReportProgressBarWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__one\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__totalWasteValue__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__totalWasteValue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weeklyWasteTrend--poundsKgsAndDateWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weeklyWasteTrend--totalWasteAndKgAndPounds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: showDarkTheme ? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor cooperHewittBold\" : \"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }\n  }, showPounds ? \"Â£\" : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: showDarkTheme ? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor\" : \"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 19\n    }\n  }, showPounds ? (totalWaste * 2.775).toFixed(0) : totalWaste), /*#__PURE__*/React.createElement(\"div\", {\n    className: showDarkTheme ? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor cooperHewittBold\" : \"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 19\n    }\n  }, showPounds ? \"\" : \"Kg\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weeklyWasteTrend--dataRangeStyle applyCooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, formatedDateRange))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__dataRange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__totalWasteValue--icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, \"=\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__two\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgressbar, {\n    value: coverWastepercentage,\n    text: showPounds ? (`${cover}` * 2.775).toFixed(0) : `${cover}`,\n    styles: buildStyles({\n      textColor: textColor,\n      pathColor: coverWasteColor,\n      trailColor: coverWasteColor,\n      textSize: \"20px\",\n      strokeLinecap: \"butt\"\n    }),\n    strokeWidth: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__textSize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 27\n    }\n  }, \"C\"), \"OVER WASTE\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__totalWasteValue--icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 19\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgressbar, {\n    value: spoliageWastepercentage,\n    text: showPounds ? (`${spoliage}` * 2.775).toFixed(0) : `${spoliage}`,\n    styles: buildStyles({\n      textColor: textColor,\n      pathColor: spoliageWasteColor,\n      trailColor: spoliageWasteColor,\n      textSize: \"20px\",\n      strokeLinecap: \"butt\"\n    }),\n    strokeWidth: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__textSize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 27\n    }\n  }, \"S\"), \"POILAGE\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__totalWasteValue--icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 19\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgressbar, {\n    value: productionWastepercentage,\n    text: showPounds ? (`${production}` * 2.775).toFixed(0) : `${production}`,\n    styles: buildStyles({\n      textColor: textColor,\n      pathColor: preparationWasteColor,\n      trailColor: preparationWasteColor,\n      textSize: \"20px\",\n      strokeLinecap: \"butt\"\n    }),\n    strokeWidth: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__textSize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 25\n    }\n  }, \"P\"), \"REPARATION\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weeklyWaste__message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  }, \"(The difference between this and last week)\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weeklyWaste__message cooperHewittBold\",\n    style: {\n      fontSize: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 17\n    }\n  }, \"THIS WEEK\", '   ', \"VS\", '   ', \"LAST WEEK\"), /*#__PURE__*/React.createElement(BarChart, {\n    data: weeklyWasteValuesForCurrentWeekAndLastWeek,\n    showPounds: showPounds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"monthlyWasteChart__CspLabel\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: activeState.coverWaste ? \"active\" : \"inactive\",\n    id: 1,\n    onClick: () => {\n      toggleActive(\"cover\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    open: tooltipIsOpen // onOpen={() => setTooltipIsOpen(true)}\n    ,\n    onClose: () => setTooltipIsOpen(false),\n    title: \"click on C, S, P or All waste stream\",\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"C\",\n    onClick: handleWeeklyTrendValues,\n    className: activeState.coverWaste ? \"reduceOpacity\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 21\n    }\n  }, \"C +\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: activeState.spoliageWaste ? \"active\" : \"inactive\",\n    id: 1,\n    onClick: () => {\n      toggleActive(\"spoliage\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    open: tooltipIsOpen // onOpen={() => setTooltipIsOpen(true)}\n    ,\n    onClose: () => setTooltipIsOpen(false) // title=\"click on C, S, P or All waste stream\"\n    ,\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"S\",\n    onClick: handleWeeklyTrendValues,\n    className: activeState.spoliageWaste ? \"reduceOpacity\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 21\n    }\n  }, \"S +\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: activeState.productionWaste ? \"active\" : \"inactive\",\n    id: 1,\n    onClick: () => {\n      toggleActive(\"production\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    open: tooltipIsOpen // onOpen={() => setTooltipIsOpen(true)}\n    ,\n    onClose: () => setTooltipIsOpen(false) // title=\"click on C, S, P or All waste stream\"\n    ,\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"P\",\n    onClick: handleWeeklyTrendValues,\n    className: activeState.productionWaste ? \"reduceOpacity\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 21\n    }\n  }, \"P =\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: activeState.allWaste ? \"active\" : \"inactive\",\n    id: 1,\n    onClick: () => {\n      toggleActive(\"all\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"A\",\n    onClick: handleWeeklyTrendValues,\n    className: activeState.allWaste ? \"reduceOpacity\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 21\n    }\n  }, \"ALL\")))))))));\n}\n\nexport default ReportOne;","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/reports/weekly-trend-report.js"],"names":["React","useContext","useState","useEffect","CircularProgressbar","buildStyles","weeklyWasteDateRange","setItemInLocalStorage","WeeklyWasteTrendContext","BarChart","AccordionHeading","AccordionBody","Tooltip","ReportOne","siteName","showPounds","setShowWeeklyTrendChart","showWeeklyTrendChart","showDarkTheme","hideReport","setDateRange","coverWaste","preparationWaste","spoilageWaste","totalWaste","weeklyWasteValuesForCurrentWeekAndLastWeek","handleWeeklyTrendValues","showTooltip","tooltipIsOpen","setTooltipIsOpen","dateRange","formatedDateRange","cover","production","spoliage","coverWastepercentage","spoliageWastepercentage","productionWastepercentage","coverWasteColor","spoliageWasteColor","preparationWasteColor","textColor","appState","changeState","activeObject","id","name","objects","val","activeState","changeActiveState","spoliageWaste","productionWaste","allWaste","toggleActive","type","justifyContent","toFixed","pathColor","trailColor","textSize","strokeLinecap","fontSize","marginTop","width"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport {\n  weeklyWasteDateRange,\n  setItemInLocalStorage\n} from \"../../../../utilities\";\n\nimport { WeeklyWasteTrendContext } from \"../../../../contexts/weekly-trends-context\";\n\nimport BarChart from \"./../reuseable-components/charts/bar-chart/bar-chart\"\n\nimport { AccordionHeading, AccordionBody } from \"../accordion\"\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nfunction ReportOne({\n  siteName,\n  showPounds,\n  setShowWeeklyTrendChart,\n  showWeeklyTrendChart,\n  showDarkTheme,\n  hideReport,\n}) {\n\n  const { setDateRange, coverWaste, preparationWaste, spoilageWaste, totalWaste, weeklyWasteValuesForCurrentWeekAndLastWeek, handleWeeklyTrendValues, showTooltip } = useContext(WeeklyWasteTrendContext);\n\n  const [tooltipIsOpen, setTooltipIsOpen] = React.useState(true);\n\n  // selectCurrentYearlyWeeklyWasteValues()\n\n  const dateRange = setDateRange();\n  const formatedDateRange  = weeklyWasteDateRange(dateRange)\n\n  let cover = coverWaste\n  let production = preparationWaste\n  let spoliage = spoilageWaste\n\n  let coverWastepercentage = 0\n  let spoliageWastepercentage = 0\n  let productionWastepercentage = 0\n\n  let coverWasteColor;\n  let spoliageWasteColor;\n  let preparationWasteColor;\n\n\n  if (cover > 0) {\n    coverWasteColor = \"rgba(255, 0, 0, 0.9)\"\n  } else if (cover === 0) {\n    coverWasteColor = \"rgb(237, 242, 99)\"\n  } else {\n    coverWasteColor = \"rgb(47, 67, 30)\"\n  }\n\n  if (production > 0) {\n    preparationWasteColor = \"rgba(255, 0, 0, 0.9)\"\n  } else if (production === 0) {\n    preparationWasteColor = \"rgb(237, 242, 99)\"\n  } else {\n    preparationWasteColor = \"rgb(47, 67, 30)\"\n  }\n\n  if (spoliage > 0) {\n    spoliageWasteColor = \"rgba(255, 0, 0, 0.9)\"\n  } else if (spoliage === 0) {\n    spoliageWasteColor = \"rgb(237, 242, 99)\"\n  } else {\n    spoliageWasteColor = \"rgb(47, 67, 30)\"\n  }\n\n  let textColor;\n\n  if (showDarkTheme) {\n    textColor = \"rgb(255, 231, 227)\";\n    } else {\n    textColor = \"rgb(140, 112, 140)\";\n  }\n\n  const [appState, changeState] = useState({\n    activeObject: {\n      id: 3,\n      name: \"TOTAL WASTE\",\n    },\n    objects: [\n      { id: 0, val: \"C\", name: \"COVER WASTE\" },\n      { id: 1, val: \"S\", name: \"SPOILAGE WASTE\" },\n      { id: 2, val: \"P\", name: \"PREPARATION WASTE\" },\n      { id: 3, val: \"A\", name: \"TOTAL WASTE\" },\n    ],\n  });\n\n  const [activeState, changeActiveState] = useState({\n    coverWaste: false,\n    spoliageWaste: false,\n    productionWaste: false,\n    allWaste: true,\n  });\n\n  function toggleActive(type) {\n    switch (type) {\n      case \"cover\":\n        changeActiveState({\n          coverWaste: true,\n          spoliageWaste: false,\n          productionWaste: false,\n          allWaste: false,\n        });\n        changeState({ ...appState, activeObject: appState.objects[0] });\n        break;\n      case \"production\":\n        changeActiveState({\n          coverWaste: false,\n          spoliageWaste: false,\n          productionWaste: true,\n          allWaste: false,\n        });\n        changeState({ ...appState, activeObject: appState.objects[2] });\n        break;\n      case \"spoliage\":\n        changeActiveState({\n          coverWaste: false,\n          spoliageWaste: true,\n          productionWaste: false,\n          allWaste: false,\n        });\n        changeState({ ...appState, activeObject: appState.objects[1] });\n        break;\n      case \"all\":\n        changeActiveState({\n          coverWaste: false,\n          spoliageWaste: false,\n          productionWaste: false,\n          allWaste: true,\n        });\n        changeState({ ...appState, activeObject: appState.objects[3] });\n        break;\n      default:\n    }\n  }\n\n  useEffect(() => {\n    if (showWeeklyTrendChart && showTooltip) {\n      setTooltipIsOpen(true)\n    } else {\n      setTooltipIsOpen(false)\n    }\n  },[showWeeklyTrendChart, showTooltip])\n\n  // console.log(\"weeklyWasteValuesForCurrentWeekAndLastWeek\",weeklyWasteValuesForCurrentWeekAndLastWeek)\n\n\n  return (\n\n\n    <div className=\"weeklyWasteTrend\">\n      {!hideReport &&\n        <>\n          <AccordionHeading>\n            <div className=\"section-title\">WEEKLY WASTE TREND</div>\n            <div className=\"container\">\n              {showWeeklyTrendChart ? (\n                <span onClick={() =>\n                {\n                  setShowWeeklyTrendChart(!showWeeklyTrendChart)\n                  setItemInLocalStorage(\"showWeeklyTrendChart\", !showWeeklyTrendChart)\n                }\n                }>X</span>\n              ) : (\n                <span onClick={() =>\n                {\n                  setShowWeeklyTrendChart(!showWeeklyTrendChart)\n                  setItemInLocalStorage(\"showWeeklyTrendChart\", !showWeeklyTrendChart)\n                }\n                }> | | | </span>\n                )}\n            </div>\n          </AccordionHeading>\n\n          <AccordionBody open={showWeeklyTrendChart}>\n            <div className= { showDarkTheme ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem\": \"originalTheme__reportBackgroundColor addPaddingOfHalveRem\"}>\n\n            <div className=\"dashboard__overviewSitesReportHeading\">\n              <div className=\"report-subtitle\">{siteName}</div>\n            </div>\n\n            <div\n              className=\"dashboard__overviewSitesReport__capping\"\n              style={{ justifyContent: \"space-evenly\" }}\n            >\n\n            </div>\n\n            <div className=\"dashboard__overviewSitesReportProgressBarWrapper\">\n\n            <div className=\"dashboard__progressBar\">\n\n\n              <div className=\"dashboard__progressBar__one\">\n\n              <div className=\"dashboard__progressBar__totalWasteValue__wrapper\">\n\n              <div className=\"dashboard__progressBar__totalWasteValue\">\n\n              <div className=\"weeklyWasteTrend--poundsKgsAndDateWrapper\">\n                <div className=\"weeklyWasteTrend--totalWasteAndKgAndPounds\">\n\n                  <div className={showDarkTheme? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor cooperHewittBold\" :\"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor cooperHewittBold\"}>\n                    {showPounds ? \"Â£\": \"\"}\n                  </div>\n\n                  <div className={showDarkTheme? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor\" :\"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor\"}>\n                    {showPounds ? (totalWaste * 2.775).toFixed(0) : totalWaste}\n                  </div>\n\n                  <div className={showDarkTheme? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor cooperHewittBold\" :\"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor cooperHewittBold\"}>\n                    {showPounds ? \"\": \"Kg\"}\n                  </div>\n\n\n                </div>\n                <div className=\"weeklyWasteTrend--dataRangeStyle applyCooperHewittBold\">{formatedDateRange}</div>\n              </div>\n\n              </div>\n              <div className=\"dashboard__progressBar__dataRange\">\n              </div>\n          </div>\n\n          <div className=\"dashboard__progressBar__totalWasteValue--icon\">=</div>\n\n          </div>\n\n\n              <div className=\"dashboard__progressBar__two\">\n\n                  <div className=\"dashboard__progressBar__size\">\n\n                    <div className=\"dashboard__progressBar__wrapper\">\n                      <CircularProgressbar\n                        value={coverWastepercentage}\n                        text={\n                          showPounds ?  (`${cover}` * 2.775).toFixed(0) : `${cover}`\n                        }\n                        styles={buildStyles({\n                          textColor: textColor,\n                          pathColor: coverWasteColor,\n                          trailColor: coverWasteColor,\n                          textSize: \"20px\",\n                          strokeLinecap: \"butt\",\n                        })}\n                        strokeWidth={10}\n                      />\n                      <div className=\"dashboard__progressBar__text\">\n                        <div className=\"dashboard__progressBar__textSize\">\n                          <b>C</b>OVER WASTE\n                        </div>\n                      </div>\n                    </div>\n\n                  </div>\n\n                  <div className=\"dashboard__progressBar__totalWasteValue--icon\">+</div>\n\n                  <div className=\"dashboard__progressBar__size\">\n\n                    <CircularProgressbar\n                      value={spoliageWastepercentage}\n                      text={\n                        showPounds ?  (`${spoliage}` * 2.775).toFixed(0) : `${spoliage}`\n                      }\n                      styles={buildStyles({\n                        textColor: textColor,\n                        pathColor: spoliageWasteColor,\n                        trailColor: spoliageWasteColor,\n                        textSize: \"20px\",\n                        strokeLinecap: \"butt\",\n                      })}\n                      strokeWidth={10}\n                    />\n                      <div className=\"dashboard__progressBar__text\">\n                        <div className=\"dashboard__progressBar__textSize\">\n                          <b>S</b>POILAGE\n                        </div>\n                      </div>\n                  </div>\n\n                  <div className=\"dashboard__progressBar__totalWasteValue--icon\">+</div>\n\n                  <div className=\"dashboard__progressBar__size\">\n\n                  <CircularProgressbar\n                    value={productionWastepercentage}\n                    text={\n                      showPounds ?  (`${production}` * 2.775).toFixed(0) : `${production}`\n                    }\n                    styles={buildStyles({\n                      textColor: textColor,\n                      pathColor: preparationWasteColor,\n                      trailColor: preparationWasteColor,\n                      textSize: \"20px\",\n                      strokeLinecap: \"butt\",\n                    })}\n                    strokeWidth={10}\n                  />\n\n                    <div className=\"dashboard__progressBar__text\">\n                      <div className=\"dashboard__progressBar__textSize\">\n                        <b>P</b>REPARATION\n                      </div>\n                    </div>\n\n\n                </div>\n\n                </div>\n\n\n\n                </div>\n\n                <div className=\"weeklyWaste__message\">\n                  (The difference between this and last week)\n                </div>\n\n                <div className=\"weeklyWaste__message cooperHewittBold\" style={{\n                  fontSize: \"20px\"\n                }}>\n                  THIS WEEK{'   '}VS{'   '}LAST WEEK\n                </div>\n\n                <BarChart data={weeklyWasteValuesForCurrentWeekAndLastWeek} showPounds={showPounds} />\n\n                <div\n                  style={{ marginTop: \"1rem\"}}\n                >\n                  <div className=\"monthlyWasteChart__CspLabel\" style={{\n                    width: \"100%\"\n                  }}>\n                  <div\n                    className={activeState.coverWaste ? \"active\" : \"inactive\"}\n                    id={1}\n                    onClick={() => {\n                      toggleActive(\"cover\");\n                    }}\n                  >\n\n                  <Tooltip\n                    open={tooltipIsOpen}\n                    // onOpen={() => setTooltipIsOpen(true)}\n                    onClose={() => setTooltipIsOpen(false)}\n                    title=\"click on C, S, P or All waste stream\"\n                    arrow\n                  >\n\n                    <h2 id={\"C\"}\n                    onClick={handleWeeklyTrendValues}\n                        className={activeState.coverWaste ? \"reduceOpacity\" : \"\"}\n                    >\n                      C +\n                    </h2>\n\n                    </Tooltip>\n\n                  </div>\n                  <div\n                    className={activeState.spoliageWaste ? \"active\" : \"inactive\"}\n                    id={1}\n                    onClick={() => {\n                      toggleActive(\"spoliage\");\n                    }}\n                  >\n\n                  <Tooltip\n                    open={tooltipIsOpen}\n                    // onOpen={() => setTooltipIsOpen(true)}\n                    onClose={() => setTooltipIsOpen(false)}\n                    // title=\"click on C, S, P or All waste stream\"\n                    arrow\n                  >\n\n                    <h2 id={\"S\"}\n                    onClick={handleWeeklyTrendValues}\n                        className={activeState.spoliageWaste ? \"reduceOpacity\" : \"\"}\n                    >\n                      S +\n                    </h2>\n\n                  </Tooltip>\n\n                  </div>\n                  <div\n                    className={activeState.productionWaste ? \"active\" : \"inactive\"}\n                    id={1}\n                    onClick={() => {\n                      toggleActive(\"production\");\n                    }}\n                  >\n\n                  <Tooltip\n                    open={tooltipIsOpen}\n                    // onOpen={() => setTooltipIsOpen(true)}\n                    onClose={() => setTooltipIsOpen(false)}\n                    // title=\"click on C, S, P or All waste stream\"\n                    arrow\n                  >\n\n                    <h2 id={\"P\"}\n                    onClick={handleWeeklyTrendValues}\n                        className={activeState.productionWaste ? \"reduceOpacity\" : \"\"}\n                    >\n                      P =\n                    </h2>\n\n                  </Tooltip>\n\n                  </div>\n                  <div\n                    className={activeState.allWaste ? \"active\" : \"inactive\"}\n                    id={1}\n                    onClick={() => {\n                      toggleActive(\"all\");\n                    }}\n                  >\n                    <h2 id={\"A\"}\n                    onClick={handleWeeklyTrendValues}\n                      className={activeState.allWaste ? \"reduceOpacity\" : \"\"}\n                    >\n                      ALL\n                    </h2>\n                  </div>\n                </div>\n                </div>\n\n                {/* <div className=\"weeklyWaste__message cooperHewittBold\">\n                  Current Week Waste VS Previous Week Waste\n                </div> */}\n\n            </div>\n\n          </div>\n          </AccordionBody>\n        </>\n      }\n    </div>\n\n  );\n}\n\nexport default ReportOne;\n\n"]},"metadata":{},"sourceType":"module"}