{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/targets/targets-forms.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nconst savings = [{\n  value: 0.0,\n  label: \"none\"\n}, {\n  value: 0.1,\n  label: \"10%\"\n}, {\n  value: 0.2,\n  label: \"20%\"\n}, {\n  value: 0.3,\n  label: \"30%\"\n}, {\n  value: 0.4,\n  label: \"40%\"\n}, {\n  value: 0.5,\n  label: \"50%\"\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n      height: \"10vh\"\n    }\n  }\n}));\nexport default function MultilineTextFields(props) {\n  const classes = useStyles();\n\n  if (props.steps === 0) {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      select: true,\n      label: \"% Savings\",\n      value: props.savingPercentage,\n      name: \"savings\",\n      onChange: props.handleChange,\n      SelectProps: {\n        native: true\n      },\n      helperText: \"Please select your % savings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, savings.map(option => /*#__PURE__*/React.createElement(\"option\", {\n      key: option.value,\n      value: option.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, option.label)))));\n  }\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/targets/targets-forms.js"],"names":["React","makeStyles","TextField","MenuItem","savings","value","label","useStyles","theme","root","margin","spacing","width","height","MultilineTextFields","props","classes","steps","savingPercentage","handleChange","native","map","option"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,GADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADc,EAKd;AACED,EAAAA,KAAK,EAAE,GADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALc,EASd;AACED,EAAAA,KAAK,EAAE,GADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATc,EAad;AACED,EAAAA,KAAK,EAAE,GADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAbc,EAiBd;AACED,EAAAA,KAAK,EAAE,GADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAjBc,EAqBd;AACED,EAAAA,KAAK,EAAE,GADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CArBc,CAAhB;AA2BA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,4BAAwB;AACtBC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADc;AAEtBC,MAAAA,KAAK,EAAE,MAFe;AAGtBC,MAAAA,MAAM,EAAE;AAHc;AADpB;AADiC,CAAZ,CAAD,CAA5B;AAUA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AACjD,QAAMC,OAAO,GAAGT,SAAS,EAAzB;;AAEA,MAAIQ,KAAK,CAACE,KAAN,KAAgB,CAApB,EAAuB;AACrB,wBAEE;AAAM,MAAA,SAAS,EAAED,OAAO,CAACP,IAAzB;AAA+B,MAAA,UAAU,MAAzC;AAA0C,MAAA,YAAY,EAAC,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,MAAM,MADV;AAEI,MAAA,KAAK,EAAC,WAFV;AAGI,MAAA,KAAK,EAAEM,KAAK,CAACG,gBAHjB;AAII,MAAA,IAAI,EAAC,SAJT;AAKI,MAAA,QAAQ,EAAEH,KAAK,CAACI,YALpB;AAMI,MAAA,WAAW,EAAE;AACbC,QAAAA,MAAM,EAAE;AADK,OANjB;AASI,MAAA,UAAU,EAAC,8BATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWKhB,OAAO,CAACiB,GAAR,CAAaC,MAAD,iBACb;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACjB,KAApB;AAA2B,MAAA,KAAK,EAAEiB,MAAM,CAACjB,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKiB,MAAM,CAAChB,KADZ,CADC,CAXL,CADJ,CADJ,CAFF;AAyBD;AACF","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst savings = [\n  {\n    value: 0.0,\n    label: \"none\"\n  },\n  {\n    value: 0.1,\n    label: \"10%\"\n  },\n  {\n    value: 0.2,\n    label: \"20%\"\n  },\n  {\n    value: 0.3,\n    label: \"30%\"\n  },\n  {\n    value: 0.4,\n    label: \"40%\"\n  },\n  {\n    value: 0.5,\n    label: \"50%\"\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n      height: \"10vh\"\n    }\n  },\n}));\n\nexport default function MultilineTextFields(props) {\n  const classes = useStyles();\n\n  if (props.steps === 0) {\n    return (\n\n      <form className={classes.root} noValidate autoComplete=\"off\">\n          <div>\n              <TextField\n                  select\n                  label=\"% Savings\"\n                  value={props.savingPercentage}\n                  name=\"savings\"\n                  onChange={props.handleChange}\n                  SelectProps={{\n                  native: true\n                  }}\n                  helperText=\"Please select your % savings\"\n              >\n                  {savings.map((option) => (\n                  <option key={option.value} value={option.value}>\n                      {option.label}\n                  </option>\n                  ))}\n              </TextField>\n          </div>\n      </form>\n\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}