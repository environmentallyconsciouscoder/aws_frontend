{"ast":null,"code":"// Line Annotation implementation\nmodule.exports = function (Chart) {\n  var chartHelpers = Chart.helpers;\n\n  var helpers = require('../helpers.js')(Chart);\n\n  var horizontalKeyword = 'horizontal';\n  var verticalKeyword = 'vertical';\n  var LineAnnotation = Chart.Annotation.Element.extend({\n    setDataLimits: function () {\n      var model = this._model;\n      var options = this.options; // Set the data range for this annotation\n\n      model.ranges = {};\n      model.ranges[options.scaleID] = {\n        min: options.value,\n        max: options.endValue || options.value\n      };\n    },\n    configure: function () {\n      var model = this._model;\n      var options = this.options;\n      var chartInstance = this.chartInstance;\n      var ctx = chartInstance.chart.ctx;\n      var scale = chartInstance.scales[options.scaleID];\n      var pixel, endPixel;\n\n      if (scale) {\n        pixel = helpers.isValid(options.value) ? scale.getPixelForValue(options.value) : NaN;\n        endPixel = helpers.isValid(options.endValue) ? scale.getPixelForValue(options.endValue) : pixel;\n      }\n\n      if (isNaN(pixel)) {\n        return;\n      }\n\n      var chartArea = chartInstance.chartArea; // clip annotations to the chart area\n\n      model.clip = {\n        x1: chartArea.left,\n        x2: chartArea.right,\n        y1: chartArea.top,\n        y2: chartArea.bottom\n      };\n\n      if (this.options.mode == horizontalKeyword) {\n        model.x1 = chartArea.left;\n        model.x2 = chartArea.right;\n        model.y1 = pixel;\n        model.y2 = endPixel;\n      } else {\n        model.y1 = chartArea.top;\n        model.y2 = chartArea.bottom;\n        model.x1 = pixel;\n        model.x2 = endPixel;\n      }\n\n      model.line = new LineFunction(model);\n      model.mode = options.mode; // Figure out the label:\n\n      model.labelBackgroundColor = options.label.backgroundColor;\n      model.labelFontFamily = options.label.fontFamily;\n      model.labelFontSize = options.label.fontSize;\n      model.labelFontStyle = options.label.fontStyle;\n      model.labelFontColor = options.label.fontColor;\n      model.labelXPadding = options.label.xPadding;\n      model.labelYPadding = options.label.yPadding;\n      model.labelCornerRadius = options.label.cornerRadius;\n      model.labelPosition = options.label.position;\n      model.labelXAdjust = options.label.xAdjust;\n      model.labelYAdjust = options.label.yAdjust;\n      model.labelEnabled = options.label.enabled;\n      model.labelContent = options.label.content;\n      ctx.font = chartHelpers.fontString(model.labelFontSize, model.labelFontStyle, model.labelFontFamily);\n      var textWidth = ctx.measureText(model.labelContent).width;\n      var textHeight = ctx.measureText('M').width;\n      var labelPosition = calculateLabelPosition(model, textWidth, textHeight, model.labelXPadding, model.labelYPadding);\n      model.labelX = labelPosition.x - model.labelXPadding;\n      model.labelY = labelPosition.y - model.labelYPadding;\n      model.labelWidth = textWidth + 2 * model.labelXPadding;\n      model.labelHeight = textHeight + 2 * model.labelYPadding;\n      model.borderColor = options.borderColor;\n      model.borderWidth = options.borderWidth;\n      model.borderDash = options.borderDash || [];\n      model.borderDashOffset = options.borderDashOffset || 0;\n    },\n    inRange: function (mouseX, mouseY) {\n      var model = this._model;\n      return (// On the line\n        model.line && model.line.intersects(mouseX, mouseY, this.getHeight()) || // On the label\n        model.labelEnabled && model.labelContent && mouseX >= model.labelX && mouseX <= model.labelX + model.labelWidth && mouseY >= model.labelY && mouseY <= model.labelY + model.labelHeight\n      );\n    },\n    getCenterPoint: function () {\n      return {\n        x: (this._model.x2 + this._model.x1) / 2,\n        y: (this._model.y2 + this._model.y1) / 2\n      };\n    },\n    getWidth: function () {\n      return Math.abs(this._model.right - this._model.left);\n    },\n    getHeight: function () {\n      return this._model.borderWidth || 1;\n    },\n    getArea: function () {\n      return Math.sqrt(Math.pow(this.getWidth(), 2) + Math.pow(this.getHeight(), 2));\n    },\n    draw: function () {\n      var view = this._view;\n      var ctx = this.chartInstance.chart.ctx;\n\n      if (!view.clip) {\n        return;\n      }\n\n      ctx.save(); // Canvas setup\n\n      ctx.beginPath();\n      ctx.rect(view.clip.x1, view.clip.y1, view.clip.x2 - view.clip.x1, view.clip.y2 - view.clip.y1);\n      ctx.clip();\n      ctx.lineWidth = view.borderWidth;\n      ctx.strokeStyle = view.borderColor;\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(view.borderDash);\n      }\n\n      ctx.lineDashOffset = view.borderDashOffset; // Draw\n\n      ctx.beginPath();\n      ctx.moveTo(view.x1, view.y1);\n      ctx.lineTo(view.x2, view.y2);\n      ctx.stroke();\n\n      if (view.labelEnabled && view.labelContent) {\n        ctx.beginPath();\n        ctx.rect(view.clip.x1, view.clip.y1, view.clip.x2 - view.clip.x1, view.clip.y2 - view.clip.y1);\n        ctx.clip();\n        ctx.fillStyle = view.labelBackgroundColor; // Draw the tooltip\n\n        chartHelpers.drawRoundedRectangle(ctx, view.labelX, // x\n        view.labelY, // y\n        view.labelWidth, // width\n        view.labelHeight, // height\n        view.labelCornerRadius // radius\n        );\n        ctx.fill(); // Draw the text\n\n        ctx.font = chartHelpers.fontString(view.labelFontSize, view.labelFontStyle, view.labelFontFamily);\n        ctx.fillStyle = view.labelFontColor;\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText(view.labelContent, view.labelX + view.labelWidth / 2, view.labelY + view.labelHeight / 2);\n      }\n\n      ctx.restore();\n    }\n  });\n\n  function LineFunction(view) {\n    // Describe the line in slope-intercept form (y = mx + b).\n    // Note that the axes are rotated 90Â° CCW, which causes the\n    // x- and y-axes to be swapped.\n    var m = (view.x2 - view.x1) / (view.y2 - view.y1);\n    var b = view.x1 || 0;\n    this.m = m;\n    this.b = b;\n\n    this.getX = function (y) {\n      // Coordinates are relative to the origin of the canvas\n      return m * (y - view.y1) + b;\n    };\n\n    this.getY = function (x) {\n      return (x - b) / m + view.y1;\n    };\n\n    this.intersects = function (x, y, epsilon) {\n      epsilon = epsilon || 0.001;\n      var dy = this.getY(x),\n          dx = this.getX(y);\n      return (!isFinite(dy) || Math.abs(y - dy) < epsilon) && (!isFinite(dx) || Math.abs(x - dx) < epsilon);\n    };\n  }\n\n  function calculateLabelPosition(view, width, height, padWidth, padHeight) {\n    var line = view.line;\n    var ret = {},\n        xa = 0,\n        ya = 0;\n\n    switch (true) {\n      // top align\n      case view.mode == verticalKeyword && view.labelPosition == \"top\":\n        ya = padHeight + view.labelYAdjust;\n        xa = width / 2 + view.labelXAdjust;\n        ret.y = view.y1 + ya;\n        ret.x = (isFinite(line.m) ? line.getX(ret.y) : view.x1) - xa;\n        break;\n      // bottom align\n\n      case view.mode == verticalKeyword && view.labelPosition == \"bottom\":\n        ya = height + padHeight + view.labelYAdjust;\n        xa = width / 2 + view.labelXAdjust;\n        ret.y = view.y2 - ya;\n        ret.x = (isFinite(line.m) ? line.getX(ret.y) : view.x1) - xa;\n        break;\n      // left align\n\n      case view.mode == horizontalKeyword && view.labelPosition == \"left\":\n        xa = padWidth + view.labelXAdjust;\n        ya = -(height / 2) + view.labelYAdjust;\n        ret.x = view.x1 + xa;\n        ret.y = line.getY(ret.x) + ya;\n        break;\n      // right align\n\n      case view.mode == horizontalKeyword && view.labelPosition == \"right\":\n        xa = width + padWidth + view.labelXAdjust;\n        ya = -(height / 2) + view.labelYAdjust;\n        ret.x = view.x2 - xa;\n        ret.y = line.getY(ret.x) + ya;\n        break;\n      // center align\n\n      default:\n        ret.x = (view.x1 + view.x2 - width) / 2 + view.labelXAdjust;\n        ret.y = (view.y1 + view.y2 - height) / 2 + view.labelYAdjust;\n    }\n\n    return ret;\n  }\n\n  return LineAnnotation;\n};","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/node_modules/chartjs-plugin-annotation/src/types/line.js"],"names":["module","exports","Chart","chartHelpers","helpers","require","horizontalKeyword","verticalKeyword","LineAnnotation","Annotation","Element","extend","setDataLimits","model","_model","options","ranges","scaleID","min","value","max","endValue","configure","chartInstance","ctx","chart","scale","scales","pixel","endPixel","isValid","getPixelForValue","NaN","isNaN","chartArea","clip","x1","left","x2","right","y1","top","y2","bottom","mode","line","LineFunction","labelBackgroundColor","label","backgroundColor","labelFontFamily","fontFamily","labelFontSize","fontSize","labelFontStyle","fontStyle","labelFontColor","fontColor","labelXPadding","xPadding","labelYPadding","yPadding","labelCornerRadius","cornerRadius","labelPosition","position","labelXAdjust","xAdjust","labelYAdjust","yAdjust","labelEnabled","enabled","labelContent","content","font","fontString","textWidth","measureText","width","textHeight","calculateLabelPosition","labelX","x","labelY","y","labelWidth","labelHeight","borderColor","borderWidth","borderDash","borderDashOffset","inRange","mouseX","mouseY","intersects","getHeight","getCenterPoint","getWidth","Math","abs","getArea","sqrt","pow","draw","view","_view","save","beginPath","rect","lineWidth","strokeStyle","setLineDash","lineDashOffset","moveTo","lineTo","stroke","fillStyle","drawRoundedRectangle","fill","textAlign","textBaseline","fillText","restore","m","b","getX","getY","epsilon","dy","dx","isFinite","height","padWidth","padHeight","ret","xa","ya"],"mappings":"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","sourcesContent":["// Line Annotation implementation\nmodule.exports = function(Chart) {\n\tvar chartHelpers = Chart.helpers;\n\tvar helpers = require('../helpers.js')(Chart);\n\n\tvar horizontalKeyword = 'horizontal';\n\tvar verticalKeyword = 'vertical';\n\n\tvar LineAnnotation = Chart.Annotation.Element.extend({\n\t\tsetDataLimits: function() {\n\t\t\tvar model = this._model;\n\t\t\tvar options = this.options;\n\n\t\t\t// Set the data range for this annotation\n\t\t\tmodel.ranges = {};\n\t\t\tmodel.ranges[options.scaleID] = {\n\t\t\t\tmin: options.value,\n\t\t\t\tmax: options.endValue || options.value\n\t\t\t};\n\t\t},\n\t\tconfigure: function() {\n\t\t\tvar model = this._model;\n\t\t\tvar options = this.options;\n\t\t\tvar chartInstance = this.chartInstance;\n\t\t\tvar ctx = chartInstance.chart.ctx;\n\n\t\t\tvar scale = chartInstance.scales[options.scaleID];\n\t\t\tvar pixel, endPixel;\n\t\t\tif (scale) {\n\t\t\t\tpixel = helpers.isValid(options.value) ? scale.getPixelForValue(options.value) : NaN;\n\t\t\t\tendPixel = helpers.isValid(options.endValue) ? scale.getPixelForValue(options.endValue) : pixel;\n\t\t\t}\n\n\t\t\tif (isNaN(pixel)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar chartArea = chartInstance.chartArea;\n\n\t\t\t// clip annotations to the chart area\n\t\t\tmodel.clip = {\n\t\t\t\tx1: chartArea.left,\n\t\t\t\tx2: chartArea.right,\n\t\t\t\ty1: chartArea.top,\n\t\t\t\ty2: chartArea.bottom\n\t\t\t};\n\n\t\t\tif (this.options.mode == horizontalKeyword) {\n\t\t\t\tmodel.x1 = chartArea.left;\n\t\t\t\tmodel.x2 = chartArea.right;\n\t\t\t\tmodel.y1 = pixel;\n\t\t\t\tmodel.y2 = endPixel;\n\t\t\t} else {\n\t\t\t\tmodel.y1 = chartArea.top;\n\t\t\t\tmodel.y2 = chartArea.bottom;\n\t\t\t\tmodel.x1 = pixel;\n\t\t\t\tmodel.x2 = endPixel;\n\t\t\t}\n\n\t\t\tmodel.line = new LineFunction(model);\n\t\t\tmodel.mode = options.mode;\n\n\t\t\t// Figure out the label:\n\t\t\tmodel.labelBackgroundColor = options.label.backgroundColor;\n\t\t\tmodel.labelFontFamily = options.label.fontFamily;\n\t\t\tmodel.labelFontSize = options.label.fontSize;\n\t\t\tmodel.labelFontStyle = options.label.fontStyle;\n\t\t\tmodel.labelFontColor = options.label.fontColor;\n\t\t\tmodel.labelXPadding = options.label.xPadding;\n\t\t\tmodel.labelYPadding = options.label.yPadding;\n\t\t\tmodel.labelCornerRadius = options.label.cornerRadius;\n\t\t\tmodel.labelPosition = options.label.position;\n\t\t\tmodel.labelXAdjust = options.label.xAdjust;\n\t\t\tmodel.labelYAdjust = options.label.yAdjust;\n\t\t\tmodel.labelEnabled = options.label.enabled;\n\t\t\tmodel.labelContent = options.label.content;\n\n\t\t\tctx.font = chartHelpers.fontString(model.labelFontSize, model.labelFontStyle, model.labelFontFamily);\n\t\t\tvar textWidth = ctx.measureText(model.labelContent).width;\n\t\t\tvar textHeight = ctx.measureText('M').width;\n\t\t\tvar labelPosition = calculateLabelPosition(model, textWidth, textHeight, model.labelXPadding, model.labelYPadding);\n\t\t\tmodel.labelX = labelPosition.x - model.labelXPadding;\n\t\t\tmodel.labelY = labelPosition.y - model.labelYPadding;\n\t\t\tmodel.labelWidth = textWidth + (2 * model.labelXPadding);\n\t\t\tmodel.labelHeight = textHeight + (2 * model.labelYPadding);\n\n\t\t\tmodel.borderColor = options.borderColor;\n\t\t\tmodel.borderWidth = options.borderWidth;\n\t\t\tmodel.borderDash = options.borderDash || [];\n\t\t\tmodel.borderDashOffset = options.borderDashOffset || 0;\n\t\t},\n\t\tinRange: function(mouseX, mouseY) {\n\t\t\tvar model = this._model;\n\t\t\t\n\t\t\treturn (\n\t\t\t\t// On the line\n\t\t\t\tmodel.line &&\n\t\t\t\tmodel.line.intersects(mouseX, mouseY, this.getHeight())\n\t\t\t) || (\n\t\t\t\t// On the label\n\t\t\t\tmodel.labelEnabled &&\n\t\t\t\tmodel.labelContent &&\n\t\t\t\tmouseX >= model.labelX && \n\t\t\t\tmouseX <= model.labelX + model.labelWidth && \n\t\t\t\tmouseY >= model.labelY && \n\t\t\t\tmouseY <= model.labelY + model.labelHeight\n\t\t\t);\n\t\t},\n\t\tgetCenterPoint: function() {\n\t\t\treturn {\n\t\t\t\tx: (this._model.x2 + this._model.x1) / 2,\n\t\t\t\ty: (this._model.y2 + this._model.y1) / 2\n\t\t\t};\n\t\t},\n\t\tgetWidth: function() {\n\t\t\treturn Math.abs(this._model.right - this._model.left);\n\t\t},\n\t\tgetHeight: function() {\n\t\t\treturn this._model.borderWidth || 1;\n\t\t},\n\t\tgetArea: function() {\n\t\t\treturn Math.sqrt(Math.pow(this.getWidth(), 2) + Math.pow(this.getHeight(), 2));\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar view = this._view;\n\t\t\tvar ctx = this.chartInstance.chart.ctx;\n\n\t\t\tif (!view.clip) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.save();\n\n\t\t\t// Canvas setup\n\t\t\tctx.beginPath();\n\t\t\tctx.rect(view.clip.x1, view.clip.y1, view.clip.x2 - view.clip.x1, view.clip.y2 - view.clip.y1);\n\t\t\tctx.clip();\n\n\t\t\tctx.lineWidth = view.borderWidth;\n\t\t\tctx.strokeStyle = view.borderColor;\n\n\t\t\tif (ctx.setLineDash) {\n\t\t\t\tctx.setLineDash(view.borderDash);\n\t\t\t}\n\t\t\tctx.lineDashOffset = view.borderDashOffset;\n\n\t\t\t// Draw\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(view.x1, view.y1);\n\t\t\tctx.lineTo(view.x2, view.y2);\n\t\t\tctx.stroke();\n\n\t\t\tif (view.labelEnabled && view.labelContent) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.rect(view.clip.x1, view.clip.y1, view.clip.x2 - view.clip.x1, view.clip.y2 - view.clip.y1);\n\t\t\t\tctx.clip();\n\n\t\t\t\tctx.fillStyle = view.labelBackgroundColor;\n\t\t\t\t// Draw the tooltip\n\t\t\t\tchartHelpers.drawRoundedRectangle(\n\t\t\t\t\tctx,\n\t\t\t\t\tview.labelX, // x\n\t\t\t\t\tview.labelY, // y\n\t\t\t\t\tview.labelWidth, // width\n\t\t\t\t\tview.labelHeight, // height\n\t\t\t\t\tview.labelCornerRadius // radius\n\t\t\t\t);\n\t\t\t\tctx.fill();\n\n\t\t\t\t// Draw the text\n\t\t\t\tctx.font = chartHelpers.fontString(\n\t\t\t\t\tview.labelFontSize,\n\t\t\t\t\tview.labelFontStyle,\n\t\t\t\t\tview.labelFontFamily\n\t\t\t\t);\n\t\t\t\tctx.fillStyle = view.labelFontColor;\n\t\t\t\tctx.textAlign = 'center';\n\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\tctx.fillText(\n\t\t\t\t\tview.labelContent,\n\t\t\t\t\tview.labelX + (view.labelWidth / 2),\n\t\t\t\t\tview.labelY + (view.labelHeight / 2)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t});\n\n\tfunction LineFunction(view) {\n\t\t// Describe the line in slope-intercept form (y = mx + b).\n\t\t// Note that the axes are rotated 90Â° CCW, which causes the\n\t\t// x- and y-axes to be swapped.\n\t\tvar m = (view.x2 - view.x1) / (view.y2 - view.y1);\n\t\tvar b = view.x1 || 0;\n\n\t\tthis.m = m;\n\t\tthis.b = b;\n\n\t\tthis.getX = function(y) {\n\t\t\t// Coordinates are relative to the origin of the canvas\n\t\t\treturn m * (y - view.y1) + b;\n\t\t};\n\n\t\tthis.getY = function(x) {\n\t\t\treturn ((x - b) / m) + view.y1;\n\t\t};\n\n\t\tthis.intersects = function(x, y, epsilon) {\n\t\t\tepsilon = epsilon || 0.001;\n\t\t\tvar dy = this.getY(x),\n\t\t\t\tdx = this.getX(y);\n\t\t\treturn (\n\t\t\t\t(!isFinite(dy) || Math.abs(y - dy) < epsilon) &&\n\t\t\t\t(!isFinite(dx) || Math.abs(x - dx) < epsilon)\n\t\t\t);\n\t\t};\n\t}\n\n\tfunction calculateLabelPosition(view, width, height, padWidth, padHeight) {\n\t\tvar line = view.line;\n\t\tvar ret = {}, xa = 0, ya = 0;\n\n\t\tswitch (true) {\n\t\t\t// top align\n\t\t\tcase view.mode == verticalKeyword && view.labelPosition == \"top\":\n\t\t\t\tya = padHeight + view.labelYAdjust;\n\t\t\t\txa = (width / 2) + view.labelXAdjust;\n\t\t\t\tret.y = view.y1 + ya;\n\t\t\t\tret.x = (isFinite(line.m) ? line.getX(ret.y) : view.x1) - xa;\n\t\t\tbreak;\n\n\t\t\t// bottom align\n\t\t\tcase view.mode == verticalKeyword && view.labelPosition == \"bottom\":\n\t\t\t\tya = height + padHeight + view.labelYAdjust;\n\t\t\t\txa = (width / 2) + view.labelXAdjust;\n\t\t\t\tret.y = view.y2 - ya;\n\t\t\t\tret.x = (isFinite(line.m) ? line.getX(ret.y) : view.x1) - xa;\n\t\t\tbreak;\n\n\t\t\t// left align\n\t\t\tcase view.mode == horizontalKeyword && view.labelPosition == \"left\":\n\t\t\t\txa = padWidth + view.labelXAdjust;\n\t\t\t\tya = -(height / 2) + view.labelYAdjust;\n\t\t\t\tret.x = view.x1 + xa;\n\t\t\t\tret.y = line.getY(ret.x) + ya;\n\t\t\tbreak;\n\n\t\t\t// right align\n\t\t\tcase view.mode == horizontalKeyword && view.labelPosition == \"right\":\n\t\t\t\txa = width + padWidth + view.labelXAdjust;\n\t\t\t\tya = -(height / 2) + view.labelYAdjust;\n\t\t\t\tret.x = view.x2 - xa;\n\t\t\t\tret.y = line.getY(ret.x) + ya;\n\t\t\tbreak;\n\n\t\t\t// center align\n\t\t\tdefault:\n\t\t\t\tret.x = ((view.x1 + view.x2 - width) / 2) + view.labelXAdjust;\n\t\t\t\tret.y = ((view.y1 + view.y2 - height) / 2) + view.labelYAdjust;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treturn LineAnnotation;\n};\n"]},"metadata":{},"sourceType":"script"}