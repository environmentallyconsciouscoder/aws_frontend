{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/contexts/waste-labels-context.js\";\nimport React, { createContext, useEffect, useState } from 'react';\nimport { getWasteLabel } from \"../api\";\nexport const WasteLabelsContext = createContext();\n\nconst WasteLabelsContextProvider = props => {\n  const [labels, setLabels] = useState([]);\n  useEffect(() => {\n    if (props) {\n      getWasteLabel(props.companyName, props.companyId, props.siteName).then(data => {\n        // console.log(\"data\",data);\n        setLabels(data);\n      });\n    }\n  }, [props.companyName, props.companyId, props.siteName]);\n  return /*#__PURE__*/React.createElement(WasteLabelsContext.Provider, {\n    value: {\n      labels\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default WasteLabelsContextProvider;","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/contexts/waste-labels-context.js"],"names":["React","createContext","useEffect","useState","getWasteLabel","WasteLabelsContext","WasteLabelsContextProvider","props","labels","setLabels","companyName","companyId","siteName","then","data","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,SAASC,aAAT,QAA8B,QAA9B;AAEA,OAAO,MAAMC,kBAAkB,GAAGJ,aAAa,EAAxC;;AAEP,MAAMK,0BAA0B,GAAGC,KAAK,IAAI;AAC1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAIK,KAAJ,EAAW;AACPH,MAAAA,aAAa,CAACG,KAAK,CAACG,WAAP,EAAoBH,KAAK,CAACI,SAA1B,EAAqCJ,KAAK,CAACK,QAA3C,CAAb,CAAkEC,IAAlE,CAAwEC,IAAD,IAAU;AAC7E;AACAL,QAAAA,SAAS,CAACK,IAAD,CAAT;AACH,OAHD;AAIH;AAEJ,GATU,EASR,CAAEP,KAAK,CAACG,WAAR,EAAqBH,KAAK,CAACI,SAA3B,EAAsCJ,KAAK,CAACK,QAA5C,CATQ,CAAT;AAYA,sBACE,oBAAC,kBAAD,CAAoB,QAApB;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA;AADK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGD,KAAK,CAACQ,QALT,CADF;AASD,CAxBD;;AA0BA,eAAeT,0BAAf","sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\nimport { getWasteLabel } from \"../api\";\n\nexport const WasteLabelsContext = createContext()\n\nconst WasteLabelsContextProvider = props => {\n  const [labels, setLabels] = useState([]);\n\n  useEffect(() => {\n\n    if (props) {\n        getWasteLabel(props.companyName, props.companyId, props.siteName).then((data) => {\n            // console.log(\"data\",data);\n            setLabels(data);\n        });\n    }\n\n}, [ props.companyName, props.companyId, props.siteName])\n\n\n  return (\n    <WasteLabelsContext.Provider\n      value={{\n        labels\n      }}\n    >\n      {props.children}\n    </WasteLabelsContext.Provider>\n  )\n}\n\nexport default WasteLabelsContextProvider\n"]},"metadata":{},"sourceType":"module"}