{"ast":null,"code":"// import React, { useState } from \"react\";\nconst CheckRequest = () => {\n  const checkWeeklyWasteData = data => {\n    // console.log(\"data\", data)\n    let result;\n\n    if (Object.keys(data).length === 0 || data === null || data === undefined) {\n      result = {\n        currentWeeklyValues: [[{\n          coverWaste: [0],\n          preparationWaste: [0],\n          spoilageWaste: [0],\n          weekOfYear: \"0\",\n          Date: \"\"\n        }]],\n        weeklyWasteTrend: [{\n          totalWaste: 0,\n          coverWaste: 0,\n          prepWaste: 0,\n          spoilageWaste: 0\n        }]\n      };\n    } else {\n      result = data;\n    }\n\n    return result;\n  };\n\n  const checkWastePerCoverOrSales = data => {\n    let result;\n\n    if (Object.keys(data).length === 0 || data === null || data === undefined) {\n      result = {\n        monthsName: \"\",\n        percentageOfInputsAreZeros: 0,\n        siteName: \"\",\n        totalCW: \"\",\n        totalCoverInputs: 0,\n        totalPW: \"\",\n        totalSW: \"\",\n        totalWaste: \"\",\n        wastePerCoverForAllWaste: [0],\n        wastePerCoverForCoverWaste: [0],\n        wastePerCoverForPreparationWaste: [0],\n        wastePerCoverForSpoilageWaste: [0],\n        xAxis: []\n      };\n    } else {\n      result = data;\n    }\n\n    return result;\n  };\n\n  const checkAllSitesData = data => {\n    // console.log(\"data\",data)\n    let result;\n\n    if (Object.keys(data).length === 0 || data === null || data === undefined) {\n      result = [{\n        coverWaste: 0,\n        prepWaste: 0,\n        siteName: \"\",\n        spoilageWaste: 0,\n        totalWaste: 0,\n        trends: 0\n      }];\n    } else {\n      result = data;\n    }\n\n    return result;\n  };\n\n  const checkGetDailyAndWeeklyDatesData = data => {\n    // console.log(\"data\",data)\n    let result;\n\n    if (Object.keys(data).length === 0 || data === null || data === undefined) {\n      result = {\n        dailyCoverWasteArrayFormated: [0],\n        dailyPrepWasteArrayFormated: [0],\n        dailySpoilageWasteArrayFormated: [0],\n        hourlyWastesWeeklyArray: [{\n          date: \"\",\n          data: {\n            coverWaste: [0],\n            preparationWaste: [0],\n            spoilageWaste: [0]\n          }\n        }],\n        totalDailyWaste: [0],\n        weeklyData: [\"2021-05-17\", \"2021-05-18\", \"2021-05-19\", \"2021-05-20\", \"2021-05-21\", \"2021-05-22\", \"2021-05-23\"]\n      };\n    } else {\n      result = data;\n    }\n\n    return result;\n  };\n\n  return {\n    checkWeeklyWasteData,\n    checkWastePerCoverOrSales,\n    checkAllSitesData,\n    checkGetDailyAndWeeklyDatesData\n  };\n};\n\nexport default CheckRequest;","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/libs/use-check-request.js"],"names":["CheckRequest","checkWeeklyWasteData","data","result","Object","keys","length","undefined","currentWeeklyValues","coverWaste","preparationWaste","spoilageWaste","weekOfYear","Date","weeklyWasteTrend","totalWaste","prepWaste","checkWastePerCoverOrSales","monthsName","percentageOfInputsAreZeros","siteName","totalCW","totalCoverInputs","totalPW","totalSW","wastePerCoverForAllWaste","wastePerCoverForCoverWaste","wastePerCoverForPreparationWaste","wastePerCoverForSpoilageWaste","xAxis","checkAllSitesData","trends","checkGetDailyAndWeeklyDatesData","dailyCoverWasteArrayFormated","dailyPrepWasteArrayFormated","dailySpoilageWasteArrayFormated","hourlyWastesWeeklyArray","date","totalDailyWaste","weeklyData"],"mappings":"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","sourcesContent":["// import React, { useState } from \"react\";\n\nconst CheckRequest = () => {\n\n    const checkWeeklyWasteData = (data) => {\n        // console.log(\"data\", data)\n\n        let result;\n        if (Object.keys(data).length === 0 || data === null || data === undefined) {\n                result = {\n                    currentWeeklyValues: [\n                        [{\n                            coverWaste: [0],\n                            preparationWaste: [0],\n                            spoilageWaste: [0],\n                            weekOfYear: \"0\",\n                            Date:\"\"\n                        }]\n            ],\n            weeklyWasteTrend:\n             [\n                 {\n                     totalWaste: 0,\n                     coverWaste: 0,\n                     prepWaste: 0,\n                     spoilageWaste: 0\n                 }\n             ]\n        };\n        } else {\n            result = data;\n        }\n\n        return result;\n    };\n\n    const checkWastePerCoverOrSales = (data) => {\n        let result;\n        if (Object.keys(data).length === 0 || data === null || data === undefined) {\n            result = {\n                monthsName: \"\",\n                percentageOfInputsAreZeros: 0,\n                siteName: \"\",\n                totalCW: \"\",\n                totalCoverInputs: 0,\n                totalPW: \"\",\n                totalSW: \"\",\n                totalWaste: \"\",\n                wastePerCoverForAllWaste:[0],\n                wastePerCoverForCoverWaste: [0],\n                wastePerCoverForPreparationWaste: [0],\n                wastePerCoverForSpoilageWaste: [0],\n                xAxis: []\n                }\n        } else {\n            result = data\n        }\n\n        return result;\n    }\n\n    const checkAllSitesData = (data) => {\n        // console.log(\"data\",data)\n        let result;\n        if (Object.keys(data).length === 0 || data === null || data === undefined) {\n            result = [{\n                coverWaste: 0,\n                prepWaste: 0,\n                siteName: \"\",\n                spoilageWaste: 0,\n                totalWaste: 0,\n                trends: 0\n            }]\n        } else {\n            result = data\n        }\n\n        return result;\n    }\n\n    const checkGetDailyAndWeeklyDatesData = (data) => {\n        // console.log(\"data\",data)\n        let result;\n        if (Object.keys(data).length === 0 || data === null || data === undefined) {\n            result = {\n                dailyCoverWasteArrayFormated: [0],\n                dailyPrepWasteArrayFormated: [0],\n                dailySpoilageWasteArrayFormated: [0],\n                hourlyWastesWeeklyArray: [{\n                    date: \"\",\n                    data: {\n                        coverWaste: [0],\n                        preparationWaste: [0],\n                        spoilageWaste: [0]\n                    }\n                }],\n                totalDailyWaste: [0],\n                weeklyData: [\"2021-05-17\", \"2021-05-18\", \"2021-05-19\", \"2021-05-20\", \"2021-05-21\", \"2021-05-22\", \"2021-05-23\"]\n            }\n        } else {\n            result = data\n        }\n\n        return result;\n    };\n\n    return {\n        checkWeeklyWasteData,\n        checkWastePerCoverOrSales,\n        checkAllSitesData,\n        checkGetDailyAndWeeklyDatesData\n    }\n\n}\n\nexport default CheckRequest"]},"metadata":{},"sourceType":"module"}