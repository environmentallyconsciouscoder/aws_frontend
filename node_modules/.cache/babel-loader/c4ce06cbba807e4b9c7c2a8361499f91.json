{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/reuseable-components/charts/slack-chart/slack-chart.js\";\nimport React, { useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport Chart from \"chart.js\";\nimport \"chartjs-plugin-annotation\";\nimport \"chartjs-plugin-datalabels\";\nimport useWindowDimensions from \"../../../../libs/use-window-dimensions\";\nexport default function SlackChart(props) {\n  Chart.defaults.global.defaultFontFamily = \"CooperHewitt-Book\";\n  let graphHeight = 130;\n  let graphWidth = 400;\n  const {\n    width\n  } = useWindowDimensions();\n\n  if (width <= 700) {\n    graphWidth = 260;\n    graphHeight = 279;\n  }\n\n  useEffect(() => {// eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.chartData]);\n  return /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"],\n      datasets: props.chartData\n    },\n    width: graphWidth,\n    height: graphHeight,\n    options: {\n      responsive: true,\n      maintainAspectRatio: true,\n      legend: {\n        display: true\n      },\n      scales: {\n        xAxes: [{\n          stacked: true,\n          gridLines: {\n            display: false\n          },\n          ticks: {\n            fontColor: \"rgb(15, 128, 140)\"\n          },\n          display: false\n        }],\n        yAxes: [{\n          stacked: true,\n          display: false,\n          gridLines: {\n            display: false\n          }\n        }]\n      },\n      plugins: {\n        datalabels: {\n          display: false,\n          anchor: \"top\",\n          align: \"middle\",\n          //   color: monthlyWasteTextColor,\n          font: {\n            size: 9,\n            weight: \"bold\"\n          }\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  });\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/reuseable-components/charts/slack-chart/slack-chart.js"],"names":["React","useEffect","Bar","Chart","useWindowDimensions","SlackChart","props","defaults","global","defaultFontFamily","graphHeight","graphWidth","width","chartData","labels","datasets","responsive","maintainAspectRatio","legend","display","scales","xAxes","stacked","gridLines","ticks","fontColor","yAxes","plugins","datalabels","anchor","align","font","size","weight"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAO,2BAAP;AACA,OAAO,2BAAP;AAEA,OAAOC,mBAAP,MAAgC,wCAAhC;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACxCH,EAAAA,KAAK,CAACI,QAAN,CAAeC,MAAf,CAAsBC,iBAAtB,GAA0C,mBAA1C;AAEA,MAAIC,WAAW,GAAG,GAAlB;AACA,MAAIC,UAAU,GAAG,GAAjB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAYR,mBAAmB,EAArC;;AAEA,MAAIQ,KAAK,IAAI,GAAb,EAAkB;AAChBD,IAAAA,UAAU,GAAG,GAAb;AACAD,IAAAA,WAAW,GAAG,GAAd;AACD;;AAEHT,EAAAA,SAAS,CAAC,MAAM,CAEhB;AACC,GAHQ,EAGP,CAACK,KAAK,CAACO,SAAP,CAHO,CAAT;AAKE,sBAEQ,oBAAC,GAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,CACd,GADc,EAEd,GAFc,EAGd,GAHc,EAId,GAJc,EAKd,GALc,EAMd,GANc,EAOd,GAPc,CADJ;AAUJC,MAAAA,QAAQ,EAAET,KAAK,CAACO;AAVZ,KADR;AAaE,IAAA,KAAK,EAAEF,UAbT;AAcE,IAAA,MAAM,EAAED,WAdV;AAeE,IAAA,OAAO,EAAE;AACPM,MAAAA,UAAU,EAAE,IADL;AAEPC,MAAAA,mBAAmB,EAAE,IAFd;AAGPC,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OAHD;AAIPC,MAAAA,MAAM,EAAE;AAENC,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,OAAO,EAAE,IADX;AAEEC,UAAAA,SAAS,EAAE;AACTJ,YAAAA,OAAO,EAAE;AADA,WAFb;AAKEK,UAAAA,KAAK,EAAE;AACLC,YAAAA,SAAS,EAAE;AADN,WALT;AAQEN,UAAAA,OAAO,EAAE;AARX,SADK,CAFD;AAcNO,QAAAA,KAAK,EAAE,CACL;AACEJ,UAAAA,OAAO,EAAE,IADX;AAEEH,UAAAA,OAAO,EAAE,KAFX;AAGEI,UAAAA,SAAS,EAAE;AACTJ,YAAAA,OAAO,EAAE;AADA;AAHb,SADK;AAdD,OAJD;AA6BPQ,MAAAA,OAAO,EAAE;AACPC,QAAAA,UAAU,EAAE;AACVT,UAAAA,OAAO,EAAE,KADC;AAEVU,UAAAA,MAAM,EAAE,KAFE;AAGVC,UAAAA,KAAK,EAAE,QAHG;AAIZ;AACEC,UAAAA,IAAI,EAAE;AACEC,YAAAA,IAAI,EAAE,CADR;AAEEC,YAAAA,MAAM,EAAE;AAFV;AALI;AADL;AA7BF,KAfX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR;AA8DD","sourcesContent":["\nimport React, { useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport Chart from \"chart.js\";\nimport \"chartjs-plugin-annotation\";\nimport \"chartjs-plugin-datalabels\";\n\nimport useWindowDimensions from \"../../../../libs/use-window-dimensions\";\n\nexport default function SlackChart(props) {\n  Chart.defaults.global.defaultFontFamily = \"CooperHewitt-Book\";\n\n  let graphHeight = 130;\n  let graphWidth = 400;\n\n  const { width } = useWindowDimensions();\n\n  if (width <= 700) {\n    graphWidth = 260;\n    graphHeight = 279;\n  }\n\nuseEffect(() => {\n\n// eslint-disable-next-line react-hooks/exhaustive-deps\n},[props.chartData]);\n\n  return (\n\n          <Bar\n            data={{\n              labels: [\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\",\n        \"5\",\n        \"6\",\n        \"7\"\n      ],\n              datasets: props.chartData\n            }}\n            width={graphWidth}\n            height={graphHeight}\n            options={{\n              responsive: true,\n              maintainAspectRatio: true,\n              legend: {display: true},\n              scales: {\n\n                xAxes: [\n                  {\n                    stacked: true,\n                    gridLines: {\n                      display: false,\n                    },\n                    ticks: {\n                      fontColor: \"rgb(15, 128, 140)\",\n                    },\n                    display: false,\n                  },\n                ],\n                yAxes: [\n                  {\n                    stacked: true,\n                    display: false,\n                    gridLines: {\n                      display: false,\n                    }\n                  },\n                ],\n              },\n\n              plugins: {\n                datalabels: {\n                  display: false,\n                  anchor: \"top\",\n                  align: \"middle\",\n                //   color: monthlyWasteTextColor,\n                  font: {\n                          size: 9,\n                          weight: \"bold\",\n                        }\n                },\n              },\n            }}\n          />\n\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}