{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/contexts/waste-on-a-day-of-the-week-context.js\";\nimport React, { createContext, useEffect, useState } from 'react';\nimport { getYear } from \"../utilities\";\nimport { getWasteOnAdayOfTheWeek } from \"../api\";\nexport const WasteOnAdayOfTheWeekContext = createContext();\n\nconst WasteOnAdayOfTheWeekProvider = props => {\n  const [wasteOnAdayOfTheWeekData, setWasteOnAdayOfTheWeek] = useState([]);\n  const [day, setDay] = React.useState(0);\n  const [year, setYear] = React.useState(getYear());\n  const [siteName, setSiteName] = React.useState();\n  const [startDate, setStartDate] = React.useState(props.startDate);\n  useEffect(() => {\n    if (props.companyId && props.siteName) {\n      getWasteOnAdayOfTheWeek(props.companyId, props.companyName, props.siteName, day, year).then(data => {\n        console.log(\"data\", data);\n        setWasteOnAdayOfTheWeek(data.responseData.wasteOnADayOfTheWeek[0]);\n        setSiteName(props.siteName.replace(/[^A-Za-z]+/g, ''));\n        setStartDate(props.startDate);\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props.siteName, day, year]);\n  return /*#__PURE__*/React.createElement(WasteOnAdayOfTheWeekContext.Provider, {\n    value: {\n      year,\n      day,\n      setYear,\n      setDay,\n      siteName,\n      wasteOnAdayOfTheWeekData,\n      startDate\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default WasteOnAdayOfTheWeekProvider;","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/contexts/waste-on-a-day-of-the-week-context.js"],"names":["React","createContext","useEffect","useState","getYear","getWasteOnAdayOfTheWeek","WasteOnAdayOfTheWeekContext","WasteOnAdayOfTheWeekProvider","props","wasteOnAdayOfTheWeekData","setWasteOnAdayOfTheWeek","day","setDay","year","setYear","siteName","setSiteName","startDate","setStartDate","companyId","companyName","then","data","console","log","responseData","wasteOnADayOfTheWeek","replace","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,SACEC,OADF,QAEO,cAFP;AAGA,SAASC,uBAAT,QAAwC,QAAxC;AACA,OAAO,MAAMC,2BAA2B,GAAGL,aAAa,EAAjD;;AAEP,MAAMM,4BAA4B,GAAGC,KAAK,IAAI;AAE5C,QAAM,CAACC,wBAAD,EAA2BC,uBAA3B,IAAsDP,QAAQ,CAAC,EAAD,CAApE;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBZ,KAAK,CAACG,QAAN,CAAe,CAAf,CAAtB;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBd,KAAK,CAACG,QAAN,CAAeC,OAAO,EAAtB,CAAxB;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BhB,KAAK,CAACG,QAAN,EAAhC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4BlB,KAAK,CAACG,QAAN,CAAeK,KAAK,CAACS,SAArB,CAAlC;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,KAAK,CAACW,SAAN,IAAmBX,KAAK,CAACO,QAA7B,EAAuC;AACrCV,MAAAA,uBAAuB,CAACG,KAAK,CAACW,SAAP,EAAkBX,KAAK,CAACY,WAAxB,EAAqCZ,KAAK,CAACO,QAA3C,EAAqDJ,GAArD,EAA0DE,IAA1D,CAAvB,CACCQ,IADD,CACOC,IAAD,IAAS;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBF,IAAnB;AACAZ,QAAAA,uBAAuB,CAACY,IAAI,CAACG,YAAL,CAAkBC,oBAAlB,CAAuC,CAAvC,CAAD,CAAvB;AACAV,QAAAA,WAAW,CAACR,KAAK,CAACO,QAAN,CAAeY,OAAf,CAAuB,aAAvB,EAAsC,EAAtC,CAAD,CAAX;AACAT,QAAAA,YAAY,CAACV,KAAK,CAACS,SAAP,CAAZ;AACD,OAND;AAOD,KATa,CAUd;;AACD,GAXQ,EAWN,CAACT,KAAK,CAACO,QAAP,EAAiBJ,GAAjB,EAAsBE,IAAtB,CAXM,CAAT;AAaA,sBACE,oBAAC,2BAAD,CAA6B,QAA7B;AACG,IAAA,KAAK,EAAE;AACNA,MAAAA,IADM;AAENF,MAAAA,GAFM;AAGNG,MAAAA,OAHM;AAINF,MAAAA,MAJM;AAKNG,MAAAA,QALM;AAMNN,MAAAA,wBANM;AAONQ,MAAAA;AAPM,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGT,KAAK,CAACoB,QAXT,CADF;AAeD,CApCD;;AAsCA,eAAerB,4BAAf","sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\nimport {\n  getYear,\n} from \"../utilities\";\nimport { getWasteOnAdayOfTheWeek } from \"../api\";\nexport const WasteOnAdayOfTheWeekContext = createContext()\n\nconst WasteOnAdayOfTheWeekProvider = props => {\n\n  const [wasteOnAdayOfTheWeekData, setWasteOnAdayOfTheWeek] = useState([]);\n  const [day, setDay] = React.useState(0);\n  const [year, setYear] = React.useState(getYear());\n  const [siteName, setSiteName] = React.useState();\n  const [startDate, setStartDate] = React.useState(props.startDate);\n\n  useEffect(() => {\n    if (props.companyId && props.siteName) {\n      getWasteOnAdayOfTheWeek(props.companyId, props.companyName, props.siteName, day, year)\n      .then((data) =>{\n        console.log(\"data\",data)\n        setWasteOnAdayOfTheWeek(data.responseData.wasteOnADayOfTheWeek[0]);\n        setSiteName(props.siteName.replace(/[^A-Za-z]+/g, ''));\n        setStartDate(props.startDate)\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.siteName, day, year])\n\n  return (\n    <WasteOnAdayOfTheWeekContext.Provider\n       value={{\n        year,\n        day,\n        setYear,\n        setDay,\n        siteName,\n        wasteOnAdayOfTheWeekData,\n        startDate,\n      }}\n    >\n      {props.children}\n    </WasteOnAdayOfTheWeekContext.Provider>\n  )\n}\n\nexport default WasteOnAdayOfTheWeekProvider\n"]},"metadata":{},"sourceType":"module"}