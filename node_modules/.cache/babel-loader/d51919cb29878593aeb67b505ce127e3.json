{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/reports/event-customer-waste-v-customer-ref.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { AccordionHeading, AccordionBody } from \"../accordion\";\nimport { formatSiteName } from \"../../../../utilities.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"chartjs-plugin-annotation\";\nimport \"chartjs-plugin-datalabels\";\nimport Subheadings from \"../reuseable-components/labels/subheadings\";\nimport { DashboardContext } from \"../../../../contexts/dashboard-context.js\";\nimport { IdCustomerWasteContext } from \"../../../../contexts/id-customer-waste-context.js\";\nimport Pagination from \"./../reuseable-components/pagination/pagination.js\";\nimport Switches from \"../../libs/use-switches\";\nexport default function EventCustomerWasteVcustomerRefReport(props) {\n  const {\n    showEventCustomerWasteVcustomerRef,\n    setShowEventCustomerWasteVcustomerRef\n  } = Switches();\n  const {\n    siteName,\n    companyName,\n    sitesID,\n    sites\n  } = useContext(DashboardContext);\n  const {\n    xaxis,\n    yaxis,\n    eventName,\n    date,\n    sum\n  } = useContext(IdCustomerWasteContext);\n\n  const changePageForWeeks = ({\n    selected\n  }) => {};\n\n  useEffect(() => {\n    console.log(\"siteName\", siteName);\n  }, [props]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AccordionHeading, {\n    color: \"primPurpleBackgroundColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"EVENT CUSTOMER WASTE V CUSTOMER REF\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => {\n      setShowEventCustomerWasteVcustomerRef(!showEventCustomerWasteVcustomerRef);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, showEventCustomerWasteVcustomerRef ? \"X \" : \"| | | \"))), /*#__PURE__*/React.createElement(AccordionBody, {\n    open: showEventCustomerWasteVcustomerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"originalTheme__reportBackgroundColor addPaddingOfHalveRem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Subheadings, {\n    site: formatSiteName(siteName),\n    title: \"Event Customer Waste v Customer Ref\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyBlueTuckGreen cooperHewittBold\",\n    style: {\n      display: \"flex\",\n      width: \"100%\",\n      justifyContent: \"space-around\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, date), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, eventName), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, sum, \" Kg\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyBlueTuckGreen cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Customer Waste Kg\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__wrapperForGraph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      overflow: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      // labels: [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"],\n      labels: xaxis,\n      datasets: [{\n        // label: [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"],\n        // data: [1,2,3,4,5,6,7,8,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],\n        data: yaxis,\n        backgroundColor: \"rgb(133, 165, 101)\",\n        minBarLength: 0.3,\n        categoryPercentage: 1.0,\n        barPercentage: 0.5\n      }]\n    } // width={graphWidth}\n    // height={graphHeight}\n    ,\n    options: {\n      responsive: true,\n      maintainAspectRatio: true,\n      layout: {\n        padding: {\n          left: 25,\n          right: 25,\n          top: 10,\n          bottom: 10\n        }\n      },\n      scales: {\n        xAxes: [{\n          display: true,\n          gridLines: {\n            display: false\n          },\n          ticks: {\n            autoSkip: false,\n            fontSize: 7\n          }\n        }],\n        yAxes: [{\n          gridLines: {\n            display: false\n          },\n          ticks: {\n            maxTicksLimit: 4,\n            display: false,\n            beginAtZero: true // max: maxNumber\n\n          }\n        }]\n      },\n      plugins: {\n        datalabels: {\n          display: true,\n          color: \"rgb(47, 64, 30)\",\n          anchor: \"end\",\n          align: \"end\",\n          clamp: true,\n          font: {\n            size: 5,\n            weight: 900\n          },\n          offset: 4\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyBlueTuckGreen cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, \"Customer Code\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyBlueTuckGreen cooperHewittBold\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, \"Scroll left to right to see all customers\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      padding: \"2rem\",\n      fontSize: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    index: 0,\n    onPageChange: changePageForWeeks,\n    pageCount: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/reports/event-customer-waste-v-customer-ref.js"],"names":["React","useState","useContext","useEffect","AccordionHeading","AccordionBody","formatSiteName","Bar","Subheadings","DashboardContext","IdCustomerWasteContext","Pagination","Switches","EventCustomerWasteVcustomerRefReport","props","showEventCustomerWasteVcustomerRef","setShowEventCustomerWasteVcustomerRef","siteName","companyName","sitesID","sites","xaxis","yaxis","eventName","date","sum","changePageForWeeks","selected","console","log","display","width","justifyContent","overflow","labels","datasets","data","backgroundColor","minBarLength","categoryPercentage","barPercentage","responsive","maintainAspectRatio","layout","padding","left","right","top","bottom","scales","xAxes","gridLines","ticks","autoSkip","fontSize","yAxes","maxTicksLimit","beginAtZero","plugins","datalabels","color","anchor","align","clamp","font","size","weight","offset"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { AccordionHeading, AccordionBody } from \"../accordion\";\nimport { formatSiteName } from \"../../../../utilities.js\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport \"chartjs-plugin-annotation\";\nimport \"chartjs-plugin-datalabels\";\n\nimport Subheadings from \"../reuseable-components/labels/subheadings\"\n\nimport { DashboardContext } from \"../../../../contexts/dashboard-context.js\";\nimport { IdCustomerWasteContext } from \"../../../../contexts/id-customer-waste-context.js\";\n\nimport Pagination from \"./../reuseable-components/pagination/pagination.js\"\n\nimport Switches from \"../../libs/use-switches\";\n\nexport default function EventCustomerWasteVcustomerRefReport(props) {\n\n  const {\n    showEventCustomerWasteVcustomerRef,\n    setShowEventCustomerWasteVcustomerRef,\n  } = Switches()\n\n  const {\n    siteName,\n    companyName,\n    sitesID,\n    sites,\n  } = useContext(DashboardContext)\n\n  const {\n    xaxis,\n    yaxis,\n    eventName,\n    date,\n    sum\n  } = useContext(IdCustomerWasteContext)\n\n  const changePageForWeeks = ({ selected }) => {\n  };\n\n  useEffect(() => {\n    console.log(\"siteName\",siteName)\n  }, [props])\n\n  return (\n    <div\n    >\n      <AccordionHeading color={\"primPurpleBackgroundColor\"}>\n        <div className=\"section-title\">EVENT CUSTOMER WASTE V CUSTOMER REF</div>\n        <div className=\"container\">\n          <span\n            onClick={() => {\n              setShowEventCustomerWasteVcustomerRef(\n                !showEventCustomerWasteVcustomerRef\n              );\n            }}\n          >\n            {showEventCustomerWasteVcustomerRef ? \"X \" : \"| | | \"}\n          </span>\n        </div>\n      </AccordionHeading>\n\n      <AccordionBody open={showEventCustomerWasteVcustomerRef}>\n        <div className=\"originalTheme__reportBackgroundColor addPaddingOfHalveRem\">\n\n            <Subheadings\n              site={formatSiteName(siteName)}\n              title=\"Event Customer Waste v Customer Ref\"\n            />\n\n            <div className=\"applyBlueTuckGreen cooperHewittBold\"\n              style={{\n                display: \"flex\",\n                width: \"100%\",\n                justifyContent: \"space-around\"\n              }}\n            >\n              <div>{date}</div>\n              <div>{eventName}</div>\n              <div>{sum} Kg</div>\n            </div>\n\n            <div className=\"applyBlueTuckGreen cooperHewittBold\">\n              Customer Waste Kg\n            </div>\n\n            <div className=\"dashboard__wrapperForGraph\">\n              <div\n                style={{\n                  width: \"100%\",\n                  overflow: \"auto\"\n                }}\n              >\n\n              <Bar\n                    data={{\n                        // labels: [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"],\n                      labels: xaxis,\n                      datasets: [\n\n                        {\n                          // label: [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"],\n                          // data: [1,2,3,4,5,6,7,8,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],\n                          data: yaxis,\n                          backgroundColor: \"rgb(133, 165, 101)\",\n                          minBarLength: 0.3,\n                          categoryPercentage: 1.0,\n                          barPercentage: 0.5\n                        },\n\n                      ],\n                    }}\n                    // width={graphWidth}\n                    // height={graphHeight}\n                    options={{\n\n                      responsive: true,\n                      maintainAspectRatio: true,\n                      layout: {\n                        padding: {\n                            left: 25,\n                            right: 25,\n                            top: 10,\n                            bottom: 10\n                        }\n                      },\n                      scales: {\n                        xAxes: [\n                          {\n                            display: true,\n                            gridLines: {\n                              display: false,\n                            },\n                            ticks: {\n                              autoSkip: false,\n                              fontSize: 7\n                            },\n                          },\n                        ],\n                        yAxes: [\n                          {\n                            gridLines: {\n                              display: false,\n                            },\n                            ticks: {\n                              maxTicksLimit: 4,\n                              display: false,\n                              beginAtZero: true,\n                              // max: maxNumber\n                            },\n                          },\n                        ],\n                      },\n\n                      plugins: {\n                        datalabels: {\n                          display: true,\n                          color: \"rgb(47, 64, 30)\",\n                          anchor: \"end\",\n                          align: \"end\",\n                          clamp: true,\n                          font: {\n                            size: 5,\n                            weight: 900,\n                          },\n                          offset: 4,\n                        },\n\n                      },\n                    }}\n                />\n\n               </div>\n            </div>\n\n            <div className=\"applyBlueTuckGreen cooperHewittBold\">\n              Customer Code\n            </div>\n\n            <div className=\"applyBlueTuckGreen cooperHewittBold\" style={{\n              display: \"flex\",\n              justifyContent: \"center\"\n            }}>\n              Scroll left to right to see all customers\n            </div>\n\n            <div style={{\n              display: \"flex\",\n              padding: \"2rem\",\n              fontSize: \"10px\"\n            }}>\n              <Pagination index={0} onPageChange={changePageForWeeks} pageCount={0} />\n            </div>\n\n        </div>\n      </AccordionBody>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}