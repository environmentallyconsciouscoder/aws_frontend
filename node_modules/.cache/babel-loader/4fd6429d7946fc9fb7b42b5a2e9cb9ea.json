{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/reports/event-production-waste-report.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { AccordionHeading, AccordionBody } from \"../accordion\";\nimport { setItemInLocalStorage, formatSiteName, roundedUpNumberAndTurnBackToNumber } from \"../../../../utilities.js\";\nimport Subheadings from \"../reuseable-components/labels/subheadings\";\nimport SlackChart from \"../reuseable-components/charts/slack-chart/slack-chart\";\nimport { DailySalesVsWasteContext } from \"../../../../contexts/daily-sales-vs-waste-context\";\nimport { EventProductionWasteContext } from \"../../../../contexts/event-production-waste-context\";\nimport { ProductionPreparationContext } from \"../../../../contexts/production-preparation-context\";\nimport Pagination from \"./../reuseable-components/pagination/pagination.js\";\nexport default function DailySalesVsWasteReport(props) {\n  const {\n    siteName,\n    companyName,\n    id,\n    dataFromDB\n  } = useContext(DailySalesVsWasteContext);\n  const {\n    chartData,\n    index,\n    filterDataByDate,\n    callProductionPreparationInputsFunc,\n    prodPrepInputsData\n  } = useContext(EventProductionWasteContext);\n  const {\n    numberOfWeeks,\n    weeklyNumbers,\n    weeklyStartDateArry,\n    paginationIndex\n  } = useContext(ProductionPreparationContext);\n  const [dateLabels, setDateLabels] = useState([]);\n  const [formatedDate, setFormatedDate] = useState([]);\n  const [showDate, setShowDate] = useState(true);\n  const [weeksCommencing, setWeeksCommencing] = useState([]);\n  const [dailyCoverWaste, setDailyCoverWaste] = useState([0, 0, 0, 0, 0, 0, 0]);\n  const [dailyPrepWaste, setDailyPrepWaste] = useState([0, 0, 0, 0, 0, 0, 0]);\n  const [dailySpoilageWaste, setDailySpoilageWaste] = useState([0, 0, 0, 0, 0, 0, 0]);\n  const [dailyTotalWaste, setDailyTotalWaste] = useState([0, 0, 0, 0, 0, 0, 0]); // const indexFromLocalStoraage = JSON.parse(localStorage.getItem('index')) || 0;\n  // const [pageIndex, setPageIndex] = useState(indexFromLocalStoraage);\n\n  useEffect(() => {\n    setDateLabels(props.weeklyDailyRange);\n\n    if (props.weeklyDailyLabels) {\n      setFormatedDate(props.weeklyDailyLabels);\n    } // if (prodPrepInputsData.length !== 0) {\n    //   SetArrOfCSP(prodPrepInputsData)\n    // };\n\n\n    if (prodPrepInputsData.dailyCoverWasteArrayFormated !== undefined) {\n      setDailyCoverWaste(prodPrepInputsData.dailyCoverWasteArrayFormated);\n      setDailyPrepWaste(prodPrepInputsData.dailyPrepWasteArrayFormated);\n      setDailySpoilageWaste(prodPrepInputsData.dailySpoilageWasteArrayFormated);\n      setDailyTotalWaste(prodPrepInputsData.totalDailyWaste);\n    } // console.log(\"pageIndex\",pageIndex);\n    // console.log(\"numberOfWeeks\",numberOfWeeks)\n    // if (numberOfWeeks) {\n    //   setPageIndex(numberOfWeeks);\n    // }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [siteName, companyName, id, props, chartData, numberOfWeeks]);\n\n  const changePageForWeeks = ({\n    selected\n  }) => {\n    //set the date for the graph label\n    // console.log(\"weeklyStartDateArry\", weeklyStartDateArry[selected])\n    // console.log(\"weeklyNumbers[selected]\", weeklyNumbers[selected])\n    const date = \"w/c\" + \" \" + weeklyStartDateArry[selected];\n    setWeeksCommencing(date);\n    setShowDate(false); //get the data for the graph\n\n    callProductionPreparationInputsFunc(id, companyName, siteName, weeklyNumbers[selected]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.hideReport ? \"dailyWasteChart displayNone\" : \"dailyWasteChart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AccordionHeading, {\n    color: \"primPurpleBackgroundColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"EVENT PRODUCTION WASTE\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => {\n      props.setShowEventProductionWaste(!props.showEventProductionWaste);\n      setItemInLocalStorage(\"eventProductionWaste\", !props.showEventProductionWaste);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, props.showEventProductionWaste ? \"X \" : \"| | | \"))), /*#__PURE__*/React.createElement(AccordionBody, {\n    open: props.showEventProductionWaste,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"originalTheme__reportBackgroundColor addPaddingOfHalveRem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Subheadings, {\n    site: formatSiteName(siteName),\n    title: \"Production Preparation Waste\" // date={showDate ? dateLabels: weeksCommencing}\n    ,\n    date: weeksCommencing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyBlueTuckGreen cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \"Production Preparation Waste\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      display: \"flex\",\n      padding: \"10px\",\n      fontSize: \"10px\",\n      color: \"rgb(140, 112, 140)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, dataFromDB.map((item, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, \"C \", \" \", \" \", dailyCoverWaste[i]), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, \"S \", \" \", \" \", dailySpoilageWaste[i]), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, \"P \", \" \", \" \", dailyPrepWaste[i]), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, \"ALL \", \" \", \" \", dailyTotalWaste[i]));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyBlueTuckGreen cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, \"Production Volume\")), /*#__PURE__*/React.createElement(SlackChart, {\n    chartData: chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dailyWasteChart__dateLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, [\"MON\", \"TUES\", \"WED\", \"THURS\", \"FRI\", \"SAT\", \"SUN\"].map((data, i) => /*#__PURE__*/React.createElement(\"div\", {\n    className: index === i ? \"applyGoldColor\" : \"\",\n    key: i,\n    onClick: () => {\n      filterDataByDate(i);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, data))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"graph__row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"graph__message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, \"Click on the date to see data from that day\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      padding: \"2rem\",\n      fontSize: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    index: paginationIndex,\n    onPageChange: changePageForWeeks,\n    pageCount: numberOfWeeks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/reports/event-production-waste-report.js"],"names":["React","useState","useContext","useEffect","AccordionHeading","AccordionBody","setItemInLocalStorage","formatSiteName","roundedUpNumberAndTurnBackToNumber","Subheadings","SlackChart","DailySalesVsWasteContext","EventProductionWasteContext","ProductionPreparationContext","Pagination","DailySalesVsWasteReport","props","siteName","companyName","id","dataFromDB","chartData","index","filterDataByDate","callProductionPreparationInputsFunc","prodPrepInputsData","numberOfWeeks","weeklyNumbers","weeklyStartDateArry","paginationIndex","dateLabels","setDateLabels","formatedDate","setFormatedDate","showDate","setShowDate","weeksCommencing","setWeeksCommencing","dailyCoverWaste","setDailyCoverWaste","dailyPrepWaste","setDailyPrepWaste","dailySpoilageWaste","setDailySpoilageWaste","dailyTotalWaste","setDailyTotalWaste","weeklyDailyRange","weeklyDailyLabels","dailyCoverWasteArrayFormated","undefined","dailyPrepWasteArrayFormated","dailySpoilageWasteArrayFormated","totalDailyWaste","changePageForWeeks","selected","date","hideReport","setShowEventProductionWaste","showEventProductionWaste","flexDirection","justifyContent","display","padding","fontSize","color","map","item","i","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,cAAhD;AACA,SAASC,qBAAT,EAAgCC,cAAhC,EAAgDC,kCAAhD,QAA0F,0BAA1F;AAEA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,OAAOC,UAAP,MAAuB,wDAAvB;AAEA,SAASC,wBAAT,QAAyC,mDAAzC;AACA,SAASC,2BAAT,QAA4C,qDAA5C;AACA,SAASC,4BAAT,QAA6C,qDAA7C;AAEA,OAAOC,UAAP,MAAuB,oDAAvB;AAEA,eAAe,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AAErD,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,EAHI;AAIJC,IAAAA;AAJI,MAKDlB,UAAU,CAACS,wBAAD,CALf;AAOC,QAAM;AACLU,IAAAA,SADK;AAELC,IAAAA,KAFK;AAGLC,IAAAA,gBAHK;AAILC,IAAAA,mCAJK;AAKLC,IAAAA;AALK,MAMFvB,UAAU,CAACU,2BAAD,CANd;AAQA,QAAM;AACLc,IAAAA,aADK;AAELC,IAAAA,aAFK;AAGLC,IAAAA,mBAHK;AAILC,IAAAA;AAJK,MAKF3B,UAAU,CAACW,4BAAD,CALd;AAOD,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8B9B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC+B,YAAD,EAAeC,eAAf,IAAkChC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACiC,QAAD,EAAWC,WAAX,IAA0BlC,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACmC,eAAD,EAAkBC,kBAAlB,IAAwCpC,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAM,CAACqC,eAAD,EAAkBC,kBAAlB,IAAwCtC,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,CAAD,CAAtD;AACA,QAAM,CAACuC,cAAD,EAAiBC,iBAAjB,IAAsCxC,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,CAAD,CAApD;AACA,QAAM,CAACyC,kBAAD,EAAqBC,qBAArB,IAA8C1C,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,CAAD,CAA5D;AACA,QAAM,CAAC2C,eAAD,EAAkBC,kBAAlB,IAAwC5C,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,CAAD,CAAtD,CAhCqD,CAmCrD;AACA;;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,aAAa,CAACf,KAAK,CAAC8B,gBAAP,CAAb;;AAEA,QAAI9B,KAAK,CAAC+B,iBAAV,EAA6B;AAC3Bd,MAAAA,eAAe,CAACjB,KAAK,CAAC+B,iBAAP,CAAf;AACD,KALa,CAOd;AACA;AACA;;;AACA,QAAItB,kBAAkB,CAACuB,4BAAnB,KAAoDC,SAAxD,EAAmE;AACjEV,MAAAA,kBAAkB,CAACd,kBAAkB,CAACuB,4BAApB,CAAlB;AACAP,MAAAA,iBAAiB,CAAChB,kBAAkB,CAACyB,2BAApB,CAAjB;AACAP,MAAAA,qBAAqB,CAAClB,kBAAkB,CAAC0B,+BAApB,CAArB;AACAN,MAAAA,kBAAkB,CAACpB,kBAAkB,CAAC2B,eAApB,CAAlB;AACD,KAfa,CAgBd;AACA;AACA;AACA;AACA;AAED;;AACA,GAvBQ,EAuBP,CAACnC,QAAD,EAAWC,WAAX,EAAwBC,EAAxB,EAA4BH,KAA5B,EAAmCK,SAAnC,EAA6CK,aAA7C,CAvBO,CAAT;;AAyBA,QAAM2B,kBAAkB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAkB;AAE3C;AACA;AACA;AACA,UAAMC,IAAI,GAAG,QAAQ,GAAR,GAAc3B,mBAAmB,CAAC0B,QAAD,CAA9C;AACAjB,IAAAA,kBAAkB,CAACkB,IAAD,CAAlB;AACApB,IAAAA,WAAW,CAAC,KAAD,CAAX,CAP2C,CAQ3C;;AACAX,IAAAA,mCAAmC,CAACL,EAAD,EAAKD,WAAL,EAAkBD,QAAlB,EAA4BU,aAAa,CAAC2B,QAAD,CAAzC,CAAnC;AACH,GAVC;;AAYA,sBACE;AACE,IAAA,SAAS,EACPtC,KAAK,CAACwC,UAAN,GAAmB,6BAAnB,GAAmD,iBAFvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE,2BAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAE,MAAM;AACbxC,MAAAA,KAAK,CAACyC,2BAAN,CACE,CAACzC,KAAK,CAAC0C,wBADT;AAGApD,MAAAA,qBAAqB,CACnB,sBADmB,EAEnB,CAACU,KAAK,CAAC0C,wBAFY,CAArB;AAID,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWG1C,KAAK,CAAC0C,wBAAN,GAAiC,IAAjC,GAAwC,QAX3C,CADF,CAFF,CALF,eAwBE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE1C,KAAK,CAAC0C,wBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,2DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACE,IAAA,IAAI,EAAEnD,cAAc,CAACU,QAAD,CADtB;AAEE,IAAA,KAAK,EAAC,8BAFR,CAGE;AAHF;AAIE,IAAA,IAAI,EAAEmB,eAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,CARJ,eAYI;AAAK,IAAA,KAAK,EAAE;AACVuB,MAAAA,aAAa,EAAE,KADL;AAEVC,MAAAA,cAAc,EAAE,eAFN;AAGVC,MAAAA,OAAO,EAAC,MAHE;AAIVC,MAAAA,OAAO,EAAE,MAJC;AAKVC,MAAAA,QAAQ,EAAE,MALA;AAMVC,MAAAA,KAAK,EAAE;AANG,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASG5C,UAAU,CAAC6C,GAAX,CAAe,CAACC,IAAD,EAAOC,CAAP,KAAa;AAE3B,wBACE;AAAK,MAAA,KAAK,EAAE;AACVN,QAAAA,OAAO,EAAC,MADE;AAEVF,QAAAA,aAAa,EAAE;AAFL,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAK,MAAA,KAAK,EAAE;AAACE,QAAAA,OAAO,EAAC;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiC,GAAjC,OAAuCvB,eAAe,CAAC6B,CAAD,CAAtD,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQ,GAAR,OAAczB,kBAAkB,CAACyB,CAAD,CAAhC,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQ,GAAR,OAAc3B,cAAc,CAAC2B,CAAD,CAA5B,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAU,GAAV,OAAgBvB,eAAe,CAACuB,CAAD,CAA/B,CAPF,CADF;AAWD,GAbA,CATH,CAZJ,eAsCI;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAtCJ,eA0CI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAE9C,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1CJ,eAkDI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC,KAAD,EAAO,MAAP,EAAe,KAAf,EAAsB,OAAtB,EAA+B,KAA/B,EAAqC,KAArC,EAA4C,KAA5C,EAAmD4C,GAAnD,CAAuD,CAACG,IAAD,EAAOD,CAAP,kBACtD;AAAK,IAAA,SAAS,EAAE7C,KAAK,KAAK6C,CAAV,GAAc,gBAAd,GAAgC,EAAhD;AAAoD,IAAA,GAAG,EAAEA,CAAzD;AAA4D,IAAA,OAAO,EAAG,MAAM;AAAC5C,MAAAA,gBAAgB,CAAC4C,CAAD,CAAhB;AAAoB,KAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqGC,IAArG,CADD,CADH,CAlDJ,eAwDI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADJ,CAxDJ,eA8DI;AAAK,IAAA,KAAK,EAAE;AACVP,MAAAA,OAAO,EAAE,MADC;AAEVC,MAAAA,OAAO,EAAE,MAFC;AAGVC,MAAAA,QAAQ,EAAE;AAHA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAElC,eAAnB;AAAoC,IAAA,YAAY,EAAEwB,kBAAlD;AAAsE,IAAA,SAAS,EAAE3B,aAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CA9DJ,CADF,CAxBF,CADF;AAoGD","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { AccordionHeading, AccordionBody } from \"../accordion\";\nimport { setItemInLocalStorage, formatSiteName, roundedUpNumberAndTurnBackToNumber } from \"../../../../utilities.js\";\n\nimport Subheadings from \"../reuseable-components/labels/subheadings\"\nimport SlackChart from \"../reuseable-components/charts/slack-chart/slack-chart\"\n\nimport { DailySalesVsWasteContext } from \"../../../../contexts/daily-sales-vs-waste-context\";\nimport { EventProductionWasteContext } from \"../../../../contexts/event-production-waste-context\";\nimport { ProductionPreparationContext } from \"../../../../contexts/production-preparation-context\";\n\nimport Pagination from \"./../reuseable-components/pagination/pagination.js\"\n\nexport default function DailySalesVsWasteReport(props) {\n\n  const {\n    siteName,\n    companyName,\n    id,\n    dataFromDB,\n   } = useContext(DailySalesVsWasteContext);\n\n   const {\n    chartData,\n    index,\n    filterDataByDate,\n    callProductionPreparationInputsFunc,\n    prodPrepInputsData\n   } = useContext(EventProductionWasteContext);\n\n   const {\n    numberOfWeeks,\n    weeklyNumbers,\n    weeklyStartDateArry,\n    paginationIndex\n   } = useContext(ProductionPreparationContext);\n\n  const [dateLabels, setDateLabels] = useState([]);\n  const [formatedDate, setFormatedDate] = useState([]);\n  const [showDate, setShowDate] = useState(true);\n  const [weeksCommencing, setWeeksCommencing] = useState([]);\n\n  const [dailyCoverWaste, setDailyCoverWaste] = useState([0,0,0,0,0,0,0]);\n  const [dailyPrepWaste, setDailyPrepWaste] = useState([0,0,0,0,0,0,0]);\n  const [dailySpoilageWaste, setDailySpoilageWaste] = useState([0,0,0,0,0,0,0]);\n  const [dailyTotalWaste, setDailyTotalWaste] = useState([0,0,0,0,0,0,0]);\n\n\n  // const indexFromLocalStoraage = JSON.parse(localStorage.getItem('index')) || 0;\n  // const [pageIndex, setPageIndex] = useState(indexFromLocalStoraage);\n\n  useEffect(() => {\n    setDateLabels(props.weeklyDailyRange)\n\n    if (props.weeklyDailyLabels) {\n      setFormatedDate(props.weeklyDailyLabels)\n    }\n\n    // if (prodPrepInputsData.length !== 0) {\n    //   SetArrOfCSP(prodPrepInputsData)\n    // };\n    if (prodPrepInputsData.dailyCoverWasteArrayFormated !== undefined) {\n      setDailyCoverWaste(prodPrepInputsData.dailyCoverWasteArrayFormated)\n      setDailyPrepWaste(prodPrepInputsData.dailyPrepWasteArrayFormated)\n      setDailySpoilageWaste(prodPrepInputsData.dailySpoilageWasteArrayFormated)\n      setDailyTotalWaste(prodPrepInputsData.totalDailyWaste)\n    }\n    // console.log(\"pageIndex\",pageIndex);\n    // console.log(\"numberOfWeeks\",numberOfWeeks)\n    // if (numberOfWeeks) {\n    //   setPageIndex(numberOfWeeks);\n    // }\n\n   // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[siteName, companyName, id, props, chartData,numberOfWeeks])\n\n  const changePageForWeeks = ({ selected }) => {\n\n    //set the date for the graph label\n    // console.log(\"weeklyStartDateArry\", weeklyStartDateArry[selected])\n    // console.log(\"weeklyNumbers[selected]\", weeklyNumbers[selected])\n    const date = \"w/c\" + \" \" + weeklyStartDateArry[selected]\n    setWeeksCommencing(date)\n    setShowDate(false)\n    //get the data for the graph\n    callProductionPreparationInputsFunc(id ,companyName ,siteName, weeklyNumbers[selected]);\n};\n\n  return (\n    <div\n      className={\n        props.hideReport ? \"dailyWasteChart displayNone\" : \"dailyWasteChart\"\n      }\n    >\n      <AccordionHeading color={\"primPurpleBackgroundColor\"}>\n        <div className=\"section-title\">EVENT PRODUCTION WASTE</div>\n        <div className=\"container\">\n          <span\n            onClick={() => {\n              props.setShowEventProductionWaste(\n                !props.showEventProductionWaste\n              );\n              setItemInLocalStorage(\n                \"eventProductionWaste\",\n                !props.showEventProductionWaste\n              );\n            }}\n          >\n            {props.showEventProductionWaste ? \"X \" : \"| | | \"}\n          </span>\n        </div>\n      </AccordionHeading>\n\n      <AccordionBody open={props.showEventProductionWaste}>\n        <div className=\"originalTheme__reportBackgroundColor addPaddingOfHalveRem\">\n            <Subheadings\n              site={formatSiteName(siteName)}\n              title=\"Production Preparation Waste\"\n              // date={showDate ? dateLabels: weeksCommencing}\n              date={weeksCommencing}\n            />\n\n            <div className=\"applyBlueTuckGreen cooperHewittBold\">\n              <h4>Production Preparation Waste</h4>\n            </div>\n\n            <div style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              display:\"flex\",\n              padding: \"10px\",\n              fontSize: \"10px\",\n              color: \"rgb(140, 112, 140)\"\n            }}>\n\n              {dataFromDB.map((item, i) => {\n\n                return (\n                  <div style={{\n                    display:\"flex\",\n                    flexDirection: \"column\",\n                  }}>\n                    <div style={{display:\"flex\"}}>C {\" \"} {dailyCoverWaste[i]}</div>\n                    <div>S {\" \"} {dailySpoilageWaste[i]}</div>\n                    <div>P {\" \"} {dailyPrepWaste[i]}</div>\n                    <div>ALL {\" \"} {dailyTotalWaste[i]}</div>\n                  </div>\n                )\n              })}\n\n            </div>\n\n            <div className=\"applyBlueTuckGreen cooperHewittBold\">\n              <h4>Production Volume</h4>\n            </div>\n\n            <SlackChart chartData={chartData} />\n\n            {/* <div className=\"dailyWasteChart__dateLabel\">\n              {formatedDate.map((data, i) => (\n                <div className={index === i ? \"applyGoldColor\": \"\"} key={i} onClick={(() => {filterDataByDate(i)})}>{data}</div>\n              ))}\n            </div> */}\n\n            <div className=\"dailyWasteChart__dateLabel\">\n              {[\"MON\",\"TUES\", \"WED\", \"THURS\", \"FRI\",\"SAT\", \"SUN\"].map((data, i) => (\n                <div className={index === i ? \"applyGoldColor\": \"\"} key={i} onClick={(() => {filterDataByDate(i)})}>{data}</div>\n              ))}\n            </div>\n\n            <div className=\"graph__row\">\n                <div className=\"graph__message\">\n                  Click on the date to see data from that day\n                </div>\n            </div>\n\n            <div style={{\n              display: \"flex\",\n              padding: \"2rem\",\n              fontSize: \"10px\"\n            }}>\n              <Pagination index={paginationIndex} onPageChange={changePageForWeeks} pageCount={numberOfWeeks} />\n            </div>\n\n        </div>\n      </AccordionBody>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}