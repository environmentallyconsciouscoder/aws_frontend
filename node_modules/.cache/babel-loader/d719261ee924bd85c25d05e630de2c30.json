{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/reports/daily-sales-vs-waste-report.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { AccordionHeading, AccordionBody } from \"../accordion\";\nimport { setItemInLocalStorage, formatSiteName, roundedUpNumberAndTurnBackToNumber } from \"../../../../utilities.js\";\nimport Subheadings from \"./../reuseable-components/labels/subheadings\";\nimport SlackChart from \"./../reuseable-components/charts/slack-chart/slack-chart\";\nimport { DailySalesVsWasteContext } from \"../../../../contexts/daily-sales-vs-waste-context\";\nexport default function DailySalesVsWasteReport(props) {\n  const {\n    siteName,\n    companyName,\n    id,\n    chartData,\n    dataFromDB,\n    filterDataByDate,\n    index\n  } = useContext(DailySalesVsWasteContext);\n  const [dateLabels, setDateLabels] = useState([]);\n  const [formatedDate, setFormatedDate] = useState([]);\n  useEffect(() => {\n    setDateLabels(props.weeklyDailyRange);\n\n    if (props.weeklyDailyLabels) {\n      setFormatedDate(props.weeklyDailyLabels);\n    } // console.log(\"chartData\", chartData)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [siteName, companyName, id, props, chartData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.hideReport ? \"dailyWasteChart displayNone\" : \"dailyWasteChart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AccordionHeading, {\n    color: \"primPurpleBackgroundColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"DAILY SALES VS WASTE REPORT\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => {\n      props.setShowDailySalesVsWasteReport(!props.showDailySalesVsWasteReport);\n      setItemInLocalStorage(\"dailySalesVsWasteReport\", !props.showDailySalesVsWasteReport);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, props.showDailySalesVsWasteReport ? \"X \" : \"| | | \"))), /*#__PURE__*/React.createElement(AccordionBody, {\n    open: props.showDailySalesVsWasteReport,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"originalTheme__reportBackgroundColor addPaddingOfHalveRem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Subheadings, {\n    site: formatSiteName(siteName),\n    title: \"Daily Sales Vs Waste\",\n    date: dateLabels,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyBlueTuckGreen cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"Daily Waste\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      display: \"flex\",\n      padding: \"10px\",\n      fontSize: \"10px\",\n      color: \"rgb(140, 112, 140)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, dataFromDB.map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, \"C \", \" \", \" \", item.coverWasteMaxDailyValue), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \"S \", \" \", \" \", item.spoilageWasteMaxDailyValue), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, \"P \", \" \", \" \", item.preparationWasteMaxDailyValue), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"ALL \", \" \", \" \", roundedUpNumberAndTurnBackToNumber(item.coverWasteMaxDailyValue + item.spoilageWasteMaxDailyValue + item.preparationWasteMaxDailyValue)));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyBlueTuckGreen cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, \"Menu Sales\")), /*#__PURE__*/React.createElement(SlackChart, {\n    chartData: chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dailyWasteChart__dateLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, formatedDate.map((data, i) => /*#__PURE__*/React.createElement(\"div\", {\n    className: index === i ? \"applyGoldColor\" : \"\",\n    key: i,\n    onClick: () => {\n      filterDataByDate(i);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, data))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"graph__row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"graph__message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"Click on the date to see data from that day\")))));\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/reports/daily-sales-vs-waste-report.js"],"names":["React","useState","useContext","useEffect","AccordionHeading","AccordionBody","setItemInLocalStorage","formatSiteName","roundedUpNumberAndTurnBackToNumber","Subheadings","SlackChart","DailySalesVsWasteContext","DailySalesVsWasteReport","props","siteName","companyName","id","chartData","dataFromDB","filterDataByDate","index","dateLabels","setDateLabels","formatedDate","setFormatedDate","weeklyDailyRange","weeklyDailyLabels","hideReport","setShowDailySalesVsWasteReport","showDailySalesVsWasteReport","flexDirection","justifyContent","display","padding","fontSize","color","map","item","coverWasteMaxDailyValue","spoilageWasteMaxDailyValue","preparationWasteMaxDailyValue","data","i"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { AccordionHeading, AccordionBody } from \"../accordion\";\nimport { setItemInLocalStorage, formatSiteName, roundedUpNumberAndTurnBackToNumber } from \"../../../../utilities.js\";\n\nimport Subheadings from \"./../reuseable-components/labels/subheadings\"\nimport SlackChart from \"./../reuseable-components/charts/slack-chart/slack-chart\"\n\nimport { DailySalesVsWasteContext } from \"../../../../contexts/daily-sales-vs-waste-context\";\n\nexport default function DailySalesVsWasteReport(props) {\n\n  const {\n    siteName,\n    companyName,\n    id,\n    chartData,\n    dataFromDB,\n    filterDataByDate,\n    index\n   } = useContext(DailySalesVsWasteContext);\n\n  const [dateLabels, setDateLabels] = useState([]);\n  const [formatedDate, setFormatedDate] = useState([]);\n\n  useEffect(() => {\n\n    setDateLabels(props.weeklyDailyRange)\n\n    if (props.weeklyDailyLabels) {\n      setFormatedDate(props.weeklyDailyLabels)\n    }\n    // console.log(\"chartData\", chartData)\n\n   // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[siteName, companyName, id, props, chartData])\n\n  return (\n    <div\n      className={\n        props.hideReport ? \"dailyWasteChart displayNone\" : \"dailyWasteChart\"\n      }\n    >\n      <AccordionHeading color={\"primPurpleBackgroundColor\"}>\n        <div className=\"section-title\">DAILY SALES VS WASTE REPORT</div>\n        <div className=\"container\">\n          <span\n            onClick={() => {\n              props.setShowDailySalesVsWasteReport(\n                !props.showDailySalesVsWasteReport\n              );\n              setItemInLocalStorage(\n                \"dailySalesVsWasteReport\",\n                !props.showDailySalesVsWasteReport\n              );\n            }}\n          >\n            {props.showDailySalesVsWasteReport ? \"X \" : \"| | | \"}\n          </span>\n        </div>\n      </AccordionHeading>\n\n      <AccordionBody open={props.showDailySalesVsWasteReport}>\n        <div className=\"originalTheme__reportBackgroundColor addPaddingOfHalveRem\">\n            <Subheadings\n              site={formatSiteName(siteName)}\n              title=\"Daily Sales Vs Waste\"\n              date={dateLabels}\n            />\n\n            <div className=\"applyBlueTuckGreen cooperHewittBold\">\n              <h4>Daily Waste</h4>\n            </div>\n\n            <div style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              display:\"flex\",\n              padding: \"10px\",\n              fontSize: \"10px\",\n              color: \"rgb(140, 112, 140)\"\n            }}>\n\n              {dataFromDB.map((item) => {\n\n                return (\n                  <div style={{\n                    display:\"flex\",\n                    flexDirection: \"column\",\n                  }}>\n                    <div style={{display:\"flex\"}}>C {\" \"} {item.coverWasteMaxDailyValue}</div>\n                    <div>S {\" \"} {item.spoilageWasteMaxDailyValue}</div>\n                    <div>P {\" \"} {item.preparationWasteMaxDailyValue}</div>\n                    <div>ALL {\" \"} {roundedUpNumberAndTurnBackToNumber(item.coverWasteMaxDailyValue + item.spoilageWasteMaxDailyValue + item.preparationWasteMaxDailyValue)}</div>\n                  </div>\n                )\n              })}\n\n            </div>\n\n            <div className=\"applyBlueTuckGreen cooperHewittBold\">\n              <h4>Menu Sales</h4>\n            </div>\n\n            <SlackChart chartData={chartData} />\n\n            <div className=\"dailyWasteChart__dateLabel\">\n              {formatedDate.map((data, i) => (\n                <div className={index === i ? \"applyGoldColor\": \"\"} key={i} onClick={(() => {filterDataByDate(i)})}>{data}</div>\n              ))}\n            </div>\n\n            <div className=\"graph__row\">\n                <div className=\"graph__message\">\n                  Click on the date to see data from that day\n                </div>\n            </div>\n\n        </div>\n      </AccordionBody>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}