{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/reports/total-waste-report.js\";\nimport React, { useContext } from \"react\";\nimport { OverviewWasteContext } from \"../../../../contexts/total-waste-context\";\nimport { WasteCapContext } from \"../../../../contexts/waste-cap-context\";\nimport { formatStartDate, roundedUpNumberAndTurnBackToNumber, setItemInLocalStorage } from \"../../../../utilities\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport { AccordionHeading, AccordionBody } from \"../accordion\";\nexport default function TotalWaste(props) {\n  const {\n    selectedSiteCoverWastes,\n    selectedSiteSpoliageWastes,\n    selectedSitePeparationWastes,\n    showPounds\n  } = useContext(WasteCapContext);\n  const {\n    coverWaste,\n    prepWaste,\n    spoilageWaste,\n    siteName\n  } = useContext(OverviewWasteContext);\n  let totalCoverCap = 0;\n  let totalSpoliageCap = 0;\n  let totalPreparationCap = 0;\n\n  if (showPounds) {\n    totalCoverCap = roundedUpNumberAndTurnBackToNumber(selectedSiteCoverWastes * 2.775);\n    totalSpoliageCap = roundedUpNumberAndTurnBackToNumber(selectedSiteSpoliageWastes * 2.775);\n    totalPreparationCap = roundedUpNumberAndTurnBackToNumber(selectedSitePeparationWastes * 2.775);\n  } else {\n    totalCoverCap = selectedSiteCoverWastes > 0 ? selectedSiteCoverWastes : 0;\n    totalSpoliageCap = selectedSiteSpoliageWastes > 0 ? selectedSiteSpoliageWastes : 0;\n    totalPreparationCap = selectedSitePeparationWastes > 0 ? selectedSitePeparationWastes : 0;\n  }\n\n  let totalCapValue = totalCoverCap + totalSpoliageCap + totalPreparationCap;\n  let cover = 0;\n  let spoliage = 0;\n  let production = 0; // console.log(\"coverWaste\",coverWaste)\n  // console.log(\"spoilageWaste\",spoilageWaste)\n  // console.log(\"prepWaste\",prepWaste)\n\n  if (showPounds) {\n    cover = roundedUpNumberAndTurnBackToNumber(coverWaste * 2.775);\n    spoliage = roundedUpNumberAndTurnBackToNumber(spoilageWaste * 2.775);\n    production = roundedUpNumberAndTurnBackToNumber(prepWaste * 2.775);\n  } else {\n    cover = coverWaste > 0 ? coverWaste : 0;\n    spoliage = spoilageWaste > 0 ? spoilageWaste : 0;\n    production = prepWaste > 0 ? prepWaste : 0;\n  }\n\n  let totalWaste = !isNaN(cover + spoliage + production) ? cover + spoliage + production : 0; // const totalWasteInPounds = roundedUpNumberAndTurnBackToNumber(totalWaste * 2.775)\n  // console.log(\"totalWasteInPounds\",totalWasteInPounds)\n  // console.log(\"totalWaste\",totalWaste)\n  // const totalWasteInPoundsFormated = totalWasteInPounds\n\n  let coverWastepercentage = 0;\n  let spoliageWastepercentage = 0;\n  let productionWastepercentage = 0;\n\n  if (isNaN(cover / totalCoverCap * 100)) {\n    coverWastepercentage = 100;\n  } else {\n    coverWastepercentage = cover / totalCoverCap * 100;\n  }\n\n  if (isNaN(spoliage / totalSpoliageCap * 100)) {\n    spoliageWastepercentage = 100;\n  } else {\n    spoliageWastepercentage = spoliage / totalSpoliageCap * 100;\n  }\n\n  if (isNaN(production / totalPreparationCap * 100)) {\n    productionWastepercentage = 100;\n  } else {\n    productionWastepercentage = production / totalPreparationCap * 100;\n  }\n\n  let coverWasteColor;\n\n  if (cover >= totalCoverCap) {\n    coverWasteColor = \"rgba(255, 0, 0, 0.9)\";\n  } else if (cover === 0) {\n    coverWasteColor = \"rgb(163, 181, 44)\";\n  } else {\n    coverWasteColor = \"rgb(47, 67, 30)\";\n  }\n\n  let spoliageWasteColor;\n\n  if (spoliage >= totalSpoliageCap) {\n    spoliageWasteColor = \"rgba(255, 0, 0, 0.9)\";\n  } else if (spoliage === 0) {\n    spoliageWasteColor = \"rgb(163, 181, 44)\";\n  } else {\n    spoliageWasteColor = \"rgb(47, 67, 30)\";\n  }\n\n  let preparationWasteColor;\n\n  if (production >= totalPreparationCap) {\n    preparationWasteColor = \"rgba(255, 0, 0, 0.9)\";\n  } else if (production === 0) {\n    preparationWasteColor = \"rgb(163, 181, 44)\";\n  } else {\n    preparationWasteColor = \"rgb(47, 67, 30)\";\n  }\n\n  let textColor;\n\n  if (props.showDarkTheme) {\n    textColor = \"rgb(255, 231, 227)\";\n  } else {\n    textColor = \"rgb(140, 112, 140)\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"total__wasteReport\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, !props.hideReport && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AccordionHeading, {\n    color: \"primPurpleBackgroundColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, \"TOTAL WASTE FROM \", siteName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, props.showTotalWasteChart ? /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => {\n      setItemInLocalStorage(\"showTotalWasteChart\", !props.showTotalWasteChart);\n      props.setShowTotalWasteChart(!props.showTotalWasteChart);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }, \"X\") : /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => {\n      props.setShowTotalWasteChart(!props.showTotalWasteChart);\n      setItemInLocalStorage(\"showTotalWasteChart\", !props.showTotalWasteChart);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, \" | | | \"))), /*#__PURE__*/React.createElement(AccordionBody, {\n    open: props.showTotalWasteChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem\" : \"originalTheme__reportBackgroundColor addPaddingOfHalveRem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"report-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, \"Overview\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"total__wasteReport__reportHeading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"start-date cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 19\n    }\n  }, \"START DATE: \", formatStartDate(props.startDate))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"total__wasteReport__capping\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"capping--displayFlex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyMarginRightAndLeft applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 23\n    }\n  }, \"Total Cap\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"darkTheme__numberColor\" : \"applyBlueTuckGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 23\n    }\n  }, roundedUpNumberAndTurnBackToNumber(totalCapValue))), /*#__PURE__*/React.createElement(\"b\", {\n    className: \"capping\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 27\n    }\n  }, \"Cap\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 27\n    }\n  }, \"C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"darkTheme__numberColor\" : \"applyBlueTuckGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 27\n    }\n  }, roundedUpNumberAndTurnBackToNumber(totalCoverCap)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 27\n    }\n  }, \"S\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"darkTheme__numberColor\" : \"applyBlueTuckGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 27\n    }\n  }, roundedUpNumberAndTurnBackToNumber(totalSpoliageCap)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 27\n    }\n  }, \"P\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"darkTheme__numberColor\" : \"applyBlueTuckGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 27\n    }\n  }, roundedUpNumberAndTurnBackToNumber(totalPreparationCap)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"total__wasteReport__progressBarWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__one\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__totalWasteValue__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__totalWasteValue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 31\n    }\n  }, props.showPounds ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor cooperHewittBold\" : \"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 37\n    }\n  }, \"\\xA3\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor\" : \"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 37\n    }\n  }, totalWaste)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor\" : \"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 37\n    }\n  }, totalWaste), /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor cooperHewittBold\" : \"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 37\n    }\n  }, \"Kg\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__two\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__totalWasteValue--icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 27\n    }\n  }, \"=\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 27\n    }\n  }, cover >= totalCoverCap ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__warningText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 31\n    }\n  }, \"WARNING!\") : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgressbar, {\n    value: coverWastepercentage,\n    text: cover,\n    styles: buildStyles({\n      textColor: textColor,\n      pathColor: coverWasteColor,\n      trailColor: \"rgb(163, 181, 44)\",\n      textSize: \"20px\",\n      strokeLinecap: \"butt\"\n    }),\n    strokeWidth: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__textSize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 35\n    }\n  }, \"C\"), \"OVER WASTE\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__totalWasteValue--icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 27\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 27\n    }\n  }, spoliage >= totalSpoliageCap ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__warningText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 31\n    }\n  }, \"WARNING!\") : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgressbar, {\n    value: spoliageWastepercentage,\n    text: spoliage,\n    styles: buildStyles({\n      textColor: textColor,\n      pathColor: spoliageWasteColor,\n      trailColor: \"rgb(163, 181, 44)\",\n      textSize: \"20px\",\n      strokeLinecap: \"butt\"\n    }),\n    strokeWidth: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__textSize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 35\n    }\n  }, \"S\"), \"POILAGE\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__totalWasteValue--icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 27\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 27\n    }\n  }, production >= totalPreparationCap ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__warningText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 29\n    }\n  }, \"WARNING!\") : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgressbar, {\n    value: productionWastepercentage,\n    text: production,\n    styles: buildStyles({\n      textColor: textColor,\n      pathColor: preparationWasteColor,\n      trailColor: \"rgb(163, 181, 44)\",\n      textSize: \"20px\",\n      strokeLinecap: \"butt\"\n    }),\n    strokeWidth: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__progressBar__textSize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 33\n    }\n  }, \"P\"), \"REPARATION\")))))))))));\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/reports/total-waste-report.js"],"names":["React","useContext","OverviewWasteContext","WasteCapContext","formatStartDate","roundedUpNumberAndTurnBackToNumber","setItemInLocalStorage","CircularProgressbar","buildStyles","AccordionHeading","AccordionBody","TotalWaste","props","selectedSiteCoverWastes","selectedSiteSpoliageWastes","selectedSitePeparationWastes","showPounds","coverWaste","prepWaste","spoilageWaste","siteName","totalCoverCap","totalSpoliageCap","totalPreparationCap","totalCapValue","cover","spoliage","production","totalWaste","isNaN","coverWastepercentage","spoliageWastepercentage","productionWastepercentage","coverWasteColor","spoliageWasteColor","preparationWasteColor","textColor","showDarkTheme","hideReport","showTotalWasteChart","setShowTotalWasteChart","startDate","marginTop","pathColor","trailColor","textSize","strokeLinecap"],"mappings":"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","sourcesContent":["import React, {  useContext } from \"react\";\n\nimport { OverviewWasteContext } from \"../../../../contexts/total-waste-context\";\n\nimport { WasteCapContext } from \"../../../../contexts/waste-cap-context\";\n\nimport { formatStartDate, roundedUpNumberAndTurnBackToNumber, setItemInLocalStorage } from \"../../../../utilities\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\n\nimport { AccordionHeading, AccordionBody } from \"../accordion\"\n\nexport default function TotalWaste(props) {\n\n    const {\n      selectedSiteCoverWastes,\n      selectedSiteSpoliageWastes,\n      selectedSitePeparationWastes,\n      showPounds\n     } = useContext(WasteCapContext);\n\n    const {\n      coverWaste,\n      prepWaste,\n      spoilageWaste,\n      siteName\n    } = useContext(OverviewWasteContext);\n\n    let totalCoverCap = 0\n    let totalSpoliageCap = 0\n    let totalPreparationCap = 0\n\n    if (showPounds) {\n      totalCoverCap = roundedUpNumberAndTurnBackToNumber(selectedSiteCoverWastes * 2.775)\n      totalSpoliageCap = roundedUpNumberAndTurnBackToNumber(selectedSiteSpoliageWastes * 2.775)\n      totalPreparationCap = roundedUpNumberAndTurnBackToNumber(selectedSitePeparationWastes * 2.775)\n    } else {\n      totalCoverCap = selectedSiteCoverWastes > 0 ? selectedSiteCoverWastes : 0\n      totalSpoliageCap = selectedSiteSpoliageWastes > 0 ? selectedSiteSpoliageWastes : 0\n      totalPreparationCap = selectedSitePeparationWastes > 0 ? selectedSitePeparationWastes : 0\n    }\n\n    let totalCapValue = totalCoverCap + totalSpoliageCap + totalPreparationCap;\n\n    let cover = 0;\n    let spoliage = 0;\n    let production = 0;\n\n    // console.log(\"coverWaste\",coverWaste)\n    // console.log(\"spoilageWaste\",spoilageWaste)\n    // console.log(\"prepWaste\",prepWaste)\n\n    if (showPounds) {\n      cover = roundedUpNumberAndTurnBackToNumber(coverWaste * 2.775)\n      spoliage = roundedUpNumberAndTurnBackToNumber(spoilageWaste * 2.775)\n      production = roundedUpNumberAndTurnBackToNumber(prepWaste * 2.775)\n    } else {\n      cover = coverWaste > 0 ? coverWaste: 0;\n      spoliage = spoilageWaste > 0? spoilageWaste: 0;\n      production = prepWaste > 0 ? prepWaste : 0;\n    }\n\n    let totalWaste = !isNaN(cover + spoliage + production) ? cover + spoliage + production : 0;\n\n    // const totalWasteInPounds = roundedUpNumberAndTurnBackToNumber(totalWaste * 2.775)\n    // console.log(\"totalWasteInPounds\",totalWasteInPounds)\n    // console.log(\"totalWaste\",totalWaste)\n\n    // const totalWasteInPoundsFormated = totalWasteInPounds\n\n    let coverWastepercentage = 0\n    let spoliageWastepercentage = 0\n    let productionWastepercentage = 0\n\n    if (isNaN((cover / totalCoverCap) * 100)) {\n      coverWastepercentage = 100\n    } else {\n      coverWastepercentage = (cover / totalCoverCap) * 100\n    }\n\n    if (isNaN((spoliage / totalSpoliageCap) * 100)) {\n      spoliageWastepercentage = 100\n    } else {\n      spoliageWastepercentage = (spoliage / totalSpoliageCap) * 100\n    }\n\n    if (isNaN((production / totalPreparationCap) * 100)) {\n      productionWastepercentage = 100\n    } else {\n      productionWastepercentage = (production / totalPreparationCap) * 100\n    }\n\n\n    let coverWasteColor;\n    if (cover >= totalCoverCap) {\n      coverWasteColor = \"rgba(255, 0, 0, 0.9)\";\n    } else if (cover === 0) {\n      coverWasteColor = \"rgb(163, 181, 44)\"\n    } else {\n      coverWasteColor = \"rgb(47, 67, 30)\";\n    }\n\n    let spoliageWasteColor;\n    if (spoliage >= totalSpoliageCap) {\n      spoliageWasteColor = \"rgba(255, 0, 0, 0.9)\";\n    } else if (spoliage === 0) {\n      spoliageWasteColor = \"rgb(163, 181, 44)\"\n    } else {\n      spoliageWasteColor = \"rgb(47, 67, 30)\";\n    }\n\n    let preparationWasteColor;\n    if (production >= totalPreparationCap) {\n      preparationWasteColor = \"rgba(255, 0, 0, 0.9)\";\n    } else if (production === 0) {\n      preparationWasteColor = \"rgb(163, 181, 44)\"\n    } else {\n      preparationWasteColor = \"rgb(47, 67, 30)\";\n    }\n\n    let textColor;\n\n    if (props.showDarkTheme) {\n      textColor = \"rgb(255, 231, 227)\";\n      } else {\n      textColor = \"rgb(140, 112, 140)\";\n    }\n\n    return (\n\n      <div className=\"total__wasteReport\">\n        {!props.hideReport &&\n          <>\n            <AccordionHeading color={\"primPurpleBackgroundColor\"}>\n              <div className=\"section-title\">TOTAL WASTE FROM {siteName}</div>\n              <div className=\"container\">\n                {props.showTotalWasteChart ? (\n                  <span onClick={() =>\n                  {\n                    setItemInLocalStorage(\"showTotalWasteChart\", !props.showTotalWasteChart)\n                    props.setShowTotalWasteChart(!props.showTotalWasteChart)\n                  }\n                  }>X</span>\n                ) : (\n                  <span onClick={() =>\n                  {\n                    props.setShowTotalWasteChart(!props.showTotalWasteChart)\n                    setItemInLocalStorage(\"showTotalWasteChart\", !props.showTotalWasteChart)\n                  }\n                  }> | | | </span>\n                )}\n              </div>\n            </AccordionHeading>\n\n            <AccordionBody open={props.showTotalWasteChart}>\n              <div className= { props.showDarkTheme ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem\": \"originalTheme__reportBackgroundColor addPaddingOfHalveRem\"}>\n\n                <div className=\"report-subtitle\">Overview</div>\n\n                  <div className=\"total__wasteReport__reportHeading\">\n                  <div className=\"start-date cooperHewittBold\">START DATE: {formatStartDate(props.startDate)}</div>\n                  </div>\n\n                  <div className=\"total__wasteReport__capping\">\n                  <div className=\"capping--displayFlex\">\n                      <div className=\"applyMarginRightAndLeft applyPurpleColor cooperHewittBold\">Total Cap</div>\n\n                      <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                        {roundedUpNumberAndTurnBackToNumber(totalCapValue)}\n                      </div>\n\n                  </div>\n                  <b className=\"capping\">\n                          <div className=\"applyPurpleColor cooperHewittBold\">Cap</div>\n                          <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\">\n                          C\n                          </div>\n\n                          <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                            {roundedUpNumberAndTurnBackToNumber(totalCoverCap)}\n                          </div>\n\n                          <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\">\n                          S\n                          </div>\n\n                          <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                            {roundedUpNumberAndTurnBackToNumber(totalSpoliageCap)}\n                          </div>\n\n                          <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\">\n                          P\n                          </div>\n\n                          <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                            {roundedUpNumberAndTurnBackToNumber(totalPreparationCap)}\n                          </div>\n                  </b>\n                  </div>\n\n                  <div className=\"total__wasteReport__progressBarWrapper\">\n\n                      <>\n\n                      <div className=\"dashboard__progressBar\">\n\n                        <div className=\"dashboard__progressBar__one\">\n\n                          <div className=\"dashboard__progressBar__totalWasteValue__wrapper\">\n                              <div className=\"dashboard__progressBar__totalWasteValue\">\n                                {props.showPounds ? (\n                                  <>\n\n\n                                    <div className={props.showDarkTheme? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor cooperHewittBold\" :\"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor cooperHewittBold\"}>\n                                      £\n                                    </div>\n\n                                    <div className={props.showDarkTheme? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor\" :\"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor\"}>\n                                      {/* {totalWasteInPoundsFormated} */}\n                                      {totalWaste}\n                                    </div>\n                                  </>\n                                ) : (\n                                  <>\n\n                                    <div className={props.showDarkTheme? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor\" :\"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor\"}>\n                                      {totalWaste}\n                                    </div>\n\n                                    <div className={props.showDarkTheme? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor cooperHewittBold\" :\"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor cooperHewittBold\"}>\n                                      Kg\n                                    </div>\n                                  </>\n                                )}\n                              </div>\n                          </div>\n\n\n                        </div>\n\n                        <div className=\"dashboard__progressBar__two\">\n\n                          <div className=\"dashboard__progressBar__totalWasteValue--icon\">=</div>\n\n                          <div className=\"dashboard__progressBar__size\">\n                            {cover >= totalCoverCap ? (\n                              <div className=\"dashboard__progressBar__warningText\">WARNING!</div>\n                            ) : (\n                              <div\n                                style={{\n                                  marginTop: \"1rem\",\n                                }}\n                              ></div>\n                            )}\n\n                            <div className=\"dashboard__progressBar__wrapper\">\n                              <CircularProgressbar\n                                value={coverWastepercentage}\n                                text={\n                                  cover\n                                }\n                                styles={buildStyles({\n                                  textColor: textColor,\n                                  pathColor: coverWasteColor,\n                                  trailColor: \"rgb(163, 181, 44)\",\n                                  textSize: \"20px\",\n                                  strokeLinecap: \"butt\",\n                                })}\n                                strokeWidth={10}\n                              />\n                              <div className=\"dashboard__progressBar__text\">\n                                <div className=\"dashboard__progressBar__textSize\">\n                                  <b>C</b>OVER WASTE\n                                </div>\n                              </div>\n                            </div>\n\n                          </div>\n\n                          <div className=\"dashboard__progressBar__totalWasteValue--icon\">+</div>\n\n                          <div className=\"dashboard__progressBar__size\">\n                            {spoliage >= totalSpoliageCap ? (\n                              <div className=\"dashboard__progressBar__warningText\">WARNING!</div>\n                            ) : (\n                              <div\n                                style={{\n                                  marginTop: \"1rem\",\n                                }}\n                              ></div>\n                            )}\n                            <div className=\"dashboard__progressBar__wrapper\">\n                              <CircularProgressbar\n                                value={spoliageWastepercentage}\n                                text={\n                                  spoliage\n                                }\n                                styles={buildStyles({\n                                  textColor: textColor,\n                                  pathColor: spoliageWasteColor,\n                                  trailColor: \"rgb(163, 181, 44)\",\n                                  textSize: \"20px\",\n                                  strokeLinecap: \"butt\",\n                                })}\n                                strokeWidth={10}\n                              />\n                            </div>\n                              <div className=\"dashboard__progressBar__text\">\n                                <div className=\"dashboard__progressBar__textSize\">\n                                  <b>S</b>POILAGE\n                                </div>\n                              </div>\n                          </div>\n\n\n                          <div className=\"dashboard__progressBar__totalWasteValue--icon\">+</div>\n\n                          <div className=\"dashboard__progressBar__size\">\n                          {production >= totalPreparationCap ? (\n                            <div className=\"dashboard__progressBar__warningText\">WARNING!</div>\n                          ) : (\n                            <div\n                              style={{\n                                marginTop: \"1rem\",\n                              }}\n                            ></div>\n                          )}\n                          <div className=\"dashboard__progressBar__wrapper\">\n                            <CircularProgressbar\n                              value={productionWastepercentage}\n                              text={\n                                production\n                              }\n                              styles={buildStyles({\n                                textColor: textColor,\n                                pathColor: preparationWasteColor,\n                                trailColor: \"rgb(163, 181, 44)\",\n                                textSize: \"20px\",\n                                strokeLinecap: \"butt\",\n                              })}\n                              strokeWidth={10}\n                            />\n                          </div>\n\n                            <div className=\"dashboard__progressBar__text\">\n                              <div className=\"dashboard__progressBar__textSize\">\n                                <b>P</b>REPARATION\n                              </div>\n                            </div>\n                          </div>\n\n                        </div>\n\n\n                      </div>\n\n                      </>\n\n                  </div>\n\n                </div>\n            </AccordionBody>\n          </>\n        }\n      </div>\n\n    );\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}