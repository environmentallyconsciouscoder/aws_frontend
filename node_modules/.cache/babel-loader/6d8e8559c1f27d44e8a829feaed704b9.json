{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/reuseable-components/charts/bar-chart/bar-chart.js\";\nimport React from \"react\";\nimport { MainContainer, Container, BarChartContainer, Number, BlackLine, MakeBar } from \"./style\";\nexport default function BarChart(props) {\n  // console.log(\"props\",props)\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MainContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, props.data.map(({\n    value,\n    colors\n  }, i) => {\n    const formatNum = value / 1000 * 100;\n    {\n      /* console.log(\"formatNum\",formatNum) */\n    }\n    return /*#__PURE__*/React.createElement(BarChartContainer, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Number, {\n      color: colors[1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, props.showPounds ? \"£\" + (value * 2.5).toFixed(0) : value.toFixed(2) + \"kg\"), /*#__PURE__*/React.createElement(MakeBar, {\n      height: formatNum,\n      colors: colors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(BlackLine, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/reuseable-components/charts/bar-chart/bar-chart.js"],"names":["React","MainContainer","Container","BarChartContainer","Number","BlackLine","MakeBar","BarChart","props","data","map","value","colors","i","formatNum","showPounds","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,SAFF,EAGEC,iBAHF,EAIEC,MAJF,EAKEC,SALF,EAMEC,OANF,QAOO,SAPP;AASA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAGpC;AAEF,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAoBC,CAApB,KAA0B;AAExC,UAAMC,SAAS,GAAKH,KAAK,GAAG,IAAV,GAAmB,GAArC;AACA;AAAC;AAAyC;AAE1C,wBACE,oBAAC,iBAAD;AAAmB,MAAA,GAAG,EAAEE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAED,MAAM,CAAC,CAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BJ,KAAK,CAACO,UAAN,GAAmB,MAAM,CAACJ,KAAK,GAAG,GAAT,EAAcK,OAAd,CAAsB,CAAtB,CAAzB,GAAoDL,KAAK,CAACK,OAAN,CAAc,CAAd,IAAmB,IAAlG,CADF,eAEE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAEF,SAAjB;AAA4B,MAAA,MAAM,EAAEF,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD,GAXA,CADH,CADF,eAeE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAmBD","sourcesContent":["import React from \"react\";\nimport {\n  MainContainer,\n  Container,\n  BarChartContainer,\n  Number,\n  BlackLine,\n  MakeBar\n} from \"./style\";\n\nexport default function BarChart(props) {\n\n\n    // console.log(\"props\",props)\n\n  return (\n    <Container>\n      <MainContainer>\n        {props.data.map(({ value, colors }, i) => {\n\n          const formatNum = ( value / 1000 ) * 100;\n          {/* console.log(\"formatNum\",formatNum) */}\n\n          return (\n            <BarChartContainer key={i}>\n              <Number color={colors[1]}>{props.showPounds ? \"£\" + (value * 2.5).toFixed(0) : value.toFixed(2) + \"kg\"}</Number>\n              <MakeBar height={formatNum} colors={colors} />\n            </BarChartContainer>\n          );\n        })}\n      </MainContainer>\n      <BlackLine />\n    </Container>\n  );\n}"]},"metadata":{},"sourceType":"module"}