{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/user-inputs/inputs.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { addCoverInput, addSalesInput } from \"../../../../api\";\nimport CoverInputs from \"./cover-inputs\";\nimport SalesInputs from \"./sales-inputs\"; // import InputList from \"./inputs-list\";\n\nexport default function Input(props) {\n  const [thisWeekCoverInputs, setThisWeekCoverInputs] = useState({\n    coversInput: [0, 0, 0, 0, 0, 0, 0],\n    Date: \"\",\n    weekOfYear: \"\"\n  });\n  const [selectedSiteValueID, setSelectedSiteValueID] = useState(\"\");\n  const [thisWeekSalesInputs, setThisWeekSalesInputs] = useState({\n    salesInput: [0, 0, 0, 0, 0, 0, 0],\n    Date: \"\",\n    weekOfYear: \"\"\n  });\n  useEffect(() => {\n    setThisWeekCoverInputs(props.thisWeekCoverInputs[0]);\n    setThisWeekSalesInputs(props.thisWeekSalesInput[0]);\n    setSelectedSiteValueID(props.selectedSiteValueID); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const sendDataToDatabase = (type, data) => {\n    // console.log(\"sendDataToDatabase\",data)\n    switch (type) {\n      case \"COVER INPUTS\":\n        addCoverInput(data).then(() => {\n          props.updateValues(\"COVER INPUTS\");\n        });\n        break;\n\n      case \"SALES INPUTS\":\n        addSalesInput(data).then(() => {\n          props.updateValues(\"SALES INPUTS\");\n        });\n        break;\n\n      default:\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputs__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputs__row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputs__column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CoverInputs, {\n    thisWeekCoverInputs: thisWeekCoverInputs,\n    selectedSiteValueID: selectedSiteValueID,\n    sendDataToDatabase: sendDataToDatabase,\n    companyID: props.companyID,\n    companyName: props.companyName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputs__column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SalesInputs, {\n    thisWeekSalesInputs: thisWeekSalesInputs,\n    selectedSiteValueID: selectedSiteValueID,\n    sendDataToDatabase: sendDataToDatabase,\n    companyID: props.companyID,\n    companyName: props.companyName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/user-inputs/inputs.js"],"names":["React","useState","useEffect","addCoverInput","addSalesInput","CoverInputs","SalesInputs","Input","props","thisWeekCoverInputs","setThisWeekCoverInputs","coversInput","Date","weekOfYear","selectedSiteValueID","setSelectedSiteValueID","thisWeekSalesInputs","setThisWeekSalesInputs","salesInput","thisWeekSalesInput","sendDataToDatabase","type","data","then","updateValues","companyID","companyName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,iBAA7C;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;;AAGA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAEjC,QAAM,CAAEC,mBAAF,EAAuBC,sBAAvB,IAAkDT,QAAQ,CAAC;AAC7DU,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CADgD;AAE7DC,IAAAA,IAAI,EAAE,EAFuD;AAG7DC,IAAAA,UAAU,EAAE;AAHiD,GAAD,CAAhE;AAMA,QAAM,CAAEC,mBAAF,EAAuBC,sBAAvB,IAAiDd,QAAQ,CAAC,EAAD,CAA/D;AAEA,QAAM,CAAEe,mBAAF,EAAuBC,sBAAvB,IAAkDhB,QAAQ,CAAC;AAC7DiB,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CADiD;AAE7DN,IAAAA,IAAI,EAAE,EAFuD;AAG7DC,IAAAA,UAAU,EAAE;AAHiD,GAAD,CAAhE;AAMAX,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,sBAAsB,CAACF,KAAK,CAACC,mBAAN,CAA0B,CAA1B,CAAD,CAAtB;AACAQ,IAAAA,sBAAsB,CAACT,KAAK,CAACW,kBAAN,CAAyB,CAAzB,CAAD,CAAtB;AACAJ,IAAAA,sBAAsB,CAACP,KAAK,CAACM,mBAAP,CAAtB,CAHY,CAIJ;AACT,GALM,EAKJ,EALI,CAAT;;AAOA,QAAMM,kBAAkB,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAEvC;AAEA,YAAOD,IAAP;AACI,WAAK,cAAL;AACElB,QAAAA,aAAa,CAACmB,IAAD,CAAb,CAAoBC,IAApB,CAAyB,MAAM;AAC7Bf,UAAAA,KAAK,CAACgB,YAAN,CAAmB,cAAnB;AACD,SAFD;AAGA;;AACF,WAAK,cAAL;AACEpB,QAAAA,aAAa,CAACkB,IAAD,CAAb,CAAoBC,IAApB,CAAyB,MAAM;AAC7Bf,UAAAA,KAAK,CAACgB,YAAN,CAAmB,cAAnB;AACD,SAFD;AAGA;;AACF;AAXJ;AAaH,GAjBD;;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACI,IAAA,mBAAmB,EAAEf,mBADzB;AAEI,IAAA,mBAAmB,EAAEK,mBAFzB;AAGI,IAAA,kBAAkB,EAAEM,kBAHxB;AAII,IAAA,SAAS,EAAEZ,KAAK,CAACiB,SAJrB;AAKI,IAAA,WAAW,EAAEjB,KAAK,CAACkB,WALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAUI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACI,IAAA,mBAAmB,EAAEV,mBADzB;AAEI,IAAA,mBAAmB,EAAEF,mBAFzB;AAGI,IAAA,kBAAkB,EAAEM,kBAHxB;AAII,IAAA,SAAS,EAAEZ,KAAK,CAACiB,SAJrB;AAKI,IAAA,WAAW,EAAEjB,KAAK,CAACkB,WALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVJ,CADJ,CADJ;AAwBH","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { addCoverInput, addSalesInput } from \"../../../../api\";\n\nimport CoverInputs from \"./cover-inputs\";\nimport SalesInputs from \"./sales-inputs\";\n\n// import InputList from \"./inputs-list\";\n\n\nexport default function Input(props) {\n\n    const [ thisWeekCoverInputs, setThisWeekCoverInputs ] = useState({\n        coversInput: [0, 0, 0, 0, 0, 0, 0],\n        Date: \"\",\n        weekOfYear: \"\"\n    });\n\n    const [ selectedSiteValueID, setSelectedSiteValueID] = useState(\"\")\n\n    const [ thisWeekSalesInputs, setThisWeekSalesInputs ] = useState({\n        salesInput: [0, 0, 0, 0, 0, 0, 0],\n        Date: \"\",\n        weekOfYear: \"\"\n    });\n\n    useEffect(() => {\n        setThisWeekCoverInputs(props.thisWeekCoverInputs[0])\n        setThisWeekSalesInputs(props.thisWeekSalesInput[0])\n        setSelectedSiteValueID(props.selectedSiteValueID)\n                // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, []);\n\n    const sendDataToDatabase = (type, data) => {\n\n        // console.log(\"sendDataToDatabase\",data)\n\n        switch(type) {\n            case \"COVER INPUTS\":\n              addCoverInput(data).then(() => {\n                props.updateValues(\"COVER INPUTS\")\n              })\n              break;\n            case \"SALES INPUTS\":\n              addSalesInput(data).then(() => {\n                props.updateValues(\"SALES INPUTS\")\n              })\n              break;\n            default:\n        }\n    }\n\n    return (\n        <div className=\"inputs__container\">\n            <div className=\"inputs__row\">\n                <div className=\"inputs__column\">\n                    <CoverInputs\n                        thisWeekCoverInputs={thisWeekCoverInputs}\n                        selectedSiteValueID={selectedSiteValueID}\n                        sendDataToDatabase={sendDataToDatabase}\n                        companyID={props.companyID}\n                        companyName={props.companyName}\n                    />\n                </div>\n                <div className=\"inputs__column\">\n                    <SalesInputs\n                        thisWeekSalesInputs={thisWeekSalesInputs}\n                        selectedSiteValueID={selectedSiteValueID}\n                        sendDataToDatabase={sendDataToDatabase}\n                        companyID={props.companyID}\n                        companyName={props.companyName}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}