{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/contexts/weekly-trends-context.js\";\nimport React, { createContext, useEffect, useState } from 'react';\nexport const WeeklyWasteTrendContext = createContext();\n\nconst WeeklyWasteTrendProvider = props => {\n  // const [selectedSiteWeeklyValues, setSelectedSiteWeeklyValues] = useState([])\n  // const [previousSelectedSiteWeeklyValues, setPreviousSelectedSiteWeeklyValues] = useState([])\n  const selectedSiteWeeklyValues = [];\n  const previousSelectedSiteWeeklyValues = [];\n  const [coverWaste, setCoverWaste] = useState(0);\n  const [preparationWaste, setPreparationWaste] = useState(0);\n  const [spoilageWaste, setSpoilageWaste] = useState(0);\n  const [totalWaste, setTotalWaste] = useState(0);\n  const [lastWeekCoverWaste, setlastWeekCoverWaste] = useState(0);\n  const [lastWeekPreparationWaste, setLastWeekPreparationWaste] = useState(0);\n  const [lastWeekSpoilageWaste, setLastWeekSpoilageWaste] = useState(0);\n  const [lastWeekTotalWaste, setLastWeekTotalWaste] = useState(0);\n  const [currentWeekCoverWaste, setCurrentWeekCoverWaste] = useState(0);\n  const [currentWeekPreparationWaste, setCurrentWeekPreparationWaste] = useState(0);\n  const [currentWeekSpoilageWaste, setCurrentWeekSpoilageWaste] = useState(0);\n  const [currentWeekTotalWaste, setCurrentWeekTotalWaste] = useState(0);\n  const [displayCurrentWasteValue, setDisplayCurrentWasteValue] = useState(0);\n  const [displayPreviousWasteValue, setDisplayPreviousWasteValue] = useState(0);\n  const [color, setColor] = useState(0);\n  const [showTooltip, setTooltip] = React.useState(true);\n  const weeklyWasteValuesForCurrentWeekAndLastWeek = [{\n    value: displayCurrentWasteValue,\n    colors: [color, \"rgb(15, 128, 140)\"]\n  }, {\n    value: displayPreviousWasteValue,\n    colors: [color, \"rgb(140, 112, 140)\"]\n  }];\n  useEffect(() => {\n    if (props.weeklyTrend) {\n      setCoverWaste(props.weeklyTrend[0].coverWaste);\n      setPreparationWaste(props.weeklyTrend[0].prepWaste);\n      setSpoilageWaste(props.weeklyTrend[0].spoilageWaste);\n      setTotalWaste(props.weeklyTrend[0].totalWaste); // reformatForWeeklyWasteBar(props.weeklyWasteValuesForCurrentWeekAndLastWeek)\n    }\n  }, [props.siteName, props.weeklyWasteTrend, props.weeklyTrend, props.weeklyWasteValuesForCurrentWeekAndLastWeek]); // const reformatForWeeklyWasteBar = (weeklyWaste) => {\n  //   if (weeklyWaste) {\n  //     setlastWeekCoverWaste(weeklyWaste.lastWeek[0].data.coverWaste[0]);\n  //     setLastWeekPreparationWaste(weeklyWaste.lastWeek[0].data.preparationWaste[0])\n  //     setLastWeekSpoilageWaste(weeklyWaste.lastWeek[0].data.spoilageWaste[0])\n  //     setLastWeekTotalWaste(weeklyWaste.lastWeek[0].data.coverWaste[0] + weeklyWaste.lastWeek[0].data.preparationWaste[0] + weeklyWaste.lastWeek[0].data.spoilageWaste[0])\n  //     let totalCurrentWeekWaste = weeklyWaste.lastWeek[0].data.coverWaste[0] + weeklyWaste.lastWeek[0].data.preparationWaste[0] + weeklyWaste.lastWeek[0].data.spoilageWaste[0];\n  //     let totalPreviousWeekWaste = weeklyWaste.currentWeek[0][0].coverWaste[0] + weeklyWaste.currentWeek[0][0].preparationWaste[0] + weeklyWaste.currentWeek[0][0].spoilageWaste[0];\n  //     setDisplayPreviousWasteValue(totalCurrentWeekWaste)\n  //     setDisplayCurrentWasteValue(totalPreviousWeekWaste)\n  //     setCurrentWeekCoverWaste(weeklyWaste.currentWeek[0][0].coverWaste[0])\n  //     setCurrentWeekPreparationWaste(weeklyWaste.currentWeek[0][0].preparationWaste[0])\n  //     setCurrentWeekSpoilageWaste(weeklyWaste.currentWeek[0][0].spoilageWaste[0])\n  //     setCurrentWeekTotalWaste(weeklyWaste.currentWeek[0][0].coverWaste[0] + weeklyWaste.currentWeek[0][0].preparationWaste[0] + weeklyWaste.currentWeek[0][0].spoilageWaste[0])\n  //     const differenceBetweenCurrentAndPreviousFoodWaste = totalCurrentWeekWaste - totalPreviousWeekWaste;\n  //     let colour = differenceBetweenCurrentAndPreviousFoodWaste > 0 ? \"rgb(188, 242, 107)\" : \"rgba(255, 0, 0, 0.9)\";\n  //     setColor(colour)\n  //   }\n  // }\n\n  const setDateRange = () => {\n    if (selectedSiteWeeklyValues.length > 0 && previousSelectedSiteWeeklyValues.length > 0) {\n      let weeklyWasteTrendDateRange = {\n        lastWeek: previousSelectedSiteWeeklyValues[0].data.Date,\n        thisWeek: selectedSiteWeeklyValues[0].data.Date\n      };\n      return weeklyWasteTrendDateRange;\n    }\n  };\n\n  const handleWeeklyTrendValues = e => {\n    const selector = e.target.id;\n\n    if (selector === \"C\") {\n      setDisplayPreviousWasteValue(lastWeekCoverWaste);\n      setDisplayCurrentWasteValue(currentWeekCoverWaste);\n    } else if (selector === \"S\") {\n      setDisplayPreviousWasteValue(lastWeekSpoilageWaste);\n      setDisplayCurrentWasteValue(currentWeekSpoilageWaste);\n    } else if (selector === \"P\") {\n      setDisplayPreviousWasteValue(lastWeekPreparationWaste);\n      setDisplayCurrentWasteValue(currentWeekPreparationWaste);\n    } else if (selector === \"A\") {\n      setDisplayPreviousWasteValue(lastWeekTotalWaste);\n      setDisplayCurrentWasteValue(currentWeekTotalWaste);\n    }\n\n    setTooltip(false);\n  }; // console.log(\"coverWaste\",coverWaste)\n  // console.log(\"preparationWaste\",preparationWaste)\n  // console.log(\"spoilageWaste\",spoilageWaste)\n  // console.log(\"totalWaste\",totalWaste)\n\n\n  return /*#__PURE__*/React.createElement(WeeklyWasteTrendContext.Provider, {\n    value: {\n      // selectedSiteWeeklyValues,\n      // previousSelectedSiteWeeklyValues,\n      // selectCurrentYearlyWeeklyWasteValues,\n      coverWaste,\n      preparationWaste,\n      spoilageWaste,\n      totalWaste,\n      ///\n      setDateRange,\n      weeklyWasteValuesForCurrentWeekAndLastWeek,\n      handleWeeklyTrendValues,\n      showTooltip\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default WeeklyWasteTrendProvider;","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/contexts/weekly-trends-context.js"],"names":["React","createContext","useEffect","useState","WeeklyWasteTrendContext","WeeklyWasteTrendProvider","props","selectedSiteWeeklyValues","previousSelectedSiteWeeklyValues","coverWaste","setCoverWaste","preparationWaste","setPreparationWaste","spoilageWaste","setSpoilageWaste","totalWaste","setTotalWaste","lastWeekCoverWaste","setlastWeekCoverWaste","lastWeekPreparationWaste","setLastWeekPreparationWaste","lastWeekSpoilageWaste","setLastWeekSpoilageWaste","lastWeekTotalWaste","setLastWeekTotalWaste","currentWeekCoverWaste","setCurrentWeekCoverWaste","currentWeekPreparationWaste","setCurrentWeekPreparationWaste","currentWeekSpoilageWaste","setCurrentWeekSpoilageWaste","currentWeekTotalWaste","setCurrentWeekTotalWaste","displayCurrentWasteValue","setDisplayCurrentWasteValue","displayPreviousWasteValue","setDisplayPreviousWasteValue","color","setColor","showTooltip","setTooltip","weeklyWasteValuesForCurrentWeekAndLastWeek","value","colors","weeklyTrend","prepWaste","siteName","weeklyWasteTrend","setDateRange","length","weeklyWasteTrendDateRange","lastWeek","data","Date","thisWeek","handleWeeklyTrendValues","e","selector","target","id","children"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\n\nexport const WeeklyWasteTrendContext = createContext()\n\nconst WeeklyWasteTrendProvider = props => {\n\n  // const [selectedSiteWeeklyValues, setSelectedSiteWeeklyValues] = useState([])\n  // const [previousSelectedSiteWeeklyValues, setPreviousSelectedSiteWeeklyValues] = useState([])\n  const selectedSiteWeeklyValues = []\n  const previousSelectedSiteWeeklyValues = []\n\n  const [coverWaste, setCoverWaste] = useState(0)\n  const [preparationWaste, setPreparationWaste] = useState(0)\n  const [spoilageWaste, setSpoilageWaste] = useState(0)\n  const [totalWaste, setTotalWaste] = useState(0)\n\n  const [lastWeekCoverWaste, setlastWeekCoverWaste] = useState(0)\n  const [lastWeekPreparationWaste, setLastWeekPreparationWaste] = useState(0)\n  const [lastWeekSpoilageWaste, setLastWeekSpoilageWaste] = useState(0)\n  const [lastWeekTotalWaste, setLastWeekTotalWaste] = useState(0)\n\n  const [currentWeekCoverWaste, setCurrentWeekCoverWaste] = useState(0)\n  const [currentWeekPreparationWaste, setCurrentWeekPreparationWaste] = useState(0)\n  const [currentWeekSpoilageWaste, setCurrentWeekSpoilageWaste] = useState(0)\n  const [currentWeekTotalWaste, setCurrentWeekTotalWaste] = useState(0)\n\n  const [displayCurrentWasteValue, setDisplayCurrentWasteValue] = useState(0)\n  const [displayPreviousWasteValue, setDisplayPreviousWasteValue] = useState(0)\n\n  const [color, setColor] = useState(0)\n\n  const [showTooltip, setTooltip] = React.useState(true);\n\n  const weeklyWasteValuesForCurrentWeekAndLastWeek = [\n  {\n    value: displayCurrentWasteValue,\n    colors: [color, \"rgb(15, 128, 140)\"]\n  },\n  {\n    value: displayPreviousWasteValue,\n    colors: [color, \"rgb(140, 112, 140)\"]\n  }\n];\n\n  useEffect(() => {\n\n    if (props.weeklyTrend) {\n\n      setCoverWaste(props.weeklyTrend[0].coverWaste)\n      setPreparationWaste(props.weeklyTrend[0].prepWaste)\n      setSpoilageWaste(props.weeklyTrend[0].spoilageWaste)\n      setTotalWaste(props.weeklyTrend[0].totalWaste)\n\n      // reformatForWeeklyWasteBar(props.weeklyWasteValuesForCurrentWeekAndLastWeek)\n\n    }\n\n}, [ props.siteName, props.weeklyWasteTrend, props.weeklyTrend, props.weeklyWasteValuesForCurrentWeekAndLastWeek])\n\n\n\n  // const reformatForWeeklyWasteBar = (weeklyWaste) => {\n  //   if (weeklyWaste) {\n\n  //     setlastWeekCoverWaste(weeklyWaste.lastWeek[0].data.coverWaste[0]);\n  //     setLastWeekPreparationWaste(weeklyWaste.lastWeek[0].data.preparationWaste[0])\n  //     setLastWeekSpoilageWaste(weeklyWaste.lastWeek[0].data.spoilageWaste[0])\n  //     setLastWeekTotalWaste(weeklyWaste.lastWeek[0].data.coverWaste[0] + weeklyWaste.lastWeek[0].data.preparationWaste[0] + weeklyWaste.lastWeek[0].data.spoilageWaste[0])\n\n  //     let totalCurrentWeekWaste = weeklyWaste.lastWeek[0].data.coverWaste[0] + weeklyWaste.lastWeek[0].data.preparationWaste[0] + weeklyWaste.lastWeek[0].data.spoilageWaste[0];\n  //     let totalPreviousWeekWaste = weeklyWaste.currentWeek[0][0].coverWaste[0] + weeklyWaste.currentWeek[0][0].preparationWaste[0] + weeklyWaste.currentWeek[0][0].spoilageWaste[0];\n\n  //     setDisplayPreviousWasteValue(totalCurrentWeekWaste)\n  //     setDisplayCurrentWasteValue(totalPreviousWeekWaste)\n\n  //     setCurrentWeekCoverWaste(weeklyWaste.currentWeek[0][0].coverWaste[0])\n  //     setCurrentWeekPreparationWaste(weeklyWaste.currentWeek[0][0].preparationWaste[0])\n  //     setCurrentWeekSpoilageWaste(weeklyWaste.currentWeek[0][0].spoilageWaste[0])\n  //     setCurrentWeekTotalWaste(weeklyWaste.currentWeek[0][0].coverWaste[0] + weeklyWaste.currentWeek[0][0].preparationWaste[0] + weeklyWaste.currentWeek[0][0].spoilageWaste[0])\n\n  //     const differenceBetweenCurrentAndPreviousFoodWaste = totalCurrentWeekWaste - totalPreviousWeekWaste;\n  //     let colour = differenceBetweenCurrentAndPreviousFoodWaste > 0 ? \"rgb(188, 242, 107)\" : \"rgba(255, 0, 0, 0.9)\";\n  //     setColor(colour)\n\n  //   }\n  // }\n\n  const setDateRange = () => {\n    if (selectedSiteWeeklyValues.length > 0 && previousSelectedSiteWeeklyValues.length > 0) {\n        let weeklyWasteTrendDateRange = {\n          lastWeek: previousSelectedSiteWeeklyValues[0].data.Date,\n          thisWeek: selectedSiteWeeklyValues[0].data.Date\n        }\n        return weeklyWasteTrendDateRange;\n    }\n  }\n\n  const handleWeeklyTrendValues= (e) => {\n    const selector = e.target.id;\n\n    if (selector === \"C\") {\n      setDisplayPreviousWasteValue(lastWeekCoverWaste)\n      setDisplayCurrentWasteValue(currentWeekCoverWaste)\n\n    } else if (selector === \"S\") {\n      setDisplayPreviousWasteValue(lastWeekSpoilageWaste)\n      setDisplayCurrentWasteValue(currentWeekSpoilageWaste)\n\n    } else if (selector === \"P\") {\n      setDisplayPreviousWasteValue(lastWeekPreparationWaste)\n      setDisplayCurrentWasteValue(currentWeekPreparationWaste)\n\n    } else if (selector === \"A\") {\n      setDisplayPreviousWasteValue(lastWeekTotalWaste)\n      setDisplayCurrentWasteValue(currentWeekTotalWaste)\n\n    }\n\n    setTooltip(false)\n  }\n\n  // console.log(\"coverWaste\",coverWaste)\n  // console.log(\"preparationWaste\",preparationWaste)\n  // console.log(\"spoilageWaste\",spoilageWaste)\n  // console.log(\"totalWaste\",totalWaste)\n\n  return (\n    <WeeklyWasteTrendContext.Provider\n       value={{\n        // selectedSiteWeeklyValues,\n        // previousSelectedSiteWeeklyValues,\n        // selectCurrentYearlyWeeklyWasteValues,\n        coverWaste,\n        preparationWaste,\n        spoilageWaste,\n        totalWaste,\n        ///\n        setDateRange,\n        weeklyWasteValuesForCurrentWeekAndLastWeek,\n        handleWeeklyTrendValues,\n\n        showTooltip\n      }}\n    >\n      {props.children}\n    </WeeklyWasteTrendContext.Provider>\n  )\n}\n\nexport default WeeklyWasteTrendProvider\n"]},"metadata":{},"sourceType":"module"}