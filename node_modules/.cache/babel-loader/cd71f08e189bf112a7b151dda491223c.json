{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/group-three.js\";\nimport React, { useState } from 'react';\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport EventProductionWaste from \"./reports/event-production-waste-report\";\nimport { AccordionHeading, AccordionBody } from \"./accordion\";\nimport { onDragEnd } from \"../../../helper.js\";\nconst newColumn = [{\n  id: '0',\n  type: 'eventProductionWaste'\n}];\nconst columnsNew = {\n  column: {\n    name: \"right-hand-side\",\n    items: newColumn\n  }\n};\nexport default function Group(props) {\n  const [columns, setColumns] = useState(columnsNew);\n  return /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: result => onDragEnd(result, columns, setColumns),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"group_card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, Object.entries(columns).map(([columnId, column], index) => {\n    return /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"\",\n      droppableId: columnId,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"main\", Object.assign({\n      className: \"\"\n    }, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(AccordionHeading, {\n      color: \"lightPrimaryGreenBackGroundColor\",\n      group: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"group_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    }, \"WASTE EVENTS\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => props.handleChangeForCheckedAndAccordion(!props.showGroupThree, \"groupThreeSwitch\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 37\n      }\n    }, props.showGroupThree ? \"X\" : \"| | | \"))), column.items.map(({\n      id,\n      type\n    }, index) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, type === \"eventProductionWaste\" && /*#__PURE__*/React.createElement(Draggable, {\n        draggableId: id,\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 41\n        }\n      }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        className: \"dashboard__draggableReport marginBottomBy1rem\"\n      }, provided.draggableProps, provided.dragHandleProps, {\n        ref: provided.innerRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(EventProductionWaste, {\n        siteName: props.siteNameDailySalesVsWasteReport,\n        showPounds: props.showPoundsDailySalesVsWasteReport,\n        showEventProductionWaste: props.showEventProductionWaste,\n        setShowEventProductionWaste: props.setShowEventProductionWaste,\n        hideReport: props.hideReportDailySalesVsWasteReport,\n        weeklyDailyLabels: props.weeklyDailyLabels,\n        weeklyDailyRange: props.weeklyDailyRange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 53\n        }\n      }))));\n    })));\n  })));\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/group-three.js"],"names":["React","useState","DragDropContext","Draggable","Droppable","EventProductionWaste","AccordionHeading","AccordionBody","onDragEnd","newColumn","id","type","columnsNew","column","name","items","Group","props","columns","setColumns","result","Object","entries","map","columnId","index","provided","droppableProps","innerRef","handleChangeForCheckedAndAccordion","showGroupThree","draggableProps","dragHandleProps","siteNameDailySalesVsWasteReport","showPoundsDailySalesVsWasteReport","showEventProductionWaste","setShowEventProductionWaste","hideReportDailySalesVsWasteReport","weeklyDailyLabels","weeklyDailyRange"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\n\nimport EventProductionWaste from \"./reports/event-production-waste-report\";\n\nimport { AccordionHeading, AccordionBody } from \"./accordion\"\n\nimport {\n    onDragEnd\n  } from \"../../../helper.js\"\n\nconst newColumn = [\n    {\n      id: '0',\n      type: 'eventProductionWaste'\n    },\n  ]\n\n\nconst columnsNew = {\ncolumn: {\n    name: \"right-hand-side\",\n    items: newColumn,\n},\n};\n\nexport default function Group(props) {\n\nconst [columns, setColumns] = useState(columnsNew);\n\n    return (\n\n        <DragDropContext onDragEnd={(result) => onDragEnd(result, columns, setColumns)}>\n            <div className=\"group_card\">\n                {Object.entries(columns).map(([columnId, column], index) => {\n\n                return (\n                    <Droppable droppableId=\"\" droppableId={columnId} key={index}>\n                    {(provided) => (\n                        <main className=\"\" {...provided.droppableProps} ref={provided.innerRef}>\n                            {/* <div className=\"group_title\">\n                                <h1>WASTE EVENTS</h1>\n                            </div> */}\n\n                            <AccordionHeading color={\"lightPrimaryGreenBackGroundColor\"} group={true}>\n                                <div className=\"group_title\">WASTE EVENTS</div>\n                                <div className=\"container\">\n                                    <span onClick={() => props.handleChangeForCheckedAndAccordion(!props.showGroupThree, \"groupThreeSwitch\")}>\n                                    {props.showGroupThree ? (\"X\"):\"| | | \"}\n                                    </span>\n                                </div>\n                            </AccordionHeading>\n\n                            {column.items.map(({id, type}, index) => {\n                                return (\n                                    <>\n                                    {type === \"eventProductionWaste\" &&\n                                        <Draggable draggableId={id} index={index}>\n                                            {(provided) => (\n                                                <div className=\"dashboard__draggableReport marginBottomBy1rem\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                                                    <EventProductionWaste\n                                                        siteName={props.siteNameDailySalesVsWasteReport}\n                                                        showPounds={props.showPoundsDailySalesVsWasteReport}\n                                                        showEventProductionWaste={props.showEventProductionWaste}\n                                                        setShowEventProductionWaste={props.setShowEventProductionWaste}\n                                                        hideReport={props.hideReportDailySalesVsWasteReport}\n                                                        weeklyDailyLabels={props.weeklyDailyLabels}\n                                                        weeklyDailyRange={props.weeklyDailyRange}\n                                                    />\n                                                </div>\n                                            )}\n                                        </Draggable>\n                                    }\n                                    </>\n                                )\n                            })}\n                        </main>\n                            )}\n                    </Droppable>\n                )})}\n            </div>\n        </DragDropContext>\n\n\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}