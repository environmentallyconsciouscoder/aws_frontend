{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/controller.js\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Radio, TableRow, Paper, TablePagination, TableHead, Table, TableContainer, TableCell, TableBody } from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport useWindowDimensions from \"../libs/use-window-dimensions\";\nexport default function Controller(props) {\n  const [tooltipIsOpen, setTooltipIsOpen] = React.useState(true);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(4);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const removeCache = () => {\n    localStorage.clear();\n    sessionStorage.clear();\n    window.location.reload(true);\n  };\n\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    if (width <= 700) {\n      setTooltipIsOpen(false);\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"dashboard__reportMenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controller-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__reportMenu--positioning marginTop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__overviewSitesReportTable report-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: \"dashboard__paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: \"dashboard__tableContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    className: \"dashboard__table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: \"dashboard__tableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"dashboard__tableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"report-subtitle applyMarginRightAndLeft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, \"Total CSP Waste\")), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"dashboard__tableCell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"report-subtitle applyMarginRightAndLeft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, \"Monthly CSP Trend\")))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, props.allsites.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((site, index) => /*#__PURE__*/React.createElement(TableRow, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: \"dashboard__tableCell--style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Radio, {\n    checked: props.selectedSiteValueID === site.siteName,\n    onChange: props.handleSiteIDchange,\n    value: site.siteName,\n    color: \"default\",\n    inputProps: {\n      \"aria-label\": \"D\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__siteName--color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, \" \", site.siteName.replace(/[^A-Za-z]+/g, '').toLowerCase()))), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"dashboard__tableCell--style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, props.showPounds ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 37\n    }\n  }, \"\\xA3\"), parseInt((site.totalWaste * 2.775).toFixed(0))) : /*#__PURE__*/React.createElement(React.Fragment, null, parseInt(site.totalWaste.toFixed(0)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 37\n    }\n  }, \"Kg\"))), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"dashboard__tableCell--style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, props.showPounds ? /*#__PURE__*/React.createElement(React.Fragment, null, parseInt((site.trends * 2.775).toFixed(0))) : /*#__PURE__*/React.createElement(React.Fragment, null, parseInt(site.trends.toFixed(0)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  }, \"Kg\")))))))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [2],\n    component: \"div\",\n    count: props.allsites.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__reportMenu--positioning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, props.userType !== \"user\" && /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"dashboard__reportMenu--fontSize applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, \"Settings\"), props.userType !== \"user\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__controlledLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 33\n    }\n  }, \"Set Targets\")), props.userType !== \"user\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__controlledLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/capping\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  }, \"Add Capping\")), props.userType !== \"user\" && props.userType !== \"admin\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__controlledLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 33\n    }\n  }, \"Add Team member\")) : null, props.userType === \"greenkodeUser\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__controlledLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/signupsuperadmin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 33\n    }\n  }, \"Sign Up Super Admin\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__controlledLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/InputsList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }, \"Add Inputs\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__controlledLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/setDisplays\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 29\n    }\n  }, \"Show Or Hide Reports\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__controlledLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/liveFeed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }\n  }, \"Live Feed\")), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: removeCache,\n    style: {\n      marginTop: \"1rem\"\n    },\n    className: \"remove-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    open: tooltipIsOpen,\n    onClose: () => setTooltipIsOpen(false),\n    title: \"RESET DASHBOARD TO UPDATE NEW CHANGES\",\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 33\n    }\n  }, \"Reset Dashboard\"))))))));\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/controller.js"],"names":["React","useEffect","Link","Radio","TableRow","Paper","TablePagination","TableHead","Table","TableContainer","TableCell","TableBody","Tooltip","useWindowDimensions","Controller","props","tooltipIsOpen","setTooltipIsOpen","useState","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","removeCache","localStorage","clear","sessionStorage","window","location","reload","width","allsites","slice","map","site","index","selectedSiteValueID","siteName","handleSiteIDchange","replace","toLowerCase","showPounds","parseInt","totalWaste","toFixed","trends","length","userType","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SACIC,KADJ,EAEIC,QAFJ,EAGIC,KAHJ,EAIIC,eAJJ,EAKIC,SALJ,EAMIC,KANJ,EAOIC,cAPJ,EAQIC,SARJ,EASIC,SATJ,QAUS,mBAVT;AAYA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,mBAAP,MAAgC,+BAAhC;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEtC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCjB,KAAK,CAACkB,QAAN,CAAe,IAAf,CAA1C;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBpB,KAAK,CAACkB,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCtB,KAAK,CAACkB,QAAN,CAAe,CAAf,CAAtC;;AAEA,QAAMK,gBAAgB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACzCL,IAAAA,OAAO,CAACK,OAAD,CAAP;AACH,GAFD;;AAIA,QAAMC,uBAAuB,GAAIF,KAAD,IAAW;AAC3CF,IAAAA,cAAc,CAAC,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAf,CAAd;AACAR,IAAAA,OAAO,CAAC,CAAD,CAAP;AACC,GAHD;;AAKA,QAAMS,WAAW,GAAG,MAAM;AACtBC,IAAAA,YAAY,CAACC,KAAb;AACAC,IAAAA,cAAc,CAACD,KAAf;AACAE,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACH,GAJD;;AAMA,QAAM;AAAEC,IAAAA;AAAF,MAAYvB,mBAAmB,EAArC;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAImC,KAAK,IAAI,GAAb,EAAkB;AACdnB,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH;AACJ,GAJQ,CAAT;AAOA,sBACI,uDACA;AAAQ,IAAA,SAAS,EAAC,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAK,IAAA,SAAS,EAAC,8CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,2BAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACA,IAAA,YAAY,MADZ;AAEA,kBAAW,cAFX;AAGA,IAAA,SAAS,EAAC,kBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CAFA,eAOA,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CAPA,CADJ,CALA,eAsBA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCF,KAAK,CAACsB,QAAN,CAAeC,KAAf,CAAqBnB,IAAI,GAAGE,WAA5B,EAAyCF,IAAI,GAAGE,WAAP,GAAqBA,WAA9D,EACIkB,GADJ,CACQ,CAACC,IAAD,EAAOC,KAAP,kBACD,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,6BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AACI,IAAA,OAAO,EAAE1B,KAAK,CAAC2B,mBAAN,KAA8BF,IAAI,CAACG,QADhD;AAEI,IAAA,QAAQ,EAAE5B,KAAK,CAAC6B,kBAFpB;AAGI,IAAA,KAAK,EAAEJ,IAAI,CAACG,QAHhB;AAII,IAAA,KAAK,EAAC,SAJV;AAKI,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAQA;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,GADL,EAEKH,IAAI,CAACG,QAAL,CAAcE,OAAd,CAAsB,aAAtB,EAAqC,EAArC,EAAyCC,WAAzC,EAFL,CARA,CADJ,CADA,eAgBA,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,6BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEK/B,KAAK,CAACgC,UAAN,gBACD,uDACI;AAAM,IAAA,SAAS,EAAC,0EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAIKC,QAAQ,CAAC,CAACR,IAAI,CAACS,UAAL,GAAkB,KAAnB,EAA0BC,OAA1B,CAAkC,CAAlC,CAAD,CAJb,CADC,gBAQD,0CACCF,QAAQ,CAACR,IAAI,CAACS,UAAL,CAAgBC,OAAhB,CAAwB,CAAxB,CAAD,CADT,eAEI;AAAM,IAAA,SAAS,EAAC,0EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CAVJ,CAhBA,eAmCA,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,6BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnC,KAAK,CAACgC,UAAN,gBACD,0CACCC,QAAQ,CAAC,CAACR,IAAI,CAACW,MAAL,GAAc,KAAf,EAAsBD,OAAtB,CAA8B,CAA9B,CAAD,CADT,CADC,gBAKD,0CACCF,QAAQ,CAACR,IAAI,CAACW,MAAL,CAAYD,OAAZ,CAAoB,CAApB,CAAD,CADT,eAEI;AAAM,IAAA,SAAS,EAAC,0EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CANJ,CAnCA,CAFP,CADD,CAtBA,CADJ,CADA,eAmFA,oBAAC,eAAD;AACI,IAAA,kBAAkB,EAAE,CAAC,CAAD,CADxB;AAEI,IAAA,SAAS,EAAC,KAFd;AAGI,IAAA,KAAK,EAAEnC,KAAK,CAACsB,QAAN,CAAee,MAH1B;AAII,IAAA,WAAW,EAAE/B,WAJjB;AAKI,IAAA,IAAI,EAAEF,IALV;AAMI,IAAA,YAAY,EAAEI,gBANlB;AAOI,IAAA,mBAAmB,EAAEG,uBAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnFA,CAFA,CADJ,CAFA,eAqGI;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,0CACMX,KAAK,CAACsC,QAAN,KAAmB,MAAnB,iBACE;AAAI,IAAA,SAAS,EAAC,mEAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR,EAKMtC,KAAK,CAACsC,QAAN,KAAmB,MAAnB,iBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CANR,EAWMtC,KAAK,CAACsC,QAAN,KAAmB,MAAnB,iBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAZR,EAiBMtC,KAAK,CAACsC,QAAN,KAAmB,MAAnB,IAA8BtC,KAAK,CAACsC,QAAN,KAAmB,OAAjD,gBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADF,GAIA,IArBN,EAuBMtC,KAAK,CAACsC,QAAN,KAAmB,eAAnB,iBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,mBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CAxBR,eA6BI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CA7BJ,eAiCI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CAjCJ,eAqCI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CArCJ,eAyCI;AAAK,IAAA,OAAO,EAAExB,WAAd;AAA2B,IAAA,KAAK,EAAE;AAACyB,MAAAA,SAAS,EAAE;AAAZ,KAAlC;AAAuD,IAAA,SAAS,EAAC,gBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AACI,IAAA,IAAI,EAAEtC,aADV;AAEI,IAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,KAAD,CAFnC;AAGI,IAAA,KAAK,EAAC,uCAHV;AAII,IAAA,KAAK,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI;AAAG,IAAA,IAAI,EAAC,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANJ,CADJ,CAzCJ,CAFJ,CArGJ,CAFJ,CADA,CADJ;AA8QH","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n    Radio,\n    TableRow,\n    Paper,\n    TablePagination,\n    TableHead,\n    Table,\n    TableContainer,\n    TableCell,\n    TableBody,\n  } from \"@material-ui/core\";\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport useWindowDimensions from \"../libs/use-window-dimensions\";\n\nexport default function Controller(props) {\n\n    const [tooltipIsOpen, setTooltipIsOpen] = React.useState(true);\n\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(4);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n    };\n\n    const removeCache = () => {\n        localStorage.clear();\n        sessionStorage.clear();\n        window.location.reload(true);\n    };\n\n    const { width } = useWindowDimensions();\n\n    useEffect(() => {\n        if (width <= 700) {\n            setTooltipIsOpen(false)\n        }\n    })\n\n\n    return (\n        <>\n        <header className=\"dashboard__reportMenu\">\n\n            <div className=\"controller-wrapper\">\n\n            <div className=\"dashboard__reportMenu--positioning marginTop\">\n                <div className=\"dashboard__overviewSitesReportTable report-subtitle\">\n\n                <Paper className=\"dashboard__paper\">\n                <TableContainer className=\"dashboard__tableContainer\">\n                    <Table\n                    stickyHeader\n                    aria-label=\"sticky table\"\n                    className=\"dashboard__table\"\n                    >\n                    <TableHead>\n                        <TableRow>\n                        <TableCell className=\"dashboard__tableCell\"></TableCell>\n                        <TableCell className=\"dashboard__tableCell\">\n                            <div className=\"report-subtitle applyMarginRightAndLeft\">\n                            Total CSP Waste\n                            </div>\n                        </TableCell>\n                        <TableCell className=\"dashboard__tableCell\">\n                            <div className=\"report-subtitle applyMarginRightAndLeft\">\n                            Monthly CSP Trend\n                            </div>\n                        </TableCell>\n                        </TableRow>\n                    </TableHead>\n\n\n                    <TableBody>\n                    {props.allsites.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((site, index) => (\n                            <TableRow key={index}>\n                            <TableCell className=\"dashboard__tableCell--style\">\n                                <div className=\"dashboard__radio\">\n                                <Radio\n                                    checked={props.selectedSiteValueID === site.siteName}\n                                    onChange={props.handleSiteIDchange}\n                                    value={site.siteName}\n                                    color=\"default\"\n                                    inputProps={{ \"aria-label\": \"D\" }}\n                                />\n                                <div className=\"dashboard__siteName--color\">\n                                    {\" \"}\n                                    {site.siteName.replace(/[^A-Za-z]+/g, '').toLowerCase()}\n                                </div>\n                                </div>\n                            </TableCell>\n                            <TableCell className=\"dashboard__tableCell--style\">\n\n                                {props.showPounds ? (\n                                <>\n                                    <span className=\"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\">\n                                    £\n                                    </span>\n                                    {parseInt((site.totalWaste * 2.775).toFixed(0))}\n                                </>\n                                ) : (\n                                <>\n                                {parseInt(site.totalWaste.toFixed(0))}\n                                    <span className=\"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\">\n                                    Kg\n                                    </span>\n                                </>\n                                )}\n\n                            </TableCell>\n                            <TableCell className=\"dashboard__tableCell--style\">\n                                {props.showPounds ? (\n                                <>\n                                {parseInt((site.trends * 2.775).toFixed(0))}\n                                </>\n                                ) :\n                                <>\n                                {parseInt(site.trends.toFixed(0))}\n                                    <span className=\"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\">\n                                    Kg\n                                    </span>\n                                    </>\n                                }\n\n                            </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                    </Table>\n                </TableContainer>\n\n                <TablePagination\n                    rowsPerPageOptions={[2]}\n                    component=\"div\"\n                    count={props.allsites.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n                </Paper>\n                </div>\n                </div>\n\n                <div className=\"dashboard__reportMenu--positioning\">\n\n                    <>\n                        { props.userType !== \"user\" &&\n                            <h3 className=\"dashboard__reportMenu--fontSize applyPurpleColor cooperHewittBold\">Settings</h3>\n                        }\n\n                        { props.userType !== \"user\" &&\n                            <div className=\"dashboard__controlledLabel\">\n                                <Link to=\"/settings\">Set Targets</Link>\n                            </div>\n                        }\n\n                        { props.userType !== \"user\" &&\n                            <div className=\"dashboard__controlledLabel\">\n                                <Link to=\"/capping\">Add Capping</Link>\n                            </div>\n                        }\n\n                        { props.userType !== \"user\" &&  props.userType !== \"admin\"?\n                            <div className=\"dashboard__controlledLabel\">\n                                <Link to=\"/signup\">Add Team member</Link>\n                            </div>\n                        : null}\n\n                        { props.userType === \"greenkodeUser\" &&\n                            <div className=\"dashboard__controlledLabel\">\n                                <Link to=\"/signupsuperadmin\">Sign Up Super Admin</Link>\n                            </div>\n                        }\n\n                        <div className=\"dashboard__controlledLabel\">\n                            <Link to=\"/InputsList\">Add Inputs</Link>\n                        </div>\n\n                        <div className=\"dashboard__controlledLabel\">\n                            <Link to=\"/setDisplays\">Show Or Hide Reports</Link>\n                        </div>\n\n                        <div className=\"dashboard__controlledLabel\">\n                            <Link to=\"/liveFeed\">Live Feed</Link>\n                        </div>\n\n                        <div onClick={removeCache} style={{marginTop: \"1rem\"}} className=\"remove-tooltip\">\n                            <Tooltip\n                                open={tooltipIsOpen}\n                                onClose={() => setTooltipIsOpen(false)}\n                                title=\"RESET DASHBOARD TO UPDATE NEW CHANGES\"\n                                arrow\n                            >\n                                <a href=\"\">\n                                    Reset Dashboard\n                                </a>\n                            </Tooltip>\n                        </div>\n\n\n                    </>\n\n                </div>\n\n                {/* <div className=\"dashboard__reportMenu--positioning marginTop\">\n                <div className=\"dashboard__overviewSitesReportTable report-subtitle\">\n\n                <Paper className=\"dashboard__paper\">\n                <TableContainer className=\"dashboard__tableContainer\">\n                    <Table\n                    stickyHeader\n                    aria-label=\"sticky table\"\n                    className=\"dashboard__table\"\n                    >\n                    <TableHead>\n                        <TableRow>\n                        <TableCell className=\"dashboard__tableCell\"></TableCell>\n                        <TableCell className=\"dashboard__tableCell\">\n                            <div className=\"report-subtitle applyMarginRightAndLeft\">\n                            Total CSP Waste\n                            </div>\n                        </TableCell>\n                        <TableCell className=\"dashboard__tableCell\">\n                            <div className=\"report-subtitle applyMarginRightAndLeft\">\n                            Monthly CSP Trend\n                            </div>\n                        </TableCell>\n                        </TableRow>\n                    </TableHead>\n\n\n                    <TableBody>\n                    {props.allsites.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((site, index) => (\n                            <TableRow key={index}>\n                            <TableCell className=\"dashboard__tableCell--style\">\n                                <div className=\"dashboard__radio\">\n                                <Radio\n                                    checked={props.selectedSiteValueID === site.siteName}\n                                    onChange={props.handleSiteIDchange}\n                                    value={site.siteName}\n                                    color=\"default\"\n                                    inputProps={{ \"aria-label\": \"D\" }}\n                                />\n                                <div className=\"dashboard__siteName--color\">\n                                    {\" \"}\n                                    {site.siteName.replace(/[^A-Za-z]+/g, '').toLowerCase()}\n                                </div>\n                                </div>\n                            </TableCell>\n                            <TableCell className=\"dashboard__tableCell--style\">\n\n                                {props.showPounds ? (\n                                <>\n                                    <span className=\"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\">\n                                    £\n                                    </span>\n                                    {parseInt((site.totalWaste * 2.775).toFixed(0))}\n                                </>\n                                ) : (\n                                <>\n                                {parseInt(site.totalWaste.toFixed(0))}\n                                    <span className=\"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\">\n                                    Kg\n                                    </span>\n                                </>\n                                )}\n\n                            </TableCell>\n                            <TableCell className=\"dashboard__tableCell--style\">\n                                {props.showPounds ? (\n                                <>\n                                {parseInt((site.trends * 2.775).toFixed(0))}\n                                </>\n                                ) :\n                                <>\n                                {parseInt(site.trends.toFixed(0))}\n                                    <span className=\"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\">\n                                    Kg\n                                    </span>\n                                    </>\n                                }\n\n                            </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                    </Table>\n                </TableContainer>\n\n                <TablePagination\n                    rowsPerPageOptions={[2]}\n                    component=\"div\"\n                    count={props.allsites.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n                </Paper>\n                </div>\n                </div> */}\n\n            </div>\n\n        </header>\n        </>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}