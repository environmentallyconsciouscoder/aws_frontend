{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/user-inputs/daily-sales-vs-waste-inputs.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport moment from \"moment\";\nimport Pagination from \"./../reuseable-components/pagination/pagination.js\";\nimport { DailySalesVsWasteContext } from \"../../../../contexts/daily-sales-vs-waste-context\";\nimport { formatDateToDatabaseDateFormat, formatSiteName, addDaysToDate } from \"../../../../utilities\";\nimport { addMenuInput } from \"../../../../api\";\n\nconst getWeight = (salesNum, weightNum, wasteNum) => {\n  // console.log(\"salesNum\",salesNum)\n  // console.log(\"weightNum\",weightNum)\n  // console.log(\"wasteNum\",wasteNum)\n  const sales = salesNum === \"\" || salesNum === undefined ? 0 : salesNum;\n  const weight = weightNum === \"\" || weightNum === undefined ? 0 : weightNum;\n  const waste = wasteNum === \"\" || wasteNum === undefined ? 0 : wasteNum;\n  const weightAsWaste = parseFloat(sales) * parseFloat(weight) * parseFloat(waste) / 100;\n  return weightAsWaste.toFixed(2);\n};\n\nconst getWastePerSales = (salesNum, weightNum, wasteNum) => {\n  // console.log(\"salesNum\",salesNum)\n  // console.log(\"weightNum\",weightNum)\n  // console.log(\"wasteNum\",wasteNum)\n  const sales = salesNum === \"\" || salesNum === undefined ? 0 : salesNum;\n  const weight = weightNum === \"\" || weightNum === undefined ? 0 : weightNum;\n  const waste = wasteNum === \"\" || wasteNum === undefined ? 0 : wasteNum;\n  const weightAsWaste = parseFloat(sales) * parseFloat(weight) * parseFloat(waste) / 100;\n\n  if (weightAsWaste === 0 && parseFloat(sales) === 0) {\n    return 0;\n  } else {\n    const result = weightAsWaste / parseFloat(sales);\n    return result.toFixed(2);\n  }\n};\n\nexport default function CoverInputs(props) {\n  const {\n    dailyMenuInputs,\n    siteName,\n    companyName,\n    id,\n    filterOutEmptyObjects,\n    filterMenuItems,\n    firstDayOfTheWeek,\n    updateDailySalesVsWasteInput,\n    index\n  } = useContext(DailySalesVsWasteContext);\n  const [displays, setDisplays] = useState([]);\n  const [site, setSite] = useState([]);\n  const [date, setDate] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [pageNumber, setPageNumber] = useState(0);\n  useEffect(() => {\n    setDisplays(dailyMenuInputs);\n    const formatedSiteName = formatSiteName(siteName);\n    setSite(formatedSiteName); // console.log(\"props\",props)\n\n    if (date.length === 0) {\n      let formatedDate = moment().format('MMM DD YYYY');\n      setDate(formatedDate);\n    }\n\n    setIsSubmitting(false);\n  }, [props, dailyMenuInputs]);\n\n  const handleSubmit = e => {\n    // console.log(\"e\",e)\n    e.preventDefault(); // console.log(\"displays\",displays);\n    // let date = new Date()\n\n    const formatedDate = formatDateToDatabaseDateFormat(date); // console.log(\"formatedDate\",formatedDate)\n\n    const addDateToObject = displays.map(data => {\n      return Object.assign(data, {\n        date: formatedDate\n      });\n    }); // console.log(\"addDateToObject\",addDateToObject)\n\n    const removeEmptyFields = filterOutEmptyObjects(addDateToObject); // console.log(\"removeEmptyFields\",removeEmptyFields)\n\n    let objectReturnedToDB;\n\n    if (removeEmptyFields.length === 0) {\n      objectReturnedToDB = [{\n        \"menuItem\": \"\",\n        \"sales\": 0,\n        \"wastePerCent\": 0,\n        \"weightPerItem\": 0,\n        \"date\": formatedDate\n      }];\n    } else {\n      objectReturnedToDB = removeEmptyFields;\n    } // console.log(\"removeEmptyFields\",removeEmptyFields);\n    // console.log(\"objectReturnedToDB\",objectReturnedToDB);\n\n\n    addMenuInput(objectReturnedToDB, siteName, companyName, id).then(() => {\n      console.log(\"pageNumber\", pageNumber);\n      updateDailySalesVsWasteInput(props.companyID, props.companyName, props.selectedSiteValueID, pageNumber);\n    }).then(() => {\n      // console.log(\"pageNumber\",pageNumber);\n      // let formatedDate = moment().format('MMM DD YYYY');\n      // setDate(formatedDate);\n      const newDate = addDaysToDate(firstDayOfTheWeek, pageNumber);\n      setDate(newDate);\n    });\n    setIsSubmitting(true);\n  };\n\n  const handleAddFields = () => {\n    if (displays.length <= 20) {\n      setDisplays([...displays, {\n        weightPerItem: 0,\n        menuItem: \"menu item\",\n        sales: 0,\n        wastePerCent: 0\n      }]);\n    }\n  };\n\n  const handleChangeInput = (id, event) => {\n    // console.log(\"id\", id)\n    // console.log(\"event\", event)\n    const newInputFields = displays.map((data, i) => {\n      if (id === i) {\n        // console.log(\"data[event.target.name]\",data[event.target.name])\n        // console.log(\"event.target.value\",event.target.value)\n        data[event.target.name] = event.target.value;\n      }\n\n      return data;\n    }); // console.log(\"newInputFields\",newInputFields)\n\n    setDisplays(newInputFields);\n  };\n\n  const deleteItem = (data, id) => {\n    // console.log(\"id\",id)\n    // console.log(\"displays\",displays);\n    const values = [...displays];\n    values.splice(id, 1); // console.log(\"values\",values)\n\n    setDisplays(values);\n  };\n\n  const changePage = ({\n    selected\n  }) => {\n    // console.log(\"selected\", selected)\n    //this gives page number starting from 0\n    setPageNumber(selected);\n    filterMenuItems(selected);\n    const newDate = addDaysToDate(firstDayOfTheWeek, selected);\n    console.log(\"newDate\", newDate);\n    setDate(newDate);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DailySalesVsWasteReport applyBlueTuckGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DailySalesVsWasteReport__spacing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DailySalesVsWasteReport__heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DailySalesVsWasteReport__label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, site), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, \"Top Daily Sales\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, date)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleAddFields,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DailySalesVsWasteReport__tableLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, \"Top 10 or 20 sales\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, \"Sales\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, \"Weight Kg\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, \"Waste %\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, \"(Weight)\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, \"Waste per sales\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DailySalesVsWasteReport__tableLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, displays.map((data, id) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"DailySalesVsWasteReport__inputLayout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: data.menuItem,\n      name: \"menuItem\",\n      onChange: event => handleChangeInput(id, event),\n      type: \"text\",\n      onKeyDown: evt => [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"].includes(evt.key) && evt.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: data.sales,\n      name: \"sales\",\n      onChange: event => handleChangeInput(id, event),\n      type: \"number\",\n      onKeyDown: evt => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: data.weightPerItem,\n      name: \"weightPerItem\",\n      onChange: event => handleChangeInput(id, event),\n      type: \"number\",\n      onKeyDown: evt => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: data.wastePerCent,\n      name: \"wastePerCent\",\n      onChange: event => handleChangeInput(id, event),\n      type: \"number\",\n      onKeyDown: evt => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"DailySalesVsWasteReport__autoCalculator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 33\n      }\n    }, \"( \", getWeight(data.sales, data.weightPerItem, data.wastePerCent), \" ) Kg\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"DailySalesVsWasteReport__autoCalculator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 33\n      }\n    }, \" \", getWastePerSales(data.sales, data.weightPerItem, data.wastePerCent), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"2rem\",\n        fontFamily: \"CooperHewitt-Bold\",\n        cursor: \"pointer\"\n      },\n      onClick: () => deleteItem(data, id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 33\n      }\n    }, \"Delete\"));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DailySalesVsWasteReport__buttonLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => handleSubmit(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 25\n    }\n  }, isSubmitting ? \"Submitted\" : \"Submit\")))))), /*#__PURE__*/React.createElement(Pagination, {\n    index: index,\n    onPageChange: changePage,\n    pageCount: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/user-inputs/daily-sales-vs-waste-inputs.js"],"names":["React","useContext","useState","useEffect","IconButton","AddIcon","moment","Pagination","DailySalesVsWasteContext","formatDateToDatabaseDateFormat","formatSiteName","addDaysToDate","addMenuInput","getWeight","salesNum","weightNum","wasteNum","sales","undefined","weight","waste","weightAsWaste","parseFloat","toFixed","getWastePerSales","result","CoverInputs","props","dailyMenuInputs","siteName","companyName","id","filterOutEmptyObjects","filterMenuItems","firstDayOfTheWeek","updateDailySalesVsWasteInput","index","displays","setDisplays","site","setSite","date","setDate","isSubmitting","setIsSubmitting","pageNumber","setPageNumber","formatedSiteName","length","formatedDate","format","handleSubmit","e","preventDefault","addDateToObject","map","data","Object","assign","removeEmptyFields","objectReturnedToDB","then","console","log","companyID","selectedSiteValueID","newDate","handleAddFields","weightPerItem","menuItem","wastePerCent","handleChangeInput","event","newInputFields","i","target","name","value","deleteItem","values","splice","changePage","selected","marginLeft","width","display","evt","includes","key","fontFamily","cursor"],"mappings":"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","sourcesContent":["import React, {  useContext,  useState, useEffect} from \"react\";\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport moment from \"moment\";\n\nimport Pagination from \"./../reuseable-components/pagination/pagination.js\"\n\nimport { DailySalesVsWasteContext } from \"../../../../contexts/daily-sales-vs-waste-context\";\n\nimport {\n    formatDateToDatabaseDateFormat,\n    formatSiteName,\n    addDaysToDate\n} from \"../../../../utilities\";\n\nimport {\n    addMenuInput,\n} from \"../../../../api\";\n\nconst getWeight = (salesNum, weightNum, wasteNum) => {\n\n    // console.log(\"salesNum\",salesNum)\n    // console.log(\"weightNum\",weightNum)\n    // console.log(\"wasteNum\",wasteNum)\n\n    const sales = salesNum === \"\" || salesNum === undefined ? 0: salesNum;\n    const weight = weightNum === \"\" || weightNum === undefined ? 0: weightNum;\n    const waste = wasteNum === \"\" || wasteNum === undefined ? 0: wasteNum;\n\n    const weightAsWaste = (parseFloat(sales) * parseFloat(weight) * parseFloat(waste))/ 100\n    return (weightAsWaste).toFixed(2);\n}\n\nconst getWastePerSales = (salesNum, weightNum, wasteNum) => {\n\n    // console.log(\"salesNum\",salesNum)\n    // console.log(\"weightNum\",weightNum)\n    // console.log(\"wasteNum\",wasteNum)\n\n    const sales = salesNum === \"\" || salesNum === undefined ? 0: salesNum;\n    const weight = weightNum === \"\" || weightNum === undefined  ? 0: weightNum;\n    const waste = wasteNum === \"\" || wasteNum === undefined ? 0: wasteNum;\n\n    const weightAsWaste = (parseFloat(sales) * parseFloat(weight) * parseFloat(waste))/ 100\n\n    if (weightAsWaste === 0 && parseFloat(sales) === 0) {\n        return 0;\n    } else {\n        const result = weightAsWaste / parseFloat(sales);\n        return result.toFixed(2)\n    }\n}\n\nexport default function CoverInputs(props) {\n\n    const {\n        dailyMenuInputs,\n        siteName,\n        companyName,\n        id,\n        filterOutEmptyObjects,\n        filterMenuItems,\n        firstDayOfTheWeek,\n        updateDailySalesVsWasteInput,\n        index\n    } = useContext(DailySalesVsWasteContext);\n\n\n    const [displays, setDisplays] = useState([]);\n    const [site, setSite] = useState([]);\n    const [date, setDate] = useState([]);\n\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    const [pageNumber, setPageNumber] = useState(0);\n\n    useEffect(() => {\n        setDisplays(dailyMenuInputs)\n        const formatedSiteName = formatSiteName(siteName)\n        setSite(formatedSiteName)\n\n        // console.log(\"props\",props)\n\n        if (date.length === 0) {\n            let formatedDate = moment().format('MMM DD YYYY');\n            setDate(formatedDate);\n        }\n\n        setIsSubmitting(false)\n\n    }, [props, dailyMenuInputs]);\n\n    const handleSubmit = (e) => {\n        // console.log(\"e\",e)\n        e.preventDefault();\n        // console.log(\"displays\",displays);\n        // let date = new Date()\n        const formatedDate = formatDateToDatabaseDateFormat(date)\n        // console.log(\"formatedDate\",formatedDate)\n\n        const addDateToObject = displays.map((data) => {\n             return Object.assign(data, {date: formatedDate});\n        })\n\n        // console.log(\"addDateToObject\",addDateToObject)\n        const removeEmptyFields = filterOutEmptyObjects(addDateToObject)\n        // console.log(\"removeEmptyFields\",removeEmptyFields)\n\n        let objectReturnedToDB;\n\n        if (removeEmptyFields.length === 0) {\n            objectReturnedToDB = [{\n                \"menuItem\": \"\",\n                \"sales\": 0,\n                \"wastePerCent\": 0,\n                \"weightPerItem\": 0,\n                \"date\": formatedDate\n            }]\n        } else {\n            objectReturnedToDB = removeEmptyFields\n        }\n\n        // console.log(\"removeEmptyFields\",removeEmptyFields);\n        // console.log(\"objectReturnedToDB\",objectReturnedToDB);\n\n        addMenuInput(objectReturnedToDB, siteName, companyName, id).then(() => {\n\n           console.log(\"pageNumber\",pageNumber);\n\n           updateDailySalesVsWasteInput(props.companyID, props.companyName, props.selectedSiteValueID, pageNumber)\n        }).then(() => {\n            // console.log(\"pageNumber\",pageNumber);\n            // let formatedDate = moment().format('MMM DD YYYY');\n            // setDate(formatedDate);\n            const newDate = addDaysToDate(firstDayOfTheWeek, pageNumber);\n            setDate(newDate);\n        })\n        setIsSubmitting(true)\n    }\n\n    const handleAddFields = () => {\n        if (displays.length <= 20) {\n            setDisplays([...displays,\n                {\n                    weightPerItem: 0, menuItem: \"menu item\", sales: 0, wastePerCent: 0\n                },\n            ])\n        }\n    };\n\n    const handleChangeInput = (id, event) => {\n        // console.log(\"id\", id)\n        // console.log(\"event\", event)\n\n        const newInputFields =\n        displays.map((data, i)=> {\n            if(id === i) {\n                // console.log(\"data[event.target.name]\",data[event.target.name])\n                // console.log(\"event.target.value\",event.target.value)\n\n                data[event.target.name] = event.target.value\n            }\n            return data;\n        })\n\n        // console.log(\"newInputFields\",newInputFields)\n        setDisplays(newInputFields);\n    }\n\n    const deleteItem = (data, id) => {\n        // console.log(\"id\",id)\n        // console.log(\"displays\",displays);\n        const values  = [...displays];\n        values.splice(id, 1);\n        // console.log(\"values\",values)\n        setDisplays(values)\n    }\n\n    const changePage = ({ selected }) => {\n        // console.log(\"selected\", selected)\n        //this gives page number starting from 0\n        setPageNumber(selected);\n        filterMenuItems(selected);\n\n        const newDate = addDaysToDate(firstDayOfTheWeek, selected);\n        console.log(\"newDate\",newDate);\n        setDate(newDate)\n    };\n\n  return (\n\n    <>\n\n    <div className=\"DailySalesVsWasteReport applyBlueTuckGreen\">\n\n\n        <div\n        className=\"DailySalesVsWasteReport__spacing\"\n        >\n\n            <div className=\"DailySalesVsWasteReport__heading\">\n                <div\n                className=\"DailySalesVsWasteReport__label\"\n                >\n                    <div className=\"applyPurpleColor cooperHewittBold\">{site}</div>\n                    <div className=\"section-title\">Top Daily Sales</div>\n                    <div className=\"applyPurpleColor cooperHewittBold\">{date}</div>\n                </div>\n                <div>\n                    <IconButton\n                        onClick={handleAddFields}\n                        >\n                        <AddIcon />\n                    </IconButton>\n                </div>\n            </div>\n\n            <div\n            className=\"DailySalesVsWasteReport__tableLayout\"\n\n            >\n\n                <div>Top 10 or 20 sales</div>\n                <div>Sales</div>\n                <div>Weight Kg</div>\n                <div>Waste %</div>\n                <div>(Weight)</div>\n                <div>Waste per sales</div>\n                <div style={{marginLeft: \"2rem\"}}></div>\n\n\n            </div>\n\n            <div\n            className=\"DailySalesVsWasteReport__tableLayout\"\n            >\n\n                <form style={{\n                    width: \"100%\"\n                }}>\n\n                    {displays.map((data, id) => {\n                        return (\n                            <div\n                                className=\"DailySalesVsWasteReport__inputLayout\"\n                            >\n                                <div style={{display: \"flex\"}}>\n                                    <input\n                                        placeholder={data.menuItem}\n                                        name=\"menuItem\"\n                                        onChange={event => handleChangeInput(id, event)}\n                                        type=\"text\"\n                                        onKeyDown={(evt) => [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"].includes(evt.key) && evt.preventDefault()}\n                                    />\n                                    <input\n                                        placeholder={data.sales}\n                                        name=\"sales\"\n                                        onChange={event => handleChangeInput(id, event)}\n                                        type=\"number\"\n                                        onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n                                    />\n                                    <input\n                                        placeholder={data.weightPerItem}\n                                        name=\"weightPerItem\"\n                                        onChange={event => handleChangeInput(id, event)}\n                                        type=\"number\"\n                                        onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n                                    />\n                                    <input\n                                        placeholder={data.wastePerCent}\n                                        name=\"wastePerCent\"\n                                        onChange={event => handleChangeInput(id, event)}\n                                        type=\"number\"\n                                        onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n                                    />\n                                </div>\n                                <div\n                                className=\"DailySalesVsWasteReport__autoCalculator\"\n\n                                >( {getWeight(data.sales, data.weightPerItem, data.wastePerCent)} ) Kg</div>\n                                <div\n                                className=\"DailySalesVsWasteReport__autoCalculator\"\n\n                                > {getWastePerSales(data.sales, data.weightPerItem, data.wastePerCent)} </div>\n                                <div style={{marginLeft: \"2rem\", fontFamily: \"CooperHewitt-Bold\", cursor: \"pointer\"}} onClick={()=> deleteItem(data, id)}>Delete</div>\n                            </div>\n                        )\n                    })}\n\n                    <div\n                        className=\"DailySalesVsWasteReport__buttonLayout\"\n                    >\n                        <button\n                            onClick={event => handleSubmit(event)}\n                        >\n                            {isSubmitting ? \"Submitted\" : \"Submit\"}\n                        </button>\n                    </div>\n\n                </form>\n\n            </div>\n        </div>\n\n    </div>\n\n    <Pagination index={index} onPageChange={changePage} pageCount={7} />\n    </>\n\n  );\n}"]},"metadata":{},"sourceType":"module"}