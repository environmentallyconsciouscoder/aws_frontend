{"ast":null,"code":"import { useState } from 'react';\nimport { setItemInLocalStorage } from \"../../../utilities.js\";\n\nconst Switches = () => {\n  const initialStateForShowTotalWasteChart = JSON.parse(localStorage.getItem('showTotalWasteChart')) || false;\n  const [showTotalWasteChart, setShowTotalWasteChart] = useState(initialStateForShowTotalWasteChart);\n  const initialStateForShowFoodWasteTargetSavings = JSON.parse(localStorage.getItem('showFoodWasteTargetSavings')) || false;\n  const [foodWasteTargetSavings, setFoodWasteTargetSavings] = useState(initialStateForShowFoodWasteTargetSavings);\n  const initialStateForShowAiPredictions = JSON.parse(localStorage.getItem('showAiPredictions')) || false;\n  const [aiPredictions, setAiPredictions] = useState(initialStateForShowAiPredictions);\n  const initialStateForShowWastePerCover = JSON.parse(localStorage.getItem('showWastePerCover')) || false;\n  const [wastePerCover, setWastePerCover] = useState(initialStateForShowWastePerCover);\n  const initialStateForShowWastePerSales = JSON.parse(localStorage.getItem('showWastePerSales')) || false;\n  const [wastePerSales, setWastePerSales] = useState(initialStateForShowWastePerSales);\n  const initialStateForShowWeeklyTrendChart = JSON.parse(localStorage.getItem('showWeeklyTrendChart')) || false;\n  const [showWeeklyTrendChart, setShowWeeklyTrendChart] = useState(initialStateForShowWeeklyTrendChart);\n  const initialStateForShowHourlyChartSwitch = JSON.parse(localStorage.getItem('hourlyChartSwitch')) || false;\n  const [showHourlyChart, setShowHourlyChart] = useState(initialStateForShowHourlyChartSwitch);\n  const initialStateForShowDailyChartSwitch = JSON.parse(localStorage.getItem('dailyChartSwitch')) || false;\n  const [showDailyChart, setShowDailyChart] = useState(initialStateForShowDailyChartSwitch);\n  const initialStateForShowWeeklyChartSwitch = JSON.parse(localStorage.getItem('weeklyChartSwitch')) || false;\n  const [showWeeklyChart, setShowWeeklyChart] = useState(initialStateForShowWeeklyChartSwitch);\n  const initialStateForShowMonthlyChartSwitch = JSON.parse(localStorage.getItem('monthlyChartSwitch')) || false;\n  const [showMonthlyChart, setShowMonthlyChart] = useState(initialStateForShowMonthlyChartSwitch);\n  const initialStateForWasteOnADayOfTheWeek = JSON.parse(localStorage.getItem('wasteOnAdayOfTheWeek')) || false;\n  const [showWasteOnAdayOfTheWeek, setShowWasteOnAdayOfTheWeek] = useState(initialStateForWasteOnADayOfTheWeek);\n  const initialStateForDailySalesVsWasteReport = JSON.parse(localStorage.getItem('dailySalesVsWasteReport')) || false;\n  const [showDailySalesVsWasteReport, setShowDailySalesVsWasteReport] = useState(initialStateForDailySalesVsWasteReport);\n  const initialStateForEventProductionWasteReport = JSON.parse(localStorage.getItem('eventProductionWaste')) || false;\n  const [showEventProductionWaste, setShowEventProductionWaste] = useState(initialStateForEventProductionWasteReport);\n  const initialStateForGroup = JSON.parse(localStorage.getItem('group')) || false;\n  const [showGroup, setShowGroup] = useState(initialStateForGroup);\n  const initialStateForGroupOne = JSON.parse(localStorage.getItem('groupOne')) || false;\n  const [showGroupOne, setShowGroupOne] = useState(initialStateForGroupOne);\n  const initialStateForGroupTwo = JSON.parse(localStorage.getItem('groupTwo')) || false;\n  const [showGroupTwo, setShowGroupTwo] = useState(initialStateForGroupTwo);\n  const initialStateForGroupThree = JSON.parse(localStorage.getItem('groupThree')) || false;\n  const [showGroupThree, setShowGroupThree] = useState(initialStateForGroupThree);\n\n  const handleChangeForCheckedAndAccordion = (value, checkedObject) => {\n    if (checkedObject === \"hourlyChartSwitch\") {\n      setShowHourlyChart(value);\n      setItemInLocalStorage(\"hourlyChartSwitch\", value);\n    } else if (checkedObject === \"dailyChartSwitch\") {\n      setShowDailyChart(value);\n      setItemInLocalStorage(\"dailyChartSwitch\", value);\n    } else if (checkedObject === \"weeklyChartSwitch\") {\n      setShowWeeklyChart(value);\n      setItemInLocalStorage(\"weeklyChartSwitch\", value);\n    } else if (checkedObject === \"monthlyChartSwitch\") {\n      setShowMonthlyChart(value);\n      setItemInLocalStorage(\"monthlyChartSwitch\", value);\n    }\n  }; ///HANDLE THE TOGGLE IN DISPLAY-SETTINGS:\n\n\n  const initialStateForSwitches = JSON.parse(localStorage.getItem('switches')) || {\n    hourlyChartSwitch: false,\n    dailyChartSwitch: false,\n    weeklyChartSwitch: false,\n    monthlyChartSwitch: false,\n    wastePerSalesSwitch: false,\n    wastePerCoverSwitch: false,\n    aiPredictionSwitch: false,\n    foodWasteTargetSwitch: false,\n    totalSiteWasteSwitch: false,\n    weeklyWasteTrendSwitch: false,\n    wasteOnAdayOfTheWeekSwitch: false,\n    dailySalesVsWasteReportSwitch: false,\n    eventProductionWasteSwitch: false,\n    group: false,\n    groupOne: false,\n    groupTwo: false,\n    groupThree: false\n  };\n  const [checked, setChecked] = useState(initialStateForSwitches);\n\n  const handleChange = event => {\n    // console.log(\"event.target.name\",event.target.name)\n    setChecked({ ...checked,\n      [event.target.name]: event.target.checked\n    });\n    setItemInLocalStorage(\"switches\", { ...checked,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return {\n    showHourlyChart,\n    showDailyChart,\n    showWeeklyChart,\n    showMonthlyChart,\n    setShowHourlyChart,\n    setShowDailyChart,\n    setShowWeeklyChart,\n    setShowMonthlyChart,\n    showTotalWasteChart,\n    setShowTotalWasteChart,\n    foodWasteTargetSavings,\n    setFoodWasteTargetSavings,\n    aiPredictions,\n    setAiPredictions,\n    wastePerCover,\n    setWastePerCover,\n    wastePerSales,\n    setWastePerSales,\n    showWeeklyTrendChart,\n    setShowWeeklyTrendChart,\n    showWasteOnAdayOfTheWeek,\n    setShowWasteOnAdayOfTheWeek,\n    showDailySalesVsWasteReport,\n    setShowDailySalesVsWasteReport,\n    checked,\n    handleChange,\n    handleChangeForCheckedAndAccordion,\n    showEventProductionWaste,\n    setShowEventProductionWaste,\n    showGroup,\n    setShowGroup,\n    showGroupOne,\n    setShowGroupOne,\n    showGroupTwo,\n    setShowGroupTwo,\n    showGroupThree,\n    setShowGroupThree\n  };\n};\n\nexport default Switches;","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/libs/use-switches.js"],"names":["useState","setItemInLocalStorage","Switches","initialStateForShowTotalWasteChart","JSON","parse","localStorage","getItem","showTotalWasteChart","setShowTotalWasteChart","initialStateForShowFoodWasteTargetSavings","foodWasteTargetSavings","setFoodWasteTargetSavings","initialStateForShowAiPredictions","aiPredictions","setAiPredictions","initialStateForShowWastePerCover","wastePerCover","setWastePerCover","initialStateForShowWastePerSales","wastePerSales","setWastePerSales","initialStateForShowWeeklyTrendChart","showWeeklyTrendChart","setShowWeeklyTrendChart","initialStateForShowHourlyChartSwitch","showHourlyChart","setShowHourlyChart","initialStateForShowDailyChartSwitch","showDailyChart","setShowDailyChart","initialStateForShowWeeklyChartSwitch","showWeeklyChart","setShowWeeklyChart","initialStateForShowMonthlyChartSwitch","showMonthlyChart","setShowMonthlyChart","initialStateForWasteOnADayOfTheWeek","showWasteOnAdayOfTheWeek","setShowWasteOnAdayOfTheWeek","initialStateForDailySalesVsWasteReport","showDailySalesVsWasteReport","setShowDailySalesVsWasteReport","initialStateForEventProductionWasteReport","showEventProductionWaste","setShowEventProductionWaste","initialStateForGroup","showGroup","setShowGroup","initialStateForGroupOne","showGroupOne","setShowGroupOne","initialStateForGroupTwo","showGroupTwo","setShowGroupTwo","initialStateForGroupThree","showGroupThree","setShowGroupThree","handleChangeForCheckedAndAccordion","value","checkedObject","initialStateForSwitches","hourlyChartSwitch","dailyChartSwitch","weeklyChartSwitch","monthlyChartSwitch","wastePerSalesSwitch","wastePerCoverSwitch","aiPredictionSwitch","foodWasteTargetSwitch","totalSiteWasteSwitch","weeklyWasteTrendSwitch","wasteOnAdayOfTheWeekSwitch","dailySalesVsWasteReportSwitch","eventProductionWasteSwitch","group","groupOne","groupTwo","groupThree","checked","setChecked","handleChange","event","target","name"],"mappings":"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","sourcesContent":["\n\nimport {useState} from 'react'\n\nimport {\n  setItemInLocalStorage,\n} from \"../../../utilities.js\"\n\nconst Switches = () => {\n\n  const initialStateForShowTotalWasteChart = JSON.parse(localStorage.getItem('showTotalWasteChart')) || false\n  const [showTotalWasteChart, setShowTotalWasteChart] = useState(initialStateForShowTotalWasteChart);\n\n  const initialStateForShowFoodWasteTargetSavings = JSON.parse(localStorage.getItem('showFoodWasteTargetSavings')) || false\n  const [foodWasteTargetSavings, setFoodWasteTargetSavings] = useState(initialStateForShowFoodWasteTargetSavings);\n\n  const initialStateForShowAiPredictions = JSON.parse(localStorage.getItem('showAiPredictions')) || false\n  const [aiPredictions, setAiPredictions] = useState(initialStateForShowAiPredictions);\n\n  const initialStateForShowWastePerCover = JSON.parse(localStorage.getItem('showWastePerCover')) || false\n  const [wastePerCover, setWastePerCover] = useState(initialStateForShowWastePerCover);\n\n  const initialStateForShowWastePerSales = JSON.parse(localStorage.getItem('showWastePerSales')) || false\n  const [wastePerSales, setWastePerSales] = useState(initialStateForShowWastePerSales);\n\n  const initialStateForShowWeeklyTrendChart = JSON.parse(localStorage.getItem('showWeeklyTrendChart')) || false\n  const [showWeeklyTrendChart, setShowWeeklyTrendChart] = useState(initialStateForShowWeeklyTrendChart);\n\n  const initialStateForShowHourlyChartSwitch = JSON.parse(localStorage.getItem('hourlyChartSwitch')) || false\n  const [showHourlyChart, setShowHourlyChart] = useState(initialStateForShowHourlyChartSwitch);\n\n  const initialStateForShowDailyChartSwitch = JSON.parse(localStorage.getItem('dailyChartSwitch')) || false\n  const [showDailyChart, setShowDailyChart] = useState(initialStateForShowDailyChartSwitch);\n\n  const initialStateForShowWeeklyChartSwitch = JSON.parse(localStorage.getItem('weeklyChartSwitch')) || false\n  const [showWeeklyChart, setShowWeeklyChart] = useState(initialStateForShowWeeklyChartSwitch);\n\n  const initialStateForShowMonthlyChartSwitch = JSON.parse(localStorage.getItem('monthlyChartSwitch')) || false\n  const [showMonthlyChart, setShowMonthlyChart] = useState(initialStateForShowMonthlyChartSwitch);\n\n  const initialStateForWasteOnADayOfTheWeek = JSON.parse(localStorage.getItem('wasteOnAdayOfTheWeek')) || false\n  const [showWasteOnAdayOfTheWeek, setShowWasteOnAdayOfTheWeek] = useState(initialStateForWasteOnADayOfTheWeek);\n\n  const initialStateForDailySalesVsWasteReport = JSON.parse(localStorage.getItem('dailySalesVsWasteReport')) || false\n  const [showDailySalesVsWasteReport, setShowDailySalesVsWasteReport] = useState(initialStateForDailySalesVsWasteReport);\n\n  const initialStateForEventProductionWasteReport = JSON.parse(localStorage.getItem('eventProductionWaste')) || false\n  const [showEventProductionWaste, setShowEventProductionWaste] = useState(initialStateForEventProductionWasteReport);\n\n  const initialStateForGroup = JSON.parse(localStorage.getItem('group')) || false\n  const [showGroup, setShowGroup] = useState(initialStateForGroup);\n\n  const initialStateForGroupOne = JSON.parse(localStorage.getItem('groupOne')) || false\n  const [showGroupOne, setShowGroupOne] = useState(initialStateForGroupOne);\n\n  const initialStateForGroupTwo = JSON.parse(localStorage.getItem('groupTwo')) || false\n  const [showGroupTwo, setShowGroupTwo] = useState(initialStateForGroupTwo);\n\n  const initialStateForGroupThree = JSON.parse(localStorage.getItem('groupThree')) || false\n  const [showGroupThree, setShowGroupThree] = useState(initialStateForGroupThree);\n\n  const handleChangeForCheckedAndAccordion = (value, checkedObject) => {\n\n    if (checkedObject === \"hourlyChartSwitch\") {\n      setShowHourlyChart(value)\n      setItemInLocalStorage(\"hourlyChartSwitch\",value)\n    } else if ( checkedObject === \"dailyChartSwitch\") {\n      setShowDailyChart(value)\n      setItemInLocalStorage(\"dailyChartSwitch\",value)\n    } else if ( checkedObject === \"weeklyChartSwitch\") {\n      setShowWeeklyChart(value)\n      setItemInLocalStorage(\"weeklyChartSwitch\",value)\n    } else if ( checkedObject === \"monthlyChartSwitch\") {\n      setShowMonthlyChart(value)\n      setItemInLocalStorage(\"monthlyChartSwitch\",value)\n    }\n  }\n\n\n  ///HANDLE THE TOGGLE IN DISPLAY-SETTINGS:\n\n  const initialStateForSwitches = JSON.parse(localStorage.getItem('switches')) || {\n    hourlyChartSwitch: false,\n    dailyChartSwitch: false,\n    weeklyChartSwitch: false,\n    monthlyChartSwitch: false,\n    wastePerSalesSwitch: false,\n    wastePerCoverSwitch: false,\n    aiPredictionSwitch: false,\n    foodWasteTargetSwitch: false,\n    totalSiteWasteSwitch: false,\n    weeklyWasteTrendSwitch: false,\n    wasteOnAdayOfTheWeekSwitch: false,\n    dailySalesVsWasteReportSwitch: false,\n    eventProductionWasteSwitch: false,\n    group: false,\n    groupOne: false,\n    groupTwo: false,\n    groupThree: false\n  };\n\n  const [checked, setChecked] = useState(initialStateForSwitches);\n\n  const handleChange = (event) => {\n    // console.log(\"event.target.name\",event.target.name)\n    setChecked({ ...checked, [event.target.name]: event.target.checked });\n    setItemInLocalStorage(\"switches\", { ...checked, [event.target.name]: event.target.checked })\n  };\n\n\n    return {\n\n      showHourlyChart,\n      showDailyChart,\n      showWeeklyChart,\n      showMonthlyChart,\n      setShowHourlyChart,\n      setShowDailyChart,\n      setShowWeeklyChart,\n      setShowMonthlyChart,\n\n      showTotalWasteChart,\n      setShowTotalWasteChart,\n\n      foodWasteTargetSavings,\n      setFoodWasteTargetSavings,\n\n      aiPredictions,\n      setAiPredictions,\n\n      wastePerCover,\n      setWastePerCover,\n\n      wastePerSales,\n      setWastePerSales,\n\n      showWeeklyTrendChart,\n      setShowWeeklyTrendChart,\n\n      showWasteOnAdayOfTheWeek,\n      setShowWasteOnAdayOfTheWeek,\n\n      showDailySalesVsWasteReport,\n      setShowDailySalesVsWasteReport,\n\n      checked,\n      handleChange,\n      handleChangeForCheckedAndAccordion,\n\n      showEventProductionWaste,\n      setShowEventProductionWaste,\n\n      showGroup,\n      setShowGroup,\n      showGroupOne,\n      setShowGroupOne,\n      showGroupTwo,\n      setShowGroupTwo,\n      showGroupThree,\n      setShowGroupThree\n    }\n\n}\n\nexport default Switches\n"]},"metadata":{},"sourceType":"module"}