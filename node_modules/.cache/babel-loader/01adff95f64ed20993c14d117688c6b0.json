{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/contexts/id-customer-waste-context.js\";\nimport React, { createContext, useEffect, useState } from 'react';\nimport { getIdCustomerWaste } from \"../api\";\nimport { reducer } from \"./../helper.js\";\nexport const IdCustomerWasteContext = createContext();\n\nconst IdCustomerWasteProvider = props => {\n  const [xaxis, setXaxis] = useState([]);\n  const [yaxis, setYaxis] = useState([]);\n  const [eventName, setEventName] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [sum, setSum] = useState(\"\");\n  const [index, setIndex] = useState(\"\");\n  useEffect(() => {\n    if (props.siteName, props.companyName, props.companyId) {\n      callIdCustomerWasteAPI(props.companyId, props.companyName, props.siteName, 0);\n    }\n\n    ;\n  }, [props.siteName, props.companyName, props.companyId]);\n\n  const callIdCustomerWasteAPI = (companyNumber, companyName, siteName, selected) => {\n    getIdCustomerWaste(companyNumber, companyName, siteName, selected).then(data => {\n      console.log(\"callIdCustomerWasteAPI\", data);\n      setXaxis(data.xaxis);\n      setYaxis(data.yaxis);\n      setEventName(data.eventName);\n      setDate(data.date);\n      setIndex(data.numberOfIndex);\n      const total = data.yaxis.reduce(reducer);\n      setSum(parseInt(total));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(IdCustomerWasteContext.Provider, {\n    value: {\n      xaxis,\n      yaxis,\n      eventName,\n      date,\n      sum,\n      index\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default IdCustomerWasteProvider;","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/contexts/id-customer-waste-context.js"],"names":["React","createContext","useEffect","useState","getIdCustomerWaste","reducer","IdCustomerWasteContext","IdCustomerWasteProvider","props","xaxis","setXaxis","yaxis","setYaxis","eventName","setEventName","date","setDate","sum","setSum","index","setIndex","siteName","companyName","companyId","callIdCustomerWasteAPI","companyNumber","selected","then","data","console","log","numberOfIndex","total","reduce","parseInt","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAAyD,OAAzD;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,OAAO,MAAMC,sBAAsB,GAAGL,aAAa,EAA5C;;AAEP,MAAMM,uBAAuB,GAAGC,KAAK,IAAI;AAErC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AAEFD,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAIM,KAAK,CAACa,QAAN,EAAgBb,KAAK,CAACc,WAAtB,EAAmCd,KAAK,CAACe,SAA7C,EAAwD;AACpDC,MAAAA,sBAAsB,CAAChB,KAAK,CAACe,SAAP,EAAkBf,KAAK,CAACc,WAAxB,EAAqCd,KAAK,CAACa,QAA3C,EAAqD,CAArD,CAAtB;AACH;;AAAA;AACF,GALQ,EAKN,CAAEb,KAAK,CAACa,QAAR,EAAkBb,KAAK,CAACc,WAAxB,EAAqCd,KAAK,CAACe,SAA3C,CALM,CAAT;;AAOA,QAAMC,sBAAsB,GAAI,CAACC,aAAD,EAAgBH,WAAhB,EAA6BD,QAA7B,EAAuCK,QAAvC,KAAoD;AAClFtB,IAAAA,kBAAkB,CAACqB,aAAD,EAAgBH,WAAhB,EAA6BD,QAA7B,EAAuCK,QAAvC,CAAlB,CAAmEC,IAAnE,CAAyEC,IAAD,IAAU;AAC9EC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqCF,IAArC;AACAlB,MAAAA,QAAQ,CAACkB,IAAI,CAACnB,KAAN,CAAR;AACAG,MAAAA,QAAQ,CAACgB,IAAI,CAACjB,KAAN,CAAR;AACAG,MAAAA,YAAY,CAACc,IAAI,CAACf,SAAN,CAAZ;AACAG,MAAAA,OAAO,CAACY,IAAI,CAACb,IAAN,CAAP;AACAK,MAAAA,QAAQ,CAACQ,IAAI,CAACG,aAAN,CAAR;AAEA,YAAMC,KAAK,GAAGJ,IAAI,CAACjB,KAAL,CAAWsB,MAAX,CAAkB5B,OAAlB,CAAd;AACAa,MAAAA,MAAM,CAACgB,QAAQ,CAACF,KAAD,CAAT,CAAN;AACH,KAVD;AAWD,GAZD;;AAcA,sBACE,oBAAC,sBAAD,CAAwB,QAAxB;AACE,IAAA,KAAK,EAAE;AACLvB,MAAAA,KADK;AAELE,MAAAA,KAFK;AAGLE,MAAAA,SAHK;AAILE,MAAAA,IAJK;AAKLE,MAAAA,GALK;AAMLE,MAAAA;AANK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGX,KAAK,CAAC2B,QAVT,CADF;AAcD,CA5CD;;AA8CA,eAAe5B,uBAAf","sourcesContent":["import React, { createContext, useEffect, useState} from 'react'\nimport { getIdCustomerWaste } from \"../api\";\nimport { reducer } from \"./../helper.js\"\n\nexport const IdCustomerWasteContext = createContext()\n\nconst IdCustomerWasteProvider = props => {\n\n    const [xaxis, setXaxis] = useState([])\n    const [yaxis, setYaxis] = useState([])\n    const [eventName, setEventName] = useState(\"\")\n    const [date, setDate] = useState(\"\")\n    const [sum, setSum] = useState(\"\")\n    const [index, setIndex] = useState(\"\")\n\n  useEffect(() => {\n\n    if (props.siteName, props.companyName, props.companyId) {\n        callIdCustomerWasteAPI(props.companyId, props.companyName, props.siteName, 0)\n    };\n  }, [ props.siteName, props.companyName, props.companyId]);\n\n  const callIdCustomerWasteAPI = ((companyNumber, companyName, siteName, selected) => {\n    getIdCustomerWaste(companyNumber, companyName, siteName, selected).then((data) => {\n        console.log(\"callIdCustomerWasteAPI\",data);\n        setXaxis(data.xaxis)\n        setYaxis(data.yaxis)\n        setEventName(data.eventName)\n        setDate(data.date)\n        setIndex(data.numberOfIndex)\n\n        const total = data.yaxis.reduce(reducer)\n        setSum(parseInt(total));\n    });\n  });\n\n  return (\n    <IdCustomerWasteContext.Provider\n      value={{\n        xaxis,\n        yaxis,\n        eventName,\n        date,\n        sum,\n        index\n      }}\n    >\n      {props.children}\n    </IdCustomerWasteContext.Provider>\n  )\n}\n\nexport default IdCustomerWasteProvider"]},"metadata":{},"sourceType":"module"}