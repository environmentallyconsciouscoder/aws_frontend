{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/user-inputs/sales-inputs.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { weeklyDateFormat, getCurrentWeek } from \"../../../../helper\";\nimport { InputsContext } from \"../../../../contexts/inputs-context\";\nimport Pagination from \"./../reuseable-components/pagination/pagination.js\";\nexport default function SalesInputs(props) {\n  const {\n    selectedSiteValueID,\n    thisWeekSalesInputs,\n    sendDataToDatabase,\n    companyName,\n    companyID,\n    allWeekSalesInput,\n    filterMenuItems\n  } = useContext(InputsContext);\n  const {\n    handleSubmit\n  } = useForm();\n  const defaultValues = [{\n    day: \"Monday\",\n    value: 0,\n    require: false\n  }, {\n    day: \"Tuesday\",\n    value: 0,\n    require: false\n  }, {\n    day: \"Wednesday\",\n    value: 0,\n    require: false\n  }, {\n    day: \"Thursday\",\n    value: 0,\n    require: false\n  }, {\n    day: \"Friday\",\n    value: 0,\n    require: false\n  }, {\n    day: \"Saturday\",\n    value: 0,\n    require: false\n  }, {\n    day: \"Sunday\",\n    value: 0,\n    require: false\n  }];\n  const [sales, setSales] = useState(defaultValues);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [pageCount, setPageCount] = useState(7);\n  const [date, setDate] = useState(7);\n  const [firstDateOfTheWeek, setFirstDateOfTheWeek] = useState(7);\n  const [weekOfYear, setWeekOfYear] = useState(7);\n  useEffect(() => {\n    if (thisWeekSalesInputs !== undefined) {\n      // const pageIndex = getCurrentWeek()\n      // setIndex(pageIndex);\n      setFirstDateOfTheWeek(thisWeekSalesInputs.Date);\n      setWeekOfYear(thisWeekSalesInputs.weekOfYear);\n      const date = weeklyDateFormat(thisWeekSalesInputs.Date);\n      setDate(date);\n      setPageCount(allWeekSalesInput.length);\n      let newArray = [];\n      thisWeekSalesInputs.salesInput.map((data, index) => {\n        sales[index].value = data;\n        newArray.push(sales[index]);\n        return \"\";\n      });\n      setSales(newArray);\n    }\n\n    let numberOfDates;\n    let today = new Date().getDay();\n\n    if (today === 0) {\n      numberOfDates = 7;\n    } else {\n      numberOfDates = today;\n    }\n\n    for (let i = 0; i < numberOfDates; i++) {\n      if (sales[i].value === 0) {\n        sales[i].require = true;\n        setSales([...sales]);\n      } else {\n        sales[i].require = false;\n        setSales([...sales]);\n      }\n    }\n\n    setIsSubmitting(props.isSubmitting); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props, thisWeekSalesInputs]);\n\n  const onSubmit = () => {\n    setIsSubmitting(true); // console.log(\"firstDateOfTheWeek\",firstDateOfTheWeek)\n    // console.log(\"weekOfYear\",weekOfYear)\n\n    const confirmedSales = sales.map(data => {\n      return parseInt(data.value);\n    });\n    const params = {\n      companyId: companyID,\n      companyName: companyName,\n      siteName: selectedSiteValueID,\n      covers: confirmedSales,\n      firstDateOfTheWeek: firstDateOfTheWeek,\n      weekOfYear: weekOfYear\n    }; // console.log(\"params\",params)\n\n    sendDataToDatabase(\"SALES INPUTS\", params);\n    props.history.push('/dashboard');\n  };\n\n  const handleChange = e => {\n    let newArray = [];\n    sales.map(item => {\n      if (item.day === e.target.name) {\n        item.value = e.target.value;\n        newArray.push(item);\n      } else {\n        newArray.push(item);\n      }\n\n      return \"\";\n    });\n    setSales(newArray);\n    return \"\";\n  };\n\n  const changePage = ({\n    selected\n  }) => {\n    // console.log(\"selected\", selected)\n    filterMenuItems(selected, \"sales-inputs\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputs__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputs__row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputs__column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputs__wrapperForLabels\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"report-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }, props.selectedSiteValueID.replace(/[^A-Za-z]+/g, '').toLowerCase()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }, \"Input Daily Sales Food\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyBlueTuckGreen cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 19\n    }\n  }, \"WEEK \", date)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputs__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputs__labels\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, sales.map((data, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"applyBlueTuckGreen applyCooperHewittBold\",\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 23\n      }\n    }, data.day);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"applyBlueTuckGreen applyCooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, \"Sales\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, sales.map((data, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"number\",\n      id: i,\n      name: data.day,\n      onChange: handleChange // placeholder={data.value}\n      ,\n      value: data.value,\n      required: data.require,\n      onKeyDown: evt => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 29\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }, isSubmitting ? \"Submitted\" : \"Submit\")))))), /*#__PURE__*/React.createElement(Pagination, {\n    index: getCurrentWeek(),\n    onPageChange: changePage,\n    pageCount: pageCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/user-inputs/sales-inputs.js"],"names":["React","useState","useEffect","useContext","useForm","weeklyDateFormat","getCurrentWeek","InputsContext","Pagination","SalesInputs","props","selectedSiteValueID","thisWeekSalesInputs","sendDataToDatabase","companyName","companyID","allWeekSalesInput","filterMenuItems","handleSubmit","defaultValues","day","value","require","sales","setSales","isSubmitting","setIsSubmitting","pageCount","setPageCount","date","setDate","firstDateOfTheWeek","setFirstDateOfTheWeek","weekOfYear","setWeekOfYear","undefined","Date","length","newArray","salesInput","map","data","index","push","numberOfDates","today","getDay","i","onSubmit","confirmedSales","parseInt","params","companyId","siteName","covers","history","handleChange","e","item","target","name","changePage","selected","replace","toLowerCase","evt","includes","key","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nimport {\n  weeklyDateFormat,\n  getCurrentWeek\n} from \"../../../../helper\";\n\nimport { InputsContext } from \"../../../../contexts/inputs-context\";\n\nimport Pagination from \"./../reuseable-components/pagination/pagination.js\"\n\nexport default function SalesInputs(props) {\n\n  const {\n    selectedSiteValueID,\n    thisWeekSalesInputs,\n    sendDataToDatabase,\n    companyName,\n    companyID,\n    allWeekSalesInput,\n    filterMenuItems,\n   } = useContext(InputsContext);\n\n  const { handleSubmit } = useForm();\n\n  const defaultValues = [\n    {\n      day: \"Monday\",\n      value: 0,\n      require: false\n    },\n    {\n      day: \"Tuesday\",\n      value: 0,\n      require: false\n    },\n    {\n      day: \"Wednesday\",\n      value: 0,\n      require: false\n    },\n    {\n      day: \"Thursday\",\n      value: 0,\n      require: false\n    },\n    {\n      day: \"Friday\",\n      value: 0,\n      require: false\n    },\n    {\n      day: \"Saturday\",\n      value: 0,\n      require: false\n    },\n    {\n      day: \"Sunday\",\n      value: 0,\n      require: false\n    }\n  ]\n\n  const [sales, setSales] = useState(defaultValues);\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const [pageCount, setPageCount] = useState(7);\n  const [date, setDate] = useState(7);\n  const [firstDateOfTheWeek, setFirstDateOfTheWeek] = useState(7);\n  const [weekOfYear, setWeekOfYear] = useState(7);\n\n  useEffect(() => {\n\n      if (thisWeekSalesInputs !== undefined) {\n\n        // const pageIndex = getCurrentWeek()\n        // setIndex(pageIndex);\n        setFirstDateOfTheWeek(thisWeekSalesInputs.Date)\n        setWeekOfYear(thisWeekSalesInputs.weekOfYear)\n\n        const date = weeklyDateFormat(thisWeekSalesInputs.Date)\n        setDate(date)\n        setPageCount(allWeekSalesInput.length)\n\n        let newArray = [];\n        thisWeekSalesInputs.salesInput.map((data, index) => {\n          sales[index].value = data;\n          newArray.push(sales[index]);\n          return \"\"\n        });\n        setSales(newArray);\n      }\n\n      let numberOfDates;\n      let today = new Date().getDay();\n      if (today === 0) {\n        numberOfDates = 7;\n      } else {\n        numberOfDates = today;\n      }\n\n      for (let i = 0; i < numberOfDates; i++) {\n\n        if (sales[i].value === 0) {\n          sales[i].require = true;\n          setSales([...sales]);\n        } else {\n          sales[i].require = false;\n          setSales([...sales]);\n        }\n      }\n\n      setIsSubmitting(props.isSubmitting)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props, thisWeekSalesInputs]);\n\n  const onSubmit = () => {\n    setIsSubmitting(true)\n\n    // console.log(\"firstDateOfTheWeek\",firstDateOfTheWeek)\n    // console.log(\"weekOfYear\",weekOfYear)\n\n    const confirmedSales = sales.map((data) => {\n      return parseInt(data.value);\n    });\n\n    const params = {\n      companyId: companyID,\n      companyName: companyName,\n      siteName: selectedSiteValueID,\n      covers: confirmedSales,\n      firstDateOfTheWeek: firstDateOfTheWeek,\n      weekOfYear: weekOfYear\n    }\n\n    // console.log(\"params\",params)\n\n    sendDataToDatabase(\"SALES INPUTS\",params)\n\n    props.history.push('/dashboard');\n  };\n\n  const handleChange = (e) => {\n    let newArray = [];\n\n    sales.map((item) => {\n      if (item.day === e.target.name) {\n        item.value = e.target.value;\n        newArray.push(item);\n      } else {\n        newArray.push(item);\n      }\n      return \"\"\n    });\n\n    setSales(newArray);\n    return \"\"\n  };\n\n  const changePage = ({ selected }) => {\n    // console.log(\"selected\", selected)\n\n    filterMenuItems(selected, \"sales-inputs\");\n  };\n\n\n  return (\n      <>\n\n       <div className=\"inputs__container\">\n            <div className=\"inputs__row\">\n                <div className=\"inputs__column\">\n\n                <div className=\"inputs__wrapperForLabels\">\n                  <div className=\"report-subtitle\">{props.selectedSiteValueID.replace(/[^A-Za-z]+/g, '').toLowerCase()}</div>\n                  <div className=\"section-title\">Input Daily Sales Food</div>\n                  <div className=\"applyBlueTuckGreen cooperHewittBold\">WEEK {date}</div>\n                </div>\n                <div className=\"inputs__wrapper\">\n\n                <div className=\"inputs__labels\">\n                  {sales.map((data, i) => {\n                    return (\n                      <div className=\"applyBlueTuckGreen applyCooperHewittBold\" key={i}>{data.day}</div>\n                    )\n                  })}\n                </div>\n\n                  <div className=\"col-sm-12\">\n                    <h3 className=\"applyBlueTuckGreen applyCooperHewittBold\">Sales</h3>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      {sales.map((data, i) => {\n                        return (\n                          <div className=\"form-group\" key={i}>\n                            <input\n                              className=\"form-control\"\n                              type=\"number\"\n                              id={i}\n                              name={data.day}\n                              onChange={handleChange}\n                              // placeholder={data.value}\n                              value={data.value}\n                              required={data.require}\n                              onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n                            />\n                          </div>\n                        );\n                      })}\n\n                      <div className=\"button__wrapper\">\n                        <button className=\"btn btn-primary\" type=\"submit\">\n                          {isSubmitting ? \"Submitted\" : \"Submit\"}\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n                </div>\n                <Pagination index={getCurrentWeek()} onPageChange={changePage} pageCount={pageCount} />\n            </div>\n        </div>\n\n      </>\n  );\n}"]},"metadata":{},"sourceType":"module"}