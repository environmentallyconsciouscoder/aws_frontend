{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/contexts/inputs-context.js\";\nimport React, { createContext, useEffect, useState } from 'react';\nimport { addCoverInput, addSalesInput } from \"../api\";\nexport const InputsContext = createContext();\n\nconst InputsContextProvider = props => {\n  const [thisWeekCoverInputs, setThisWeekCoverInputs] = useState({\n    coversInput: [0, 0, 0, 0, 0, 0, 0],\n    checkBox: [0, 0, 0, 0, 0, 0, 0],\n    Date: \"\",\n    weekOfYear: \"\"\n  });\n  const [selectedSiteValueID, setSelectedSiteValueID] = useState(\"\");\n  const [thisWeekSalesInputs, setThisWeekSalesInputs] = useState({\n    salesInput: [0, 0, 0, 0, 0, 0, 0],\n    Date: \"\",\n    weekOfYear: \"\"\n  });\n  const [companyName, setCompanyName] = useState(\"\");\n  const [companyID, setCompanyID] = useState(\"\");\n  const [allWeekSalesInput, setAllWeekSalesInput] = useState(7);\n  const [allWeekCoverInput, setAllWeekCoverInput] = useState(7);\n  useEffect(() => {\n    setThisWeekSalesInputs(props.thisWeekSalesInput[0]);\n\n    if (props.thisWeekCoverInputs[0] !== undefined) {\n      setThisWeekCoverInputs(props.thisWeekCoverInputs[0]);\n    }\n\n    setSelectedSiteValueID(props.selectedSiteValueID);\n    setCompanyName(props.companyName);\n    setCompanyID(props.companyId);\n    setAllWeekSalesInput(props.allWeekSalesInput);\n    setAllWeekCoverInput(props.allWeekCoverInput); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.companyId, props.companyName, props.selectedSiteValueID, props.thisWeekCoverInputs, props.thisWeekSalesInput, props.allWeekSalesInput, props.allWeekCoverInput]);\n\n  const sendDataToDatabase = (type, data) => {\n    // console.log(\"sendDataToDatabase\",data)\n    switch (type) {\n      case \"COVER INPUTS\":\n        addCoverInput(data).then(() => {\n          props.updateValues(\"COVER INPUTS\");\n        });\n        break;\n\n      case \"SALES INPUTS\":\n        addSalesInput(data).then(() => {\n          props.updateValues(\"SALES INPUTS\");\n        });\n        break;\n\n      default:\n    }\n  };\n\n  const filterMenuItems = (selectedPage, type) => {\n    const menuItemsForSelectedPage = allWeekSalesInput[selectedPage];\n    const menuItemsForSelectedPageForCoverInputs = allWeekCoverInput[selectedPage]; // console.log(\"allWeekSalesInput\",allWeekSalesInput)\n    // console.log(\"selectedPage\",selectedPage)\n    // console.log(\"menuItemsForSelectedPage\",menuItemsForSelectedPage)\n\n    if (type === \"sales-inputs\") {\n      setThisWeekSalesInputs(menuItemsForSelectedPage);\n    } else if (type === \"cover-inputs\") {\n      setThisWeekCoverInputs(menuItemsForSelectedPageForCoverInputs);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(InputsContext.Provider, {\n    value: {\n      thisWeekCoverInputs,\n      selectedSiteValueID,\n      thisWeekSalesInputs,\n      sendDataToDatabase,\n      companyName,\n      companyID,\n      allWeekSalesInput,\n      allWeekCoverInput,\n      filterMenuItems\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default InputsContextProvider;","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/contexts/inputs-context.js"],"names":["React","createContext","useEffect","useState","addCoverInput","addSalesInput","InputsContext","InputsContextProvider","props","thisWeekCoverInputs","setThisWeekCoverInputs","coversInput","checkBox","Date","weekOfYear","selectedSiteValueID","setSelectedSiteValueID","thisWeekSalesInputs","setThisWeekSalesInputs","salesInput","companyName","setCompanyName","companyID","setCompanyID","allWeekSalesInput","setAllWeekSalesInput","allWeekCoverInput","setAllWeekCoverInput","thisWeekSalesInput","undefined","companyId","sendDataToDatabase","type","data","then","updateValues","filterMenuItems","selectedPage","menuItemsForSelectedPage","menuItemsForSelectedPageForCoverInputs","children"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\nimport { addCoverInput, addSalesInput } from \"../api\";\n\nexport const InputsContext = createContext()\n\nconst InputsContextProvider = props => {\n\n  const [thisWeekCoverInputs, setThisWeekCoverInputs] = useState({\n    coversInput: [0, 0, 0, 0, 0, 0, 0],\n    checkBox: [0, 0, 0, 0, 0, 0, 0],\n    Date: \"\",\n    weekOfYear: \"\"\n  });\n\n  const [selectedSiteValueID, setSelectedSiteValueID] = useState(\"\")\n\n  const [thisWeekSalesInputs, setThisWeekSalesInputs] = useState({\n    salesInput: [0, 0, 0, 0, 0, 0, 0],\n    Date: \"\",\n    weekOfYear: \"\"\n  });\n\n  const [companyName, setCompanyName] = useState(\"\")\n  const [companyID, setCompanyID] = useState(\"\")\n  const [allWeekSalesInput, setAllWeekSalesInput] = useState(7);\n  const [allWeekCoverInput, setAllWeekCoverInput] = useState(7);\n\n\n  useEffect(() => {\n    setThisWeekSalesInputs(props.thisWeekSalesInput[0])\n\n    if (props.thisWeekCoverInputs[0] !== undefined) {\n      setThisWeekCoverInputs(props.thisWeekCoverInputs[0])\n    }\n    setSelectedSiteValueID(props.selectedSiteValueID)\n\n    setCompanyName(props.companyName)\n    setCompanyID(props.companyId)\n\n    setAllWeekSalesInput(props.allWeekSalesInput)\n    setAllWeekCoverInput(props.allWeekCoverInput)\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.companyId, props.companyName, props.selectedSiteValueID, props.thisWeekCoverInputs, props.thisWeekSalesInput, props.allWeekSalesInput, props.allWeekCoverInput])\n\n  const sendDataToDatabase = (type, data) => {\n\n    // console.log(\"sendDataToDatabase\",data)\n\n    switch (type) {\n      case \"COVER INPUTS\":\n        addCoverInput(data).then(() => {\n          props.updateValues(\"COVER INPUTS\")\n        })\n        break;\n      case \"SALES INPUTS\":\n        addSalesInput(data).then(() => {\n          props.updateValues(\"SALES INPUTS\")\n        })\n        break;\n      default:\n    }\n  }\n\n  const filterMenuItems = (selectedPage, type) => {\n    const menuItemsForSelectedPage = allWeekSalesInput[selectedPage];\n    const menuItemsForSelectedPageForCoverInputs = allWeekCoverInput[selectedPage];\n\n    // console.log(\"allWeekSalesInput\",allWeekSalesInput)\n    // console.log(\"selectedPage\",selectedPage)\n    // console.log(\"menuItemsForSelectedPage\",menuItemsForSelectedPage)\n\n    if (type === \"sales-inputs\") {\n      setThisWeekSalesInputs(menuItemsForSelectedPage)\n    } else if (type === \"cover-inputs\") {\n      setThisWeekCoverInputs(menuItemsForSelectedPageForCoverInputs)\n    }\n\n  };\n\n\n  return (\n    <InputsContext.Provider\n      value={{\n        thisWeekCoverInputs,\n        selectedSiteValueID,\n        thisWeekSalesInputs,\n        sendDataToDatabase,\n        companyName,\n        companyID,\n        allWeekSalesInput,\n        allWeekCoverInput,\n        filterMenuItems,\n      }}\n    >\n      {props.children}\n    </InputsContext.Provider>\n  )\n}\n\nexport default InputsContextProvider"]},"metadata":{},"sourceType":"module"}