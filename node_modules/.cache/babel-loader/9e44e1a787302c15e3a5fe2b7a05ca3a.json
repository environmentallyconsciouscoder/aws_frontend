{"ast":null,"code":"import { useState } from \"react\";\nimport \"../../../api\";\nimport { setItemInLocalStorage, getMonthAsAnumber, getYearsArray } from \"../../../utilities.js\";\n\nconst CompanyInformation = () => {\n  const [startDate, setStartDate] = useState(\"\");\n  const [companyID, setCompanyID] = useState(\"\");\n  const [selectedSiteValueID, setSelectedValueID] = useState(\"\");\n  const [companyName, setcompanyName] = useState(\"\");\n  const [siteName, setSiteName] = useState();\n  const [carbonMunicipalValue, setCarbonMunicipalValue] = useState();\n  const [yearlyArray, setYearlyArray] = useState([{\n    year: 0,\n    show: true\n  }]);\n  const [monthlyArr, setMonthArray] = useState([{\n    month: \"JAN\",\n    index: 1,\n    show: false\n  }, {\n    month: \"FEB\",\n    index: 2,\n    show: false\n  }, {\n    month: \"MAR\",\n    index: 3,\n    show: false\n  }, {\n    month: \"APR\",\n    index: 4,\n    show: false\n  }, {\n    month: \"MAY\",\n    index: 5,\n    show: false\n  }, {\n    month: \"JUN\",\n    index: 6,\n    show: false\n  }, {\n    month: \"JUL\",\n    index: 7,\n    show: false\n  }, {\n    month: \"AUG\",\n    index: 8,\n    show: false\n  }, {\n    month: \"SEP\",\n    index: 9,\n    show: false\n  }, {\n    month: \"OCT\",\n    index: 10,\n    show: false\n  }, {\n    month: \"NOV\",\n    index: 11,\n    show: false\n  }, {\n    month: \"DEC\",\n    index: 12,\n    show: false\n  }]);\n\n  const getCurrentMonthlyAndYear = startData => {\n    // startData is YYYY-MM-DD\n    const yearlyArray = getYearsArray(startData);\n    const monthNumber = getMonthAsAnumber();\n    monthlyArr.map(data => {\n      if (data.index === parseInt(monthNumber)) {\n        data.show = true;\n        return \"\";\n      } else {\n        data.show = false;\n        return \"\";\n      }\n    }); // console.log(\"monthlyArr\",monthlyArr)\n\n    setMonthArray(monthlyArr);\n    setYearlyArray(yearlyArray);\n    setItemInLocalStorage(\"yearlyArray\", yearlyArray);\n    setItemInLocalStorage(\"monthlyArr\", monthlyArr);\n  };\n\n  return {\n    startDate,\n    setStartDate,\n    companyID,\n    setCompanyID,\n    selectedSiteValueID,\n    setSelectedValueID,\n    companyName,\n    setcompanyName,\n    getCurrentMonthlyAndYear,\n    yearlyArray,\n    monthlyArr,\n    siteName,\n    setSiteName,\n    carbonMunicipalValue,\n    setCarbonMunicipalValue\n  };\n};\n\nexport default CompanyInformation;","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/libs/use-company-information.js"],"names":["useState","setItemInLocalStorage","getMonthAsAnumber","getYearsArray","CompanyInformation","startDate","setStartDate","companyID","setCompanyID","selectedSiteValueID","setSelectedValueID","companyName","setcompanyName","siteName","setSiteName","carbonMunicipalValue","setCarbonMunicipalValue","yearlyArray","setYearlyArray","year","show","monthlyArr","setMonthArray","month","index","getCurrentMonthlyAndYear","startData","monthNumber","map","data","parseInt"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nimport {\n\n} from \"../../../api\";\n\nimport {\n    setItemInLocalStorage,\n    getMonthAsAnumber,\n    getYearsArray,\n} from \"../../../utilities.js\"\n\nconst CompanyInformation = () => {\n\n    const [startDate, setStartDate] = useState(\"\");\n    const [companyID, setCompanyID] = useState(\"\");\n    const [selectedSiteValueID, setSelectedValueID] = useState(\"\");\n    const [companyName, setcompanyName] = useState(\"\");\n    const [siteName, setSiteName] = useState();\n    const [carbonMunicipalValue, setCarbonMunicipalValue] = useState();\n\n    const [yearlyArray, setYearlyArray] = useState([{\n        year: 0,\n        show: true\n    }]);\n\n    const [monthlyArr, setMonthArray] = useState([\n        {\n          month: \"JAN\",\n          index: 1,\n          show: false\n        },\n        {\n          month: \"FEB\",\n          index: 2,\n          show: false\n        },\n        {\n          month: \"MAR\",\n          index: 3,\n          show: false\n        },\n        {\n          month: \"APR\",\n          index: 4,\n          show: false\n        },\n        {\n          month: \"MAY\",\n          index: 5,\n          show: false\n        },\n        {\n          month: \"JUN\",\n          index: 6,\n          show: false\n        },\n        {\n          month: \"JUL\",\n          index: 7,\n          show: false\n        },\n        {\n          month: \"AUG\",\n          index: 8,\n          show: false\n        },\n        {\n          month: \"SEP\",\n          index: 9,\n          show: false\n        },\n        {\n          month: \"OCT\",\n          index: 10,\n          show: false\n        },\n        {\n          month: \"NOV\",\n          index: 11,\n          show: false\n        },\n        {\n          month: \"DEC\",\n          index: 12,\n          show: false\n        },\n    ]);\n\n    const getCurrentMonthlyAndYear = (startData) => {\n        // startData is YYYY-MM-DD\n        const yearlyArray = getYearsArray(startData);\n        const monthNumber = getMonthAsAnumber();\n        monthlyArr.map((data) => {\n          if (data.index === parseInt(monthNumber)) {\n            data.show = true;\n            return \"\"\n          } else {\n            data.show = false;\n            return \"\"\n          }\n\n        });\n        // console.log(\"monthlyArr\",monthlyArr)\n        setMonthArray(monthlyArr)\n        setYearlyArray(yearlyArray)\n\n        setItemInLocalStorage(\"yearlyArray\", yearlyArray);\n        setItemInLocalStorage(\"monthlyArr\", monthlyArr);\n    };\n\n    return {\n        startDate,\n        setStartDate,\n        companyID,\n        setCompanyID,\n        selectedSiteValueID,\n        setSelectedValueID,\n        companyName,\n        setcompanyName,\n        getCurrentMonthlyAndYear,\n        yearlyArray,\n        monthlyArr,\n        siteName,\n        setSiteName,\n        carbonMunicipalValue,\n        setCarbonMunicipalValue\n    }\n\n}\n\nexport default CompanyInformation"]},"metadata":{},"sourceType":"module"}