{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/reports/waste-on-a-day-of-the-week-report.js\";\nimport React, { useContext, useEffect, useState } from \"react\"; // import useSpinner from \"../../libs/use-spinner\";\n\nimport { WasteOnAdayOfTheWeekContext } from \"../../../../contexts/waste-on-a-day-of-the-week-context\";\nimport { WasteCapContext } from \"../../../../contexts/waste-cap-context\";\nimport { AccordionHeading, AccordionBody } from \"../accordion\";\nimport LeftArr from \"../../../../image/previous_icon.svg\";\nimport RightArr from \"../../../../image/next_icon.svg\";\nimport { MainContainer, BarChartContainer, Number, MakeBar } from \"../../../../styles/graph/barchart.styles\";\nimport { setItemInLocalStorage, roundedUpNumberAndTurnBackToNumber } from \"../../../../utilities.js\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nexport default function WasteOnAdayOfTheWeek(props) {\n  const [tooltipIsOpen, setTooltipIsOpen] = React.useState(true);\n  const {\n    year,\n    day,\n    setYear,\n    setDay,\n    wasteOnAdayOfTheWeekData,\n    siteName,\n    startDate\n  } = useContext(WasteOnAdayOfTheWeekContext);\n  const [gapArray, setGapArray] = useState([]);\n\n  const getGapArray = input => {\n    wasteOnAdayOfTheWeekData.weeks.map(num => {\n      for (let i = 1; i <= num; i++) {\n        if (i === num) {\n          input.push(1);\n        } else {\n          input.push(0);\n        }\n      }\n\n      return \"\";\n    });\n    return input;\n  };\n\n  useEffect(() => {\n    if (wasteOnAdayOfTheWeekData.weeks) {\n      setGapArray(getGapArray([]));\n    }\n\n    if (props.showWasteOnAdayOfTheWeek) {\n      setTooltipIsOpen(true);\n    } else {\n      setTooltipIsOpen(false);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [wasteOnAdayOfTheWeekData, props]);\n\n  const getMonthNum = index => {\n    let ret = 0,\n        rem = index;\n    wasteOnAdayOfTheWeekData.weeks.map(num => {\n      rem -= num;\n      if (rem >= 0) ret++;\n      return \"\";\n    });\n    return ret;\n  };\n\n  const {\n    showPounds\n  } = useContext(WasteCapContext);\n  const {\n    dailyCoverWastes,\n    dailySpoliageWastes,\n    dailyPeparationWastes\n  } = useContext(WasteCapContext);\n  let totalCoverCap = 0;\n  let totalSpoliageCap = 0;\n  let totalPreparationCap = 0;\n\n  if (showPounds) {\n    totalCoverCap = roundedUpNumberAndTurnBackToNumber(dailyCoverWastes * 2.775);\n    totalSpoliageCap = roundedUpNumberAndTurnBackToNumber(dailySpoliageWastes * 2.775);\n    totalPreparationCap = roundedUpNumberAndTurnBackToNumber(dailyPeparationWastes * 2.775);\n  } else {\n    totalCoverCap = dailyCoverWastes > 0 ? dailyCoverWastes : 0;\n    totalSpoliageCap = dailySpoliageWastes > 0 ? dailySpoliageWastes : 0;\n    totalPreparationCap = dailyPeparationWastes > 0 ? dailyPeparationWastes : 0;\n  }\n\n  const [activeState, setActiveState] = React.useState(\"cover\");\n  const [capLimit, setCapLimit] = React.useState(dailyCoverWastes);\n  const weeks = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n  let months = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUNE\", \"JULY\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\n\n  const onPrevYear = () => {\n    let startYear = parseInt(startDate.split(\"-\")[0]);\n    console.log(\"startyear: \", startYear, year, startYear > year);\n\n    if (startYear < year) {\n      setYear(year - 1);\n    }\n  };\n\n  const onNextYear = () => {\n    const date = new Date();\n    let currentYear = date.getFullYear();\n\n    if (currentYear > year) {\n      setYear(year + 1);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.hideReport ? \"dailyWasteChart displayNone\" : \"dailyWasteChart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AccordionHeading, {\n    color: \"primPurpleBackgroundColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, \"WASTE ON A DAY OF THE WEEK\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => {\n      props.setShowWasteOnAdayOfTheWeek(!props.showWasteOnAdayOfTheWeek);\n      setItemInLocalStorage(\"wasteOnAdayOfTheWeek\", !props.showWasteOnAdayOfTheWeek);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, props.showWasteOnAdayOfTheWeek ? \"X \" : \"| | | \"))), /*#__PURE__*/React.createElement(AccordionBody, {\n    open: props.showWasteOnAdayOfTheWeek,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem\" : \"originalTheme__reportBackgroundColor addPaddingOfHalveRem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-2 graph__row space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"report-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, siteName === null || siteName === void 0 ? void 0 : siteName.toLowerCase()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"graph__heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"year-ele\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, \"YEAR: \", year), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"arr-btn year-ele\",\n    src: LeftArr,\n    onClick: onPrevYear,\n    alt: \"prev arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"arr-btn year-ele\",\n    src: RightArr,\n    onClick: onNextYear,\n    alt: \"next arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"b\", {\n    className: \"capping\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyPurpleColor cooperHewittBold year-ele\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, \"Cap\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"capping__text  year-ele\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"darkTheme__selectedLabelColor cooperHewittBold\" : \"applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, \" \", \"C\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"darkTheme__numberColor\" : \"applyBlueTuckGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, totalCoverCap), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"capping__text  year-ele applyPurpleColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"darkTheme__selectedLabelColor cooperHewittBold\" : \"applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, \" \", \"S\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"darkTheme__numberColor\" : \"applyBlueTuckGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, totalSpoliageCap), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"capping__text  year-ele applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"darkTheme__selectedLabelColor cooperHewittBold\" : \"applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, \" \", \"P\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: props.showDarkTheme ? \"darkTheme__numberColor\" : \"applyBlueTuckGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  }, totalPreparationCap))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"space-between-center inactive week-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyBlueTuckGreen font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, \"Waste on a:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weekly__selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }, weeks.map((dayName, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: day === (index + 1) % 7 ? \"week-active font-bold\" : \"week-inactive\",\n    key: index,\n    onClick: () => {\n      setDay((index + 1) % 7);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }\n  }, dayName))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyBlueTuckGreen font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, \"Each Week\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-1 dashboard__wrapperForSelector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard__selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    open: tooltipIsOpen // onOpen={() => setTooltipIsOpen(true)}\n    ,\n    onClose: () => setTooltipIsOpen(false),\n    title: \"click on C, S, P or All waste stream\",\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: activeState === \"cover\" ? \"active\" : \"inactive\",\n    id: 0,\n    onClick: () => {\n      setActiveState(\"cover\");\n      setCapLimit(dailyCoverWastes);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }, \"C\")), /*#__PURE__*/React.createElement(Tooltip, {\n    open: tooltipIsOpen // onOpen={() => setTooltipIsOpen(true)}\n    ,\n    onClose: () => setTooltipIsOpen(false),\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: activeState === \"spoilage\" ? \"active\" : \"inactive\",\n    id: 1,\n    onClick: () => {\n      setActiveState(\"spoilage\");\n      setCapLimit(dailySpoliageWastes);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 15\n    }\n  }, \"S\")), /*#__PURE__*/React.createElement(Tooltip, {\n    open: tooltipIsOpen // onOpen={() => setTooltipIsOpen(true)}\n    ,\n    onClose: () => setTooltipIsOpen(false),\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: activeState === \"preparation\" ? \"active\" : \"inactive\",\n    id: 2,\n    onClick: () => {\n      setActiveState(\"preparation\");\n      setCapLimit(dailyPeparationWastes);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 15\n    }\n  }, \"P\")), /*#__PURE__*/React.createElement(Tooltip, {\n    open: tooltipIsOpen // onOpen={() => setTooltipIsOpen(true)}\n    ,\n    onClose: () => setTooltipIsOpen(false),\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: activeState === \"all\" ? \"active\" : \"inactive\",\n    id: 3,\n    onClick: () => {\n      setActiveState(\"all\");\n      setCapLimit(dailyCoverWastes + dailySpoliageWastes + dailyPeparationWastes);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 15\n    }\n  }, \"ALL\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 13\n    }\n  }, activeState.charAt(0).toUpperCase() + activeState.slice(1), \" waste shown\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"graph__row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MainContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 13\n    }\n  }, wasteOnAdayOfTheWeekData && wasteOnAdayOfTheWeekData[activeState + \"Waste\"] && wasteOnAdayOfTheWeekData[activeState + \"Waste\"].map((val, index) => {\n    const chart = /*#__PURE__*/React.createElement(BarChartContainer, {\n      key: index,\n      isGap: gapArray[index],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Number, {\n      color: \"rgba(34, 73, 33)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 25\n      }\n    }, showPounds ? Math.round(val * 2.775) : val), /*#__PURE__*/React.createElement(MakeBar, {\n      height: val * 1.3,\n      color: showPounds ? capLimit === 0 ? Math.round(val * 2.775) >= Math.round(dailyCoverWastes * 2.775) ? \"#e72226\" : \"#a2a42b\" : Math.round(val * 2.775) >= Math.round(capLimit * 2.775) ? \"#e72226\" : \"#a2a42b\" : capLimit === 0 ? Math.round(val) >= Math.round(dailyCoverWastes) ? \"#e72226\" : \"#a2a42b\" : Math.round(val) >= Math.round(capLimit) ? \"#e72226\" : \"#a2a42b\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 25\n      }\n    }), gapArray[index + 2] === 1 ? /*#__PURE__*/React.createElement(Number, {\n      color: \"#0f808c\",\n      style: {\n        marginTop: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 27\n      }\n    }, months[getMonthNum(index)]) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"23px\",\n        marginTop: \"19px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 27\n      }\n    }));\n    return chart;\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyGoldColor\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 11\n    }\n  }, \"The yellow bar represents a special event on the day\"))));\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/reports/waste-on-a-day-of-the-week-report.js"],"names":["React","useContext","useEffect","useState","WasteOnAdayOfTheWeekContext","WasteCapContext","AccordionHeading","AccordionBody","MainContainer","BarChartContainer","Number","MakeBar","setItemInLocalStorage","roundedUpNumberAndTurnBackToNumber","Tooltip","WasteOnAdayOfTheWeek","props","tooltipIsOpen","setTooltipIsOpen","year","day","setYear","setDay","wasteOnAdayOfTheWeekData","siteName","startDate","gapArray","setGapArray","getGapArray","input","weeks","map","num","i","push","showWasteOnAdayOfTheWeek","getMonthNum","index","ret","rem","showPounds","dailyCoverWastes","dailySpoliageWastes","dailyPeparationWastes","totalCoverCap","totalSpoliageCap","totalPreparationCap","activeState","setActiveState","capLimit","setCapLimit","months","onPrevYear","startYear","parseInt","split","console","log","onNextYear","date","Date","currentYear","getFullYear","hideReport","setShowWasteOnAdayOfTheWeek","showDarkTheme","toLowerCase","LeftArr","RightArr","dayName","charAt","toUpperCase","slice","val","chart","Math","round","marginTop","width","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\n\n// import useSpinner from \"../../libs/use-spinner\";\nimport { WasteOnAdayOfTheWeekContext } from \"../../../../contexts/waste-on-a-day-of-the-week-context\";\nimport { WasteCapContext } from \"../../../../contexts/waste-cap-context\";\nimport { AccordionHeading, AccordionBody } from \"../accordion\";\n\nimport LeftArr from \"../../../../image/previous_icon.svg\";\nimport RightArr from \"../../../../image/next_icon.svg\";\n\nimport {\n  MainContainer,\n  BarChartContainer,\n  Number,\n  MakeBar,\n} from \"../../../../styles/graph/barchart.styles\";\n\nimport { setItemInLocalStorage, roundedUpNumberAndTurnBackToNumber } from \"../../../../utilities.js\";\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nexport default function WasteOnAdayOfTheWeek(props) {\n\n  const [tooltipIsOpen, setTooltipIsOpen] = React.useState(true);\n\n  const {\n    year,\n    day,\n    setYear,\n    setDay,\n    wasteOnAdayOfTheWeekData,\n    siteName,\n    startDate,\n  } = useContext(WasteOnAdayOfTheWeekContext);\n\n  const [gapArray, setGapArray] = useState([]);\n\n  const getGapArray = (input) => {\n    wasteOnAdayOfTheWeekData.weeks.map((num) => {\n      for (let i = 1; i <= num; i++) {\n        if (i === num) {\n          input.push(1);\n        } else {\n          input.push(0);\n        }\n      }\n      return \"\"\n    });\n    return input;\n  };\n\n  useEffect(() => {\n    if (wasteOnAdayOfTheWeekData.weeks) {\n      setGapArray(getGapArray([]));\n    }\n\n    if (props.showWasteOnAdayOfTheWeek) {\n      setTooltipIsOpen(true);\n    } else {\n      setTooltipIsOpen(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [wasteOnAdayOfTheWeekData, props]);\n\n\n  const getMonthNum = (index) => {\n    let ret = 0, rem = index;\n    wasteOnAdayOfTheWeekData.weeks.map((num) => {\n      rem -= num\n      if (rem >= 0)\n        ret++;\n        return \"\";\n    })\n    return ret;\n  }\n\n  const { showPounds } = useContext(WasteCapContext);\n\n  const { dailyCoverWastes, dailySpoliageWastes, dailyPeparationWastes } =\n    useContext(WasteCapContext);\n\n  let totalCoverCap = 0;\n  let totalSpoliageCap = 0;\n  let totalPreparationCap = 0;\n\n  if (showPounds) {\n    totalCoverCap = roundedUpNumberAndTurnBackToNumber(\n      dailyCoverWastes * 2.775\n    );\n    totalSpoliageCap = roundedUpNumberAndTurnBackToNumber(\n      dailySpoliageWastes * 2.775\n    );\n    totalPreparationCap = roundedUpNumberAndTurnBackToNumber(\n      dailyPeparationWastes * 2.775\n    );\n  } else {\n    totalCoverCap = dailyCoverWastes > 0 ? dailyCoverWastes : 0;\n    totalSpoliageCap = dailySpoliageWastes > 0 ? dailySpoliageWastes : 0;\n    totalPreparationCap = dailyPeparationWastes > 0 ? dailyPeparationWastes : 0;\n  }\n\n  const [activeState, setActiveState] = React.useState(\"cover\");\n  const [capLimit, setCapLimit] = React.useState(dailyCoverWastes);\n\n  const weeks = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n\n  let months = [\n    \"JAN\",\n    \"FEB\",\n    \"MAR\",\n    \"APR\",\n    \"MAY\",\n    \"JUNE\",\n    \"JULY\",\n    \"AUG\",\n    \"SEP\",\n    \"OCT\",\n    \"NOV\",\n    \"DEC\",\n  ];\n\n  const onPrevYear = () => {\n    let startYear = parseInt(startDate.split(\"-\")[0]);\n    console.log(\"startyear: \", startYear, year, startYear > year);\n    if (startYear < year) {\n      setYear(year - 1);\n    }\n  };\n\n  const onNextYear = () => {\n    const date = new Date();\n    let currentYear = date.getFullYear();\n    if (currentYear > year) {\n      setYear(year + 1);\n    }\n  };\n\n  return (\n    <div\n      className={\n        props.hideReport ? \"dailyWasteChart displayNone\" : \"dailyWasteChart\"\n      }\n    >\n      <AccordionHeading color={\"primPurpleBackgroundColor\"}>\n        <div className=\"section-title\">WASTE ON A DAY OF THE WEEK</div>\n        <div className=\"container\">\n          <span\n            onClick={() => {\n              props.setShowWasteOnAdayOfTheWeek(\n                !props.showWasteOnAdayOfTheWeek\n              );\n              setItemInLocalStorage(\n                \"wasteOnAdayOfTheWeek\",\n                !props.showWasteOnAdayOfTheWeek\n              );\n            }}\n          >\n            {props.showWasteOnAdayOfTheWeek ? \"X \" : \"| | | \"}\n          </span>\n        </div>\n      </AccordionHeading>\n\n      <AccordionBody open={props.showWasteOnAdayOfTheWeek}>\n        <div\n          className={\n            props.showDarkTheme\n              ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem\"\n              : \"originalTheme__reportBackgroundColor addPaddingOfHalveRem\"\n          }\n        >\n          <div className=\"my-2 graph__row space-between\">\n            <div className=\"report-subtitle\">{siteName?.toLowerCase()}</div>\n            <div className=\"graph__heading\">\n              <div className=\"year-ele\">YEAR: {year}</div>\n              <img\n                className=\"arr-btn year-ele\"\n                src={LeftArr}\n                onClick={onPrevYear}\n                alt=\"prev arrow\"\n              />\n              <img\n                className=\"arr-btn year-ele\"\n                src={RightArr}\n                onClick={onNextYear}\n                alt=\"next arrow\"\n              />\n            </div>\n            <b className=\"capping\">\n              <div className=\"applyPurpleColor cooperHewittBold year-ele\">\n                Cap\n              </div>\n              <div className=\"capping__text  year-ele\">\n                <div\n                  className={\n                    props.showDarkTheme\n                      ? \"darkTheme__selectedLabelColor cooperHewittBold\"\n                      : \"applyPurpleColor cooperHewittBold\"\n                  }\n                >\n                  {\" \"}\n                  C\n                </div>\n              </div>\n              <div\n                className={\n                  props.showDarkTheme\n                    ? \"darkTheme__numberColor\"\n                    : \"applyBlueTuckGreen\"\n                }\n              >\n                {totalCoverCap}\n              </div>\n              <div className=\"capping__text  year-ele applyPurpleColor\">\n                <div\n                  className={\n                    props.showDarkTheme\n                      ? \"darkTheme__selectedLabelColor cooperHewittBold\"\n                      : \"applyPurpleColor cooperHewittBold\"\n                  }\n                >\n                  {\" \"}\n                  S\n                </div>\n              </div>\n              <div\n                className={\n                  props.showDarkTheme\n                    ? \"darkTheme__numberColor\"\n                    : \"applyBlueTuckGreen\"\n                }\n              >\n                {totalSpoliageCap}\n              </div>\n              <div className=\"capping__text  year-ele applyPurpleColor cooperHewittBold\">\n                <div\n                  className={\n                    props.showDarkTheme\n                      ? \"darkTheme__selectedLabelColor cooperHewittBold\"\n                      : \"applyPurpleColor cooperHewittBold\"\n                  }\n                >\n                  {\" \"}\n                  P\n                </div>\n              </div>\n              <div\n                className={\n                  props.showDarkTheme\n                    ? \"darkTheme__numberColor\"\n                    : \"applyBlueTuckGreen\"\n                }\n              >\n                {totalPreparationCap}\n              </div>\n            </b>\n          </div>\n          <div className=\"space-between-center inactive week-box\">\n            <div className=\"applyBlueTuckGreen font-bold\">Waste on a:</div>\n            <div className=\"weekly__selector\">\n              {weeks.map((dayName, index) => (\n                <div\n                  className={\n                    (day === (index + 1) % 7) ? \"week-active font-bold\" : \"week-inactive\"\n                  }\n                  key={index}\n                  onClick={() => {\n                    setDay((index + 1)%7);\n                  }}\n                >\n                  {dayName}\n                </div>\n              ))}\n            </div>\n            <div className=\"applyBlueTuckGreen font-bold\">Each Week</div>\n          </div>\n          <div className=\"mt-1 dashboard__wrapperForSelector\">\n            <div className=\"dashboard__selector\">\n\n            <Tooltip\n                open={tooltipIsOpen}\n                // onOpen={() => setTooltipIsOpen(true)}\n                onClose={() => setTooltipIsOpen(false)}\n                title=\"click on C, S, P or All waste stream\"\n                arrow\n              >\n\n              <h2\n                className={activeState === \"cover\" ? \"active\" : \"inactive\"}\n                id={0}\n                onClick={() => {\n                  setActiveState(\"cover\");\n                  setCapLimit(dailyCoverWastes);\n                }}\n              >\n                C\n              </h2>\n\n            </Tooltip>\n\n              <Tooltip\n                open={tooltipIsOpen}\n                // onOpen={() => setTooltipIsOpen(true)}\n                onClose={() => setTooltipIsOpen(false)}\n                arrow\n              >\n\n              <h2\n                className={activeState === \"spoilage\" ? \"active\" : \"inactive\"}\n                id={1}\n                onClick={() => {\n                  setActiveState(\"spoilage\");\n                  setCapLimit(dailySpoliageWastes);\n                }}\n              >\n                S\n              </h2>\n\n              </Tooltip>\n\n              <Tooltip\n                open={tooltipIsOpen}\n                // onOpen={() => setTooltipIsOpen(true)}\n                onClose={() => setTooltipIsOpen(false)}\n                arrow\n              >\n\n              <h2\n                className={\n                  activeState === \"preparation\" ? \"active\" : \"inactive\"\n                }\n                id={2}\n                onClick={() => {\n                  setActiveState(\"preparation\");\n                  setCapLimit(dailyPeparationWastes);\n                }}\n              >\n                P\n              </h2>\n\n              </Tooltip>\n\n              <Tooltip\n                open={tooltipIsOpen}\n                // onOpen={() => setTooltipIsOpen(true)}\n                onClose={() => setTooltipIsOpen(false)}\n                arrow\n              >\n\n              <h2\n                className={activeState === \"all\" ? \"active\" : \"inactive\"}\n                id={3}\n                onClick={() => {\n                  setActiveState(\"all\");\n                  setCapLimit(\n                    dailyCoverWastes +\n                      dailySpoliageWastes +\n                      dailyPeparationWastes\n                  );\n                }}\n              >\n                ALL\n              </h2>\n\n              </Tooltip>\n\n            </div>\n            <div className=\"font-bold\">\n              {activeState.charAt(0).toUpperCase() + activeState.slice(1)} waste\n              shown\n            </div>\n          </div>\n          <div className=\"graph__row\">\n            <MainContainer>\n              {wasteOnAdayOfTheWeekData &&\n                wasteOnAdayOfTheWeekData[activeState + \"Waste\"] &&\n                wasteOnAdayOfTheWeekData[activeState + \"Waste\"].map(\n                  (val, index) => {\n                    const chart =\n                      <BarChartContainer key={index} isGap={gapArray[index]}>\n                        <Number color={\"rgba(34, 73, 33)\"}>\n                          {/* {showPounds ? Math.round(val * 2.775) : Math.round(val)} */}\n                          {showPounds ? Math.round(val * 2.775) : val}\n                        </Number>\n                        <MakeBar\n                          height={val * 1.3}\n                          color={\n                            showPounds\n                             ?\n                              capLimit === 0\n                                ? Math.round(val * 2.775) >= Math.round(dailyCoverWastes * 2.775)\n                                  ? \"#e72226\"\n                                  : \"#a2a42b\"\n                                : Math.round(val * 2.775) >= Math.round(capLimit * 2.775)\n                                  ? \"#e72226\"\n                                  : \"#a2a42b\"\n                             :\n                              capLimit === 0\n                                ? Math.round(val) >= Math.round(dailyCoverWastes)\n                                  ? \"#e72226\"\n                                  : \"#a2a42b\"\n                                : Math.round(val) >= Math.round(capLimit)\n                                  ? \"#e72226\"\n                                  : \"#a2a42b\"\n                          }\n                        />\n                        {gapArray[index + 2] === 1 ? (\n                          <Number color={\"#0f808c\"} style={{marginTop: \"5px\"}}>\n                            {months[getMonthNum(index)]}\n                          </Number>\n                        ) : (\n                          <div style={{width: \"23px\", marginTop: \"19px\"}}></div>\n                        )}\n                      </BarChartContainer>\n                    return chart;\n                  }\n                )}\n            </MainContainer>\n          </div>\n\n          <div className=\"applyGoldColor\" style={{\n              display: \"flex\",\n              justifyContent: \"center\"\n            }}>\n              The yellow bar represents a special event on the day\n          </div>\n\n        </div>\n\n      </AccordionBody>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}