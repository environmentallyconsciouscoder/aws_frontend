{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/user-inputs/production-preparation-inputs.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport moment from \"moment\";\nimport Pagination from \"./../reuseable-components/pagination/pagination.js\";\nimport { ProductionPreparationContext } from \"../../../../contexts/production-preparation-context\";\nimport { formatDateToDatabaseDateFormat, formatSiteName, addDaysToDate } from \"../../../../utilities\";\nimport { addProductionPreparationInputs } from \"../../../../api\";\n\nconst totalWeight = (totalNumber, weightPerMeal) => {\n  return (totalNumber * weightPerMeal).toFixed(2);\n};\n\nexport default function CoverInputs(props) {\n  const {\n    productionInputs,\n    filterMenuItems,\n    updateProductionInputs,\n    filterOutEmptyObjects,\n    firstDayOfTheWeek,\n    index,\n    siteName,\n    companyName,\n    id,\n    numberOfWeeks,\n    weeklyArry,\n    filterbyWeeks,\n    weeklyStartDateArry\n  } = useContext(ProductionPreparationContext);\n  const [displays, setDisplays] = useState([]);\n  const [site, setSite] = useState([]);\n  const [date, setDate] = useState([]);\n  const [selectedDate, setSelectedDate] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [pageNumber, setPageNumber] = useState(0);\n  const [showDate, setShowDate] = useState(true);\n  useEffect(() => {\n    // console.log(\"firstDayOfTheWeek\",firstDayOfTheWeek);\n    // setDate(firstDayOfTheWeek)\n    // console.log(\"moment().format('MMM DD YYYY')\",moment(firstDayOfTheWeek).format('MMM DD YYYY'));\n    if (productionInputs !== undefined) {\n      // console.log(\"productionInputs\",productionInputs);\n      setDisplays(productionInputs);\n    }\n\n    const formatedSiteName = formatSiteName(siteName);\n    setSite(formatedSiteName); // console.log(\"props\",props)\n    // if (date.length === 0) {\n    //     let formatedDate = moment().format('MMM DD YYYY');\n    //     setDate(formatedDate);\n    // }\n\n    setIsSubmitting(false);\n  }, [props, productionInputs]);\n\n  const handleSubmit = e => {\n    // console.log(\"e\",e)\n    e.preventDefault();\n    console.log(\"date\", date); // let date = new Date()\n\n    const formatedDate = formatDateToDatabaseDateFormat(date); // console.log(\"formatedDate\",formatedDate)\n\n    const addDateToObject = displays.map(data => {\n      return Object.assign(data, {\n        date: formatedDate\n      });\n    }); // console.log(\"addDateToObject\",addDateToObject)\n\n    const removeEmptyFields = filterOutEmptyObjects(addDateToObject); // console.log(\"removeEmptyFields\",removeEmptyFields)\n\n    let objectReturnedToDB;\n\n    if (removeEmptyFields.length === 0) {\n      objectReturnedToDB = [{\n        \"productionFood\": \"\",\n        \"ingredients\": \"\",\n        \"weightPerMeal\": 0,\n        \"totalWeight\": 0,\n        \"totalNumber\": 0,\n        \"date\": formatedDate\n      }];\n    } else {\n      objectReturnedToDB = removeEmptyFields;\n    } // console.log(\"objectReturnedToDB\",objectReturnedToDB);\n\n\n    addProductionPreparationInputs(objectReturnedToDB, siteName, companyName, id).then(() => {\n      //    console.log(\"pageNumber\",pageNumber);\n      updateProductionInputs(props.companyID, props.companyName, props.selectedSiteValueID, pageNumber);\n      props.history.push('/dashboard');\n    }).then(() => {\n      // console.log(\"pageNumber\",pageNumber);\n      // let formatedDate = moment().format('MMM DD YYYY');\n      // setDate(formatedDate);\n      const newDate = addDaysToDate(firstDayOfTheWeek, pageNumber);\n      setDate(newDate);\n    });\n    setIsSubmitting(true);\n  };\n\n  const handleAddFields = () => {\n    if (displays.length <= 20) {\n      setDisplays([...displays, {\n        totalNumber: 0,\n        productionFood: \"Food Item\",\n        ingredients: \"\",\n        weightPerMeal: 0\n      }]);\n    }\n  };\n\n  const handleChangeInput = (id, event) => {\n    // console.log(\"id\", id)\n    // console.log(\"event\", event)\n    const newInputFields = displays.map((data, i) => {\n      if (id === i) {\n        // console.log(\"data[event.target.name]\",data[event.target.name])\n        // console.log(\"event.target.value\",event.target.value)\n        data[event.target.name] = event.target.value;\n      }\n\n      return data;\n    }); // console.log(\"newInputFields\",newInputFields)\n\n    setDisplays(newInputFields);\n  };\n\n  const deleteItem = (data, id) => {\n    // console.log(\"id\",id)\n    // console.log(\"displays\",displays);\n    const values = [...displays];\n    values.splice(id, 1); // console.log(\"values\",values)\n\n    setDisplays(values);\n  };\n\n  const changePage = ({\n    selected\n  }) => {\n    // console.log(\"selected changePage\", selected)\n    //this gives page number starting from 0\n    setPageNumber(selected);\n    filterMenuItems(selected);\n    const newDate = addDaysToDate(firstDayOfTheWeek, selected);\n    const date = moment(newDate).format('YYYY-MM-DD');\n    setDate(date); // setDate(newDate)\n\n    setShowDate(true);\n    setSelectedDate(newDate);\n  }; // export const addDaysToDate = (firstDayOfTheWeek, numberOfdays) => {\n  //     const new_date = moment(firstDayOfTheWeek).add(numberOfdays, 'days');\n  //     return new_date.format('MMM DD YYYY');\n  //   }\n\n\n  const changePageForWeeks = ({\n    selected\n  }) => {\n    const startDate = weeklyStartDateArry[selected]; // console.log(\"selected\",startDate);\n\n    setDate(startDate); // console.log(\"weeklyArry\",weeklyArry[selected]);\n    // setDate(moment(firstDayOfTheWeek).format('MMM DD YYYY'))\n\n    setShowDate(false);\n    filterbyWeeks(weeklyArry[selected], pageNumber, weeklyArry);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductionPreparation applyBlueTuckGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductionPreparation__spacing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductionPreparation__heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductionPreparation__label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, site), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, \"Production Preparation\"), !showDate && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }, \"w/c \", date), showDate && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyPurpleColor cooperHewittBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, selectedDate)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleAddFields,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductionPreparation__tableHeading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, \"Production Food\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, \"Total Number\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, \"Weight per meal (KG)\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, \"Total Weight (KG)\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductionPreparation__tableLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }, displays.map((data, id) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ProductionPreparation__inputLayout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: data.productionFood,\n      name: \"productionFood\",\n      onChange: event => handleChangeInput(id, event),\n      type: \"text\",\n      onKeyDown: evt => [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"].includes(evt.key) && evt.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      placeholder: data.ingredients,\n      name: \"ingredients\",\n      onChange: event => handleChangeInput(id, event),\n      type: \"text\" // onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: data.totalNumber,\n      name: \"totalNumber\",\n      onChange: event => handleChangeInput(id, event),\n      type: \"number\",\n      onKeyDown: evt => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: data.weightPerMeal,\n      name: \"weightPerMeal\",\n      onChange: event => handleChangeInput(id, event),\n      type: \"number\",\n      onKeyDown: evt => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ProductionPreparation__autoCalculator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 33\n      }\n    }, \"( \", totalWeight(data.totalNumber, data.weightPerMeal), \" ) Kg\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"2rem\",\n        fontFamily: \"CooperHewitt-Bold\",\n        cursor: \"pointer\"\n      },\n      onClick: () => deleteItem(data, id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 33\n      }\n    }, \"Delete\"));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductionPreparation__buttonLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => handleSubmit(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 25\n    }\n  }, isSubmitting ? \"Submitted\" : \"Submit\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      padding: \"1rem\",\n      color: \"rgb(140, 112, 140)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 5\n    }\n  }, \"Change Daily Input: (select prev/next to change the days of the week)\"), /*#__PURE__*/React.createElement(Pagination, {\n    index: index,\n    onPageChange: changePage,\n    pageCount: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      padding: \"1rem\",\n      color: \"rgb(140, 112, 140)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 5\n    }\n  }, \"Change weekly Input:\"), /*#__PURE__*/React.createElement(Pagination, {\n    index: index,\n    onPageChange: changePageForWeeks,\n    pageCount: numberOfWeeks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/user-inputs/production-preparation-inputs.js"],"names":["React","useContext","useState","useEffect","IconButton","AddIcon","moment","Pagination","ProductionPreparationContext","formatDateToDatabaseDateFormat","formatSiteName","addDaysToDate","addProductionPreparationInputs","totalWeight","totalNumber","weightPerMeal","toFixed","CoverInputs","props","productionInputs","filterMenuItems","updateProductionInputs","filterOutEmptyObjects","firstDayOfTheWeek","index","siteName","companyName","id","numberOfWeeks","weeklyArry","filterbyWeeks","weeklyStartDateArry","displays","setDisplays","site","setSite","date","setDate","selectedDate","setSelectedDate","isSubmitting","setIsSubmitting","pageNumber","setPageNumber","showDate","setShowDate","undefined","formatedSiteName","handleSubmit","e","preventDefault","console","log","formatedDate","addDateToObject","map","data","Object","assign","removeEmptyFields","objectReturnedToDB","length","then","companyID","selectedSiteValueID","history","push","newDate","handleAddFields","productionFood","ingredients","handleChangeInput","event","newInputFields","i","target","name","value","deleteItem","values","splice","changePage","selected","format","changePageForWeeks","startDate","marginLeft","width","display","evt","includes","key","fontFamily","cursor","justifyContent","padding","color"],"mappings":"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","sourcesContent":["import React, {  useContext,  useState, useEffect} from \"react\";\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport moment from \"moment\";\n\nimport Pagination from \"./../reuseable-components/pagination/pagination.js\"\n\nimport { ProductionPreparationContext } from \"../../../../contexts/production-preparation-context\";\n\nimport {\n    formatDateToDatabaseDateFormat,\n    formatSiteName,\n    addDaysToDate\n} from \"../../../../utilities\";\n\nimport {\n    addProductionPreparationInputs,\n} from \"../../../../api\";\n\nconst totalWeight = (totalNumber, weightPerMeal) => {\n    return (totalNumber * weightPerMeal).toFixed(2);\n}\n\nexport default function CoverInputs(props) {\n\n    const {\n        productionInputs,\n        filterMenuItems,\n        updateProductionInputs,\n        filterOutEmptyObjects,\n        firstDayOfTheWeek,\n        index,\n        siteName,\n        companyName,\n        id,\n        numberOfWeeks,\n        weeklyArry,\n        filterbyWeeks,\n        weeklyStartDateArry\n    } = useContext(ProductionPreparationContext);\n\n\n    const [displays, setDisplays] = useState([]);\n    const [site, setSite] = useState([]);\n    const [date, setDate] = useState([]);\n\n    const [selectedDate, setSelectedDate] = useState([]);\n\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    const [pageNumber, setPageNumber] = useState(0);\n\n    const [showDate, setShowDate] = useState(true);\n\n    useEffect(() => {\n        // console.log(\"firstDayOfTheWeek\",firstDayOfTheWeek);\n        // setDate(firstDayOfTheWeek)\n\n        // console.log(\"moment().format('MMM DD YYYY')\",moment(firstDayOfTheWeek).format('MMM DD YYYY'));\n        if (productionInputs !== undefined) {\n            // console.log(\"productionInputs\",productionInputs);\n            setDisplays(productionInputs)\n        }\n\n        const formatedSiteName = formatSiteName(siteName)\n        setSite(formatedSiteName)\n\n        // console.log(\"props\",props)\n\n        // if (date.length === 0) {\n        //     let formatedDate = moment().format('MMM DD YYYY');\n        //     setDate(formatedDate);\n        // }\n\n        setIsSubmitting(false)\n\n    }, [props, productionInputs]);\n\n    const handleSubmit = (e) => {\n        // console.log(\"e\",e)\n        e.preventDefault();\n        console.log(\"date\",date);\n        // let date = new Date()\n        const formatedDate = formatDateToDatabaseDateFormat(date)\n        // console.log(\"formatedDate\",formatedDate)\n\n        const addDateToObject = displays.map((data) => {\n             return Object.assign(data, {date: formatedDate});\n        })\n\n        // console.log(\"addDateToObject\",addDateToObject)\n        const removeEmptyFields = filterOutEmptyObjects(addDateToObject)\n        // console.log(\"removeEmptyFields\",removeEmptyFields)\n\n        let objectReturnedToDB;\n\n        if (removeEmptyFields.length === 0) {\n            objectReturnedToDB = [{\n                \"productionFood\": \"\",\n                \"ingredients\": \"\",\n                \"weightPerMeal\": 0,\n                \"totalWeight\": 0,\n                \"totalNumber\": 0,\n                \"date\": formatedDate\n            }]\n        } else {\n            objectReturnedToDB = removeEmptyFields\n        }\n\n        // console.log(\"objectReturnedToDB\",objectReturnedToDB);\n\n        addProductionPreparationInputs(objectReturnedToDB, siteName, companyName, id).then(() => {\n\n        //    console.log(\"pageNumber\",pageNumber);\n           updateProductionInputs(props.companyID, props.companyName, props.selectedSiteValueID, pageNumber)\n           props.history.push('/dashboard');\n        }).then(() => {\n            // console.log(\"pageNumber\",pageNumber);\n            // let formatedDate = moment().format('MMM DD YYYY');\n            // setDate(formatedDate);\n            const newDate = addDaysToDate(firstDayOfTheWeek, pageNumber);\n            setDate(newDate);\n        })\n        setIsSubmitting(true)\n    }\n\n    const handleAddFields = () => {\n        if (displays.length <= 20) {\n            setDisplays([...displays,\n                {\n                    totalNumber: 0, productionFood: \"Food Item\", ingredients: \"\", weightPerMeal: 0\n                },\n            ])\n        }\n    };\n\n    const handleChangeInput = (id, event) => {\n        // console.log(\"id\", id)\n        // console.log(\"event\", event)\n\n        const newInputFields =\n        displays.map((data, i)=> {\n            if(id === i) {\n                // console.log(\"data[event.target.name]\",data[event.target.name])\n                // console.log(\"event.target.value\",event.target.value)\n\n                data[event.target.name] = event.target.value\n            }\n            return data;\n        })\n\n        // console.log(\"newInputFields\",newInputFields)\n        setDisplays(newInputFields);\n    }\n\n    const deleteItem = (data, id) => {\n        // console.log(\"id\",id)\n        // console.log(\"displays\",displays);\n        const values  = [...displays];\n        values.splice(id, 1);\n        // console.log(\"values\",values)\n        setDisplays(values)\n    }\n\n    const changePage = ({ selected }) => {\n        // console.log(\"selected changePage\", selected)\n        //this gives page number starting from 0\n        setPageNumber(selected);\n        filterMenuItems(selected);\n\n        const newDate = addDaysToDate(firstDayOfTheWeek, selected);\n        const date = moment(newDate).format('YYYY-MM-DD');\n        setDate(date)\n\n        // setDate(newDate)\n        setShowDate(true)\n        setSelectedDate(newDate)\n    };\n\n    // export const addDaysToDate = (firstDayOfTheWeek, numberOfdays) => {\n    //     const new_date = moment(firstDayOfTheWeek).add(numberOfdays, 'days');\n    //     return new_date.format('MMM DD YYYY');\n    //   }\n\n    const changePageForWeeks = ({ selected }) => {\n        const startDate = weeklyStartDateArry[selected];\n        // console.log(\"selected\",startDate);\n        setDate(startDate)\n        // console.log(\"weeklyArry\",weeklyArry[selected]);\n        // setDate(moment(firstDayOfTheWeek).format('MMM DD YYYY'))\n        setShowDate(false)\n        filterbyWeeks(weeklyArry[selected], pageNumber, weeklyArry)\n    };\n\n  return (\n\n    <>\n\n    <div className=\"ProductionPreparation applyBlueTuckGreen\">\n\n\n        <div\n        className=\"ProductionPreparation__spacing\"\n        >\n\n            <div className=\"ProductionPreparation__heading\">\n                <div\n                className=\"ProductionPreparation__label\"\n                >\n                    <div className=\"applyPurpleColor cooperHewittBold\">{site}</div>\n                    <div className=\"section-title\">Production Preparation</div>\n\n                    {!showDate &&\n                        <div className=\"applyPurpleColor cooperHewittBold\">w/c {date}</div>\n                    }\n\n                    {showDate &&\n                        <div className=\"applyPurpleColor cooperHewittBold\">{selectedDate}</div>\n                    }\n                </div>\n                <div>\n                    <IconButton\n                        onClick={handleAddFields}\n                        >\n                        <AddIcon />\n                    </IconButton>\n                </div>\n            </div>\n\n            <div\n            className=\"ProductionPreparation__tableHeading\"\n\n            >\n\n                <div>Production Food</div>\n                <div>Ingredients</div>\n                <div>Total Number</div>\n                <div>Weight per meal (KG)</div>\n                <div>Total Weight (KG)</div>\n                {/* <div>Waste per sales</div> */}\n                <div style={{marginLeft: \"2rem\"}}></div>\n\n\n            </div>\n\n            <div\n            className=\"ProductionPreparation__tableLayout\"\n            >\n\n                <form style={{\n                    width: \"100%\"\n                }}>\n\n                    {displays.map((data, id) => {\n                        return (\n                            <div\n                                className=\"ProductionPreparation__inputLayout\"\n                            >\n                                <div style={{display: \"flex\"}}>\n                                    <input\n                                        placeholder={data.productionFood}\n                                        name=\"productionFood\"\n                                        onChange={event => handleChangeInput(id, event)}\n                                        type=\"text\"\n                                        onKeyDown={(evt) => [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"].includes(evt.key) && evt.preventDefault()}\n                                    />\n                                    <textarea\n                                        placeholder={data.ingredients}\n                                        name=\"ingredients\"\n                                        onChange={event => handleChangeInput(id, event)}\n                                        type=\"text\"\n                                        // onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n                                    />\n                                    <input\n                                        placeholder={data.totalNumber}\n                                        name=\"totalNumber\"\n                                        onChange={event => handleChangeInput(id, event)}\n                                        type=\"number\"\n                                        onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n                                    />\n                                    <input\n                                        placeholder={data.weightPerMeal}\n                                        name=\"weightPerMeal\"\n                                        onChange={event => handleChangeInput(id, event)}\n                                        type=\"number\"\n                                        onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n                                    />\n                                </div>\n                                <div\n                                className=\"ProductionPreparation__autoCalculator\"\n\n                                >\n                                ( {totalWeight(data.totalNumber, data.weightPerMeal)} ) Kg\n                                </div>\n\n                                <div style={{marginLeft: \"2rem\", fontFamily: \"CooperHewitt-Bold\", cursor: \"pointer\"}} onClick={()=> deleteItem(data, id)}>Delete</div>\n                            </div>\n                        )\n                    })}\n\n                    <div\n                        className=\"ProductionPreparation__buttonLayout\"\n                    >\n                        <button\n                            onClick={event => handleSubmit(event)}\n                        >\n                            {isSubmitting ? \"Submitted\" : \"Submit\"}\n                        </button>\n                    </div>\n\n                </form>\n\n            </div>\n        </div>\n\n    </div>\n\n    <div style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            padding: \"1rem\",\n            color: \"rgb(140, 112, 140)\"\n    }}>\n        Change Daily Input: (select prev/next to change the days of the week)\n    </div>\n\n    <Pagination index={index} onPageChange={changePage} pageCount={7} />\n\n    <div style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            padding: \"1rem\",\n            color: \"rgb(140, 112, 140)\"\n    }}>\n        Change weekly Input:\n    </div>\n\n    <Pagination index={index} onPageChange={changePageForWeeks} pageCount={numberOfWeeks} />\n    </>\n\n  );\n}"]},"metadata":{},"sourceType":"module"}