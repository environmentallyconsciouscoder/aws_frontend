{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/contexts/total-waste-context.js\";\nimport React, { createContext, useEffect, useState } from 'react';\nexport const OverviewWasteContext = createContext();\n\nconst OverviewWasteContextProvider = props => {\n  const [coverWaste, setCoverWaste] = useState(0);\n  const [prepWaste, setPrepWaste] = useState(0);\n  const [spoilageWaste, setSpoilageWaste] = useState(0);\n  const [siteName, setSiteName] = useState(\"\");\n  useEffect(() => {\n    if (props.totalWasteFromSelectedSite[0] !== undefined) {\n      let site = props.totalWasteFromSelectedSite[0].siteName.replace(/[^A-Za-z]+/g, '').toUpperCase();\n      setSiteName(site);\n      setCoverWaste(props.totalWasteFromSelectedSite[0].coverWaste);\n      setPrepWaste(props.totalWasteFromSelectedSite[0].prepWaste);\n      setSpoilageWaste(props.totalWasteFromSelectedSite[0].spoilageWaste);\n    }\n  }, [props.totalWasteFromSelectedSite]);\n  return /*#__PURE__*/React.createElement(OverviewWasteContext.Provider, {\n    value: {\n      coverWaste,\n      prepWaste,\n      spoilageWaste,\n      siteName\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default OverviewWasteContextProvider;","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/contexts/total-waste-context.js"],"names":["React","createContext","useEffect","useState","OverviewWasteContext","OverviewWasteContextProvider","props","coverWaste","setCoverWaste","prepWaste","setPrepWaste","spoilageWaste","setSpoilageWaste","siteName","setSiteName","totalWasteFromSelectedSite","undefined","site","replace","toUpperCase","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AAEA,OAAO,MAAMC,oBAAoB,GAAGH,aAAa,EAA1C;;AAEP,MAAMI,4BAA4B,GAAGC,KAAK,IAAI;AAE5C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAII,KAAK,CAACS,0BAAN,CAAiC,CAAjC,MAAwCC,SAA5C,EAAuD;AAErD,UAAIC,IAAI,GAAGX,KAAK,CAACS,0BAAN,CAAiC,CAAjC,EAAoCF,QAApC,CAA6CK,OAA7C,CAAqD,aAArD,EAAoE,EAApE,EAAwEC,WAAxE,EAAX;AACAL,MAAAA,WAAW,CAACG,IAAD,CAAX;AAEAT,MAAAA,aAAa,CAACF,KAAK,CAACS,0BAAN,CAAiC,CAAjC,EAAoCR,UAArC,CAAb;AACAG,MAAAA,YAAY,CAACJ,KAAK,CAACS,0BAAN,CAAiC,CAAjC,EAAoCN,SAArC,CAAZ;AACAG,MAAAA,gBAAgB,CAACN,KAAK,CAACS,0BAAN,CAAiC,CAAjC,EAAoCJ,aAArC,CAAhB;AACD;AAEJ,GAZU,EAYR,CAACL,KAAK,CAACS,0BAAP,CAZQ,CAAT;AAcA,sBACE,oBAAC,oBAAD,CAAsB,QAAtB;AACE,IAAA,KAAK,EAAE;AACLR,MAAAA,UADK;AAELE,MAAAA,SAFK;AAGLE,MAAAA,aAHK;AAILE,MAAAA;AAJK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGP,KAAK,CAACc,QART,CADF;AAYD,CAhCD;;AAkCA,eAAef,4BAAf","sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\n\nexport const OverviewWasteContext = createContext()\n\nconst OverviewWasteContextProvider = props => {\n\n  const [coverWaste, setCoverWaste] = useState(0);\n  const [prepWaste, setPrepWaste] = useState(0);\n  const [spoilageWaste, setSpoilageWaste] = useState(0);\n  const [siteName, setSiteName] = useState(\"\");\n  useEffect(() => {\n\n    if (props.totalWasteFromSelectedSite[0] !== undefined) {\n\n      let site = props.totalWasteFromSelectedSite[0].siteName.replace(/[^A-Za-z]+/g, '').toUpperCase();\n      setSiteName(site)\n\n      setCoverWaste(props.totalWasteFromSelectedSite[0].coverWaste)\n      setPrepWaste(props.totalWasteFromSelectedSite[0].prepWaste)\n      setSpoilageWaste(props.totalWasteFromSelectedSite[0].spoilageWaste)\n    }\n\n}, [props.totalWasteFromSelectedSite])\n\n  return (\n    <OverviewWasteContext.Provider\n      value={{\n        coverWaste,\n        prepWaste,\n        spoilageWaste,\n        siteName\n      }}\n    >\n      {props.children}\n    </OverviewWasteContext.Provider>\n  )\n}\n\nexport default OverviewWasteContextProvider"]},"metadata":{},"sourceType":"module"}