{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/contexts/performance-summary-context.js\";\nimport React, { createContext, useEffect } from 'react';\nimport { getPerformanceData } from \"../api\";\nexport const PerformanceSummaryContext = createContext();\n\nconst PerformanceSummaryContextProvider = props => {\n  const [bestWasteWeeks, setBestWasteWeeks] = React.useState(0);\n  const [co2Contributions, setCo2Contributions] = React.useState(0);\n  const [costOfFoodDisposal, setCostOfFoodDisposal] = React.useState(0);\n  const [lastMonthSpendOnFoodWaste, setLastMonthSpendOnFoodWaste] = React.useState(0);\n  const [lastWeek, setLastWeek] = React.useState(0);\n  const [numberOfMealsSavedThisMonth, setNumberOfMealsSavedThisMonth] = React.useState(0);\n  const [bestWasteWeeksDate, setBestWasteWeeksDate] = React.useState(0);\n  const [bestWasteWeeksCovers, setBestWasteWeeksCovers] = React.useState(0);\n  const [bestWasteWeeksSales, setBestWasteWeeksSales] = React.useState(0);\n  const [lastWeekDate, setLastWeekDate] = React.useState(0);\n  const [lastWeekSales, setLastWeekSales] = React.useState(0);\n  const [lastWeekCovers, setLastWeekCovers] = React.useState(0);\n  const [totalCo2Contributions, setTotalCo2Contributions] = React.useState(0);\n  const [numberOfMealsLost, setNumberOfMealsLost] = React.useState(0);\n  const [averageWasteWeeks, setAverageWasteWeeks] = React.useState(0);\n  const [averageWasteWeeksDate, setAverageWasteWeeksDate] = React.useState(0);\n  const [averageWasteWeeksSales, setAverageWasteWeeksSales] = React.useState(0);\n  const [averageWasteWeeksCovers, setAverageWasteWeeksCovers] = React.useState(0);\n  const [wastePerCover, setWastePerCover] = React.useState(0);\n  const [wastePerSales, setWastePerSales] = React.useState(0);\n  const [lastWastePerCover, setLastWastePerCover] = React.useState(0);\n  const [lastWastePerSales, setLastWastePerSales] = React.useState(0);\n  useEffect(() => {\n    getPerformanceData(props.companyID, props.companyName, props.siteName).then(data => {\n      // console.log(\"data.response.lastWastePerCover\",data.response.lastWastePerCover)\n      if (data.response.lastWastePerCover) {\n        setLastWastePerCover(data.response.lastWastePerCover.toFixed(2));\n        setLastWastePerSales(data.response.lastWastePerSales.toFixed(2));\n      }\n\n      setWastePerCover(data.response.wastePerCover.toFixed(2));\n      setWastePerSales(data.response.wastePerSales.toFixed(2));\n      setAverageWasteWeeks(data.response.averageWasteWeeks);\n      setAverageWasteWeeksDate(data.response.averageWasteWeeksDate);\n      setAverageWasteWeeksSales(data.response.averageWasteWeeksSales);\n      setAverageWasteWeeksCovers(data.response.averageWasteWeeksCovers);\n      setNumberOfMealsLost(data.response.numberOfMealsLostInTotal);\n      setTotalCo2Contributions(data.response.totalCo2Contribution);\n      setBestWasteWeeksDate(data.response.bestWasteWeeksDate);\n      setBestWasteWeeksCovers(data.response.bestWasteWeeksCovers);\n      setBestWasteWeeksSales(data.response.bestWasteWeeksSales);\n      setLastWeekDate(data.response.lastWeekDate);\n      setLastWeekSales(data.response.lastWeekSales);\n      setLastWeekCovers(data.response.lastWeekCovers);\n      setBestWasteWeeks(data.response.bestWasteWeeks);\n      setCo2Contributions(data.response.co2Contributions);\n      setCostOfFoodDisposal(data.response.costOfFoodDisposal);\n      setLastMonthSpendOnFoodWaste(data.response.lastMonthSpendOnFoodWaste);\n      setLastWeek(data.response.lastWeek);\n      setNumberOfMealsSavedThisMonth(data.response.numberOfMealsSavedThisMonth);\n    });\n  }, [props.companyID, props.companyName, props.siteName]);\n  return /*#__PURE__*/React.createElement(PerformanceSummaryContext.Provider, {\n    value: {\n      bestWasteWeeks,\n      co2Contributions,\n      costOfFoodDisposal,\n      lastMonthSpendOnFoodWaste,\n      lastWeek,\n      numberOfMealsSavedThisMonth,\n      bestWasteWeeksDate,\n      bestWasteWeeksCovers,\n      bestWasteWeeksSales,\n      lastWeekDate,\n      lastWeekSales,\n      lastWeekCovers,\n      totalCo2Contributions,\n      numberOfMealsLost,\n      averageWasteWeeks,\n      averageWasteWeeksDate,\n      averageWasteWeeksSales,\n      averageWasteWeeksCovers,\n      wastePerCover,\n      wastePerSales,\n      lastWastePerCover,\n      lastWastePerSales\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default PerformanceSummaryContextProvider;","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/contexts/performance-summary-context.js"],"names":["React","createContext","useEffect","getPerformanceData","PerformanceSummaryContext","PerformanceSummaryContextProvider","props","bestWasteWeeks","setBestWasteWeeks","useState","co2Contributions","setCo2Contributions","costOfFoodDisposal","setCostOfFoodDisposal","lastMonthSpendOnFoodWaste","setLastMonthSpendOnFoodWaste","lastWeek","setLastWeek","numberOfMealsSavedThisMonth","setNumberOfMealsSavedThisMonth","bestWasteWeeksDate","setBestWasteWeeksDate","bestWasteWeeksCovers","setBestWasteWeeksCovers","bestWasteWeeksSales","setBestWasteWeeksSales","lastWeekDate","setLastWeekDate","lastWeekSales","setLastWeekSales","lastWeekCovers","setLastWeekCovers","totalCo2Contributions","setTotalCo2Contributions","numberOfMealsLost","setNumberOfMealsLost","averageWasteWeeks","setAverageWasteWeeks","averageWasteWeeksDate","setAverageWasteWeeksDate","averageWasteWeeksSales","setAverageWasteWeeksSales","averageWasteWeeksCovers","setAverageWasteWeeksCovers","wastePerCover","setWastePerCover","wastePerSales","setWastePerSales","lastWastePerCover","setLastWastePerCover","lastWastePerSales","setLastWastePerSales","companyID","companyName","siteName","then","data","response","toFixed","numberOfMealsLostInTotal","totalCo2Contribution","children"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect } from 'react'\nimport { getPerformanceData}  from \"../api\"\n\nexport const PerformanceSummaryContext = createContext()\n\nconst PerformanceSummaryContextProvider = props => {\n\n    const [bestWasteWeeks, setBestWasteWeeks] = React.useState(0);\n    const [co2Contributions, setCo2Contributions] = React.useState(0);\n    const [costOfFoodDisposal, setCostOfFoodDisposal] = React.useState(0);\n    const [lastMonthSpendOnFoodWaste, setLastMonthSpendOnFoodWaste] = React.useState(0);\n    const [lastWeek, setLastWeek] = React.useState(0);\n    const [numberOfMealsSavedThisMonth, setNumberOfMealsSavedThisMonth] = React.useState(0);\n\n    const [bestWasteWeeksDate, setBestWasteWeeksDate] = React.useState(0);\n    const [bestWasteWeeksCovers, setBestWasteWeeksCovers] = React.useState(0);\n    const [bestWasteWeeksSales, setBestWasteWeeksSales] = React.useState(0);\n\n    const [lastWeekDate, setLastWeekDate] = React.useState(0);\n    const [lastWeekSales, setLastWeekSales] = React.useState(0);\n    const [lastWeekCovers, setLastWeekCovers] = React.useState(0);\n\n    const [totalCo2Contributions, setTotalCo2Contributions] = React.useState(0);\n\n    const [numberOfMealsLost, setNumberOfMealsLost] = React.useState(0);\n\n    const [averageWasteWeeks, setAverageWasteWeeks] = React.useState(0);\n    const [averageWasteWeeksDate, setAverageWasteWeeksDate] = React.useState(0);\n    const [averageWasteWeeksSales, setAverageWasteWeeksSales] = React.useState(0);\n    const [averageWasteWeeksCovers, setAverageWasteWeeksCovers] = React.useState(0);\n\n    const [wastePerCover, setWastePerCover] = React.useState(0);\n    const [wastePerSales, setWastePerSales] = React.useState(0);\n\n    const [lastWastePerCover, setLastWastePerCover] = React.useState(0);\n    const [lastWastePerSales, setLastWastePerSales] = React.useState(0);\n\n    useEffect(() => {\n\n          getPerformanceData(props.companyID, props.companyName, props.siteName).then((data) => {\n\n            // console.log(\"data.response.lastWastePerCover\",data.response.lastWastePerCover)\n            if (data.response.lastWastePerCover) {\n              setLastWastePerCover((data.response.lastWastePerCover).toFixed(2));\n              setLastWastePerSales((data.response.lastWastePerSales).toFixed(2));\n            }\n\n            setWastePerCover((data.response.wastePerCover).toFixed(2));\n            setWastePerSales((data.response.wastePerSales).toFixed(2));\n\n            setAverageWasteWeeks(data.response.averageWasteWeeks)\n            setAverageWasteWeeksDate(data.response.averageWasteWeeksDate)\n            setAverageWasteWeeksSales(data.response.averageWasteWeeksSales)\n            setAverageWasteWeeksCovers(data.response.averageWasteWeeksCovers)\n\n\n            setNumberOfMealsLost(data.response.numberOfMealsLostInTotal);\n            setTotalCo2Contributions(data.response.totalCo2Contribution)\n\n            setBestWasteWeeksDate(data.response.bestWasteWeeksDate)\n            setBestWasteWeeksCovers(data.response.bestWasteWeeksCovers)\n            setBestWasteWeeksSales(data.response.bestWasteWeeksSales)\n\n            setLastWeekDate(data.response.lastWeekDate)\n            setLastWeekSales(data.response.lastWeekSales)\n            setLastWeekCovers(data.response.lastWeekCovers)\n\n            setBestWasteWeeks(data.response.bestWasteWeeks)\n            setCo2Contributions(data.response.co2Contributions)\n            setCostOfFoodDisposal(data.response.costOfFoodDisposal)\n            setLastMonthSpendOnFoodWaste(data.response.lastMonthSpendOnFoodWaste)\n            setLastWeek(data.response.lastWeek)\n            setNumberOfMealsSavedThisMonth(data.response.numberOfMealsSavedThisMonth)\n        })\n\n    }, [\n        props.companyID, props.companyName, props.siteName\n    ])\n\n\n  return (\n    <PerformanceSummaryContext.Provider\n        value={{\n            bestWasteWeeks,\n            co2Contributions,\n            costOfFoodDisposal,\n            lastMonthSpendOnFoodWaste,\n            lastWeek,\n            numberOfMealsSavedThisMonth,\n\n            bestWasteWeeksDate,\n            bestWasteWeeksCovers,\n            bestWasteWeeksSales,\n\n            lastWeekDate,\n            lastWeekSales,\n            lastWeekCovers,\n\n            totalCo2Contributions,\n            numberOfMealsLost,\n\n            averageWasteWeeks,\n            averageWasteWeeksDate,\n            averageWasteWeeksSales,\n            averageWasteWeeksCovers,\n\n            wastePerCover,\n            wastePerSales,\n\n            lastWastePerCover,\n            lastWastePerSales\n        }}\n    >\n      {props.children}\n    </PerformanceSummaryContext.Provider>\n  )\n}\n\nexport default PerformanceSummaryContextProvider"]},"metadata":{},"sourceType":"module"}