{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/group.js\";\nimport React, { useState } from 'react';\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport WastePerCover from \"./reports/waste-per-cover-report\";\nimport WastePerSales from \"./reports/waste-per-sales-report\";\nimport DailySalesVsWasteReport from \"./reports/daily-sales-vs-waste-report\";\nimport { AccordionHeading, AccordionBody } from \"./accordion\";\nimport { onDragEnd } from \"../../../helper.js\";\nconst newColumn = [{\n  id: '0',\n  type: 'waste per cover'\n}, {\n  id: '1',\n  type: 'waste per sales'\n}, {\n  id: '2',\n  type: 'daily sales vs waste report'\n}];\nconst columnsNew = {\n  column: {\n    name: \"right-hand-side\",\n    items: newColumn\n  }\n};\nexport default function Group(props) {\n  const [columns, setColumns] = useState(columnsNew);\n  return /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: result => onDragEnd(result, columns, setColumns),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AccordionHeading, {\n    color: \"primPurpleBackgroundColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"DAILY WASTE\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => props.handleChangeForCheckedAndAccordion(!props.showDailyChart, \"dailyChartSwitch\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, props.showDailyChart ? \"X\" : \"| | | \"))), /*#__PURE__*/React.createElement(AccordionBody, {\n    open: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"group_card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, Object.entries(columns).map(([columnId, column], index) => {\n    return /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"\",\n      droppableId: columnId,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"main\", Object.assign({\n      className: \"group_card\"\n    }, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"group_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }\n    }, \"WASTE INPUTS\")), column.items.map(({\n      id,\n      type\n    }, index) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, type === \"waste per cover\" && /*#__PURE__*/React.createElement(Draggable, {\n        draggableId: id,\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 45\n        }\n      }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        className: \"dashboard__draggableReport marginBottomBy1rem\"\n      }, provided.draggableProps, provided.dragHandleProps, {\n        ref: provided.innerRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(WastePerCover, {\n        wastePerCover: props.wastePerCover,\n        setWastePerCover: props.setWastePerCover,\n        showPounds: props.showPoundsWastePerCover,\n        hideReport: props.hideReportWastePerCover,\n        siteName: props.siteNameWastePerCover,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 57\n        }\n      }))), type === \"waste per sales\" && /*#__PURE__*/React.createElement(Draggable, {\n        draggableId: id,\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 45\n        }\n      }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        className: \"dashboard__draggableReport marginBottomBy1rem\"\n      }, provided.draggableProps, provided.dragHandleProps, {\n        ref: provided.innerRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(WastePerSales, {\n        wastePerSales: props.wastePerSales,\n        setWastePerSales: props.setWastePerSales,\n        showPounds: props.showPoundsWastePerSales,\n        hideReport: props.hideReportWastePerSales,\n        siteName: props.siteNameWastePerSales,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 57\n        }\n      }))), type === \"daily sales vs waste report\" && /*#__PURE__*/React.createElement(Draggable, {\n        draggableId: id,\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 45\n        }\n      }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        className: \"dashboard__draggableReport marginBottomBy1rem\"\n      }, provided.draggableProps, provided.dragHandleProps, {\n        ref: provided.innerRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(DailySalesVsWasteReport, {\n        siteName: props.siteNameDailySalesVsWasteReport,\n        showPounds: props.showPoundsDailySalesVsWasteReport,\n        showDailySalesVsWasteReport: props.showDailySalesVsWasteReport,\n        setShowDailySalesVsWasteReport: props.setShowDailySalesVsWasteReport,\n        hideReport: props.hideReportDailySalesVsWasteReport,\n        weeklyDailyLabels: props.weeklyDailyLabels,\n        weeklyDailyRange: props.weeklyDailyRange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 57\n        }\n      }))));\n    })));\n  }))));\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/group.js"],"names":["React","useState","DragDropContext","Draggable","Droppable","WastePerCover","WastePerSales","DailySalesVsWasteReport","AccordionHeading","AccordionBody","onDragEnd","newColumn","id","type","columnsNew","column","name","items","Group","props","columns","setColumns","result","handleChangeForCheckedAndAccordion","showDailyChart","Object","entries","map","columnId","index","provided","droppableProps","innerRef","draggableProps","dragHandleProps","wastePerCover","setWastePerCover","showPoundsWastePerCover","hideReportWastePerCover","siteNameWastePerCover","wastePerSales","setWastePerSales","showPoundsWastePerSales","hideReportWastePerSales","siteNameWastePerSales","siteNameDailySalesVsWasteReport","showPoundsDailySalesVsWasteReport","showDailySalesVsWasteReport","setShowDailySalesVsWasteReport","hideReportDailySalesVsWasteReport","weeklyDailyLabels","weeklyDailyRange"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\n\nimport WastePerCover from \"./reports/waste-per-cover-report\";\nimport WastePerSales from \"./reports/waste-per-sales-report\";\nimport DailySalesVsWasteReport from \"./reports/daily-sales-vs-waste-report\";\n\nimport { AccordionHeading, AccordionBody } from \"./accordion\"\n\nimport {\n    onDragEnd\n  } from \"../../../helper.js\"\n\nconst newColumn = [\n    {\n      id: '0',\n      type: 'waste per cover'\n    },\n    {\n       id: '1',\n       type: 'waste per sales'\n    },\n    {\n        id: '2',\n        type: 'daily sales vs waste report'\n     },\n  ]\n\n\nconst columnsNew = {\ncolumn: {\n    name: \"right-hand-side\",\n    items: newColumn,\n},\n};\n\nexport default function Group(props) {\n\nconst [columns, setColumns] = useState(columnsNew);\n    return (\n\n        <DragDropContext onDragEnd={(result) => onDragEnd(result, columns, setColumns)}>\n\n            <AccordionHeading color={\"primPurpleBackgroundColor\"}>\n                <div className=\"section-title\">DAILY WASTE</div>\n                <div className=\"container\">\n                    <span onClick={() => props.handleChangeForCheckedAndAccordion(!props.showDailyChart, \"dailyChartSwitch\")}>\n                    {props.showDailyChart ? (\"X\"):\"| | | \"}\n                    </span>\n                </div>\n            </AccordionHeading>\n\n            <AccordionBody open={\"\"}>\n                <div className=\"group_card\">\n                    {Object.entries(columns).map(([columnId, column], index) => {\n\n                    return (\n                        <Droppable droppableId=\"\" droppableId={columnId} key={index}>\n                        {(provided) => (\n                            <main className=\"group_card\" {...provided.droppableProps} ref={provided.innerRef}>\n                                <div className=\"group_title\">\n                                    <h1>WASTE INPUTS</h1>\n                                </div>\n                                {column.items.map(({id, type}, index) => {\n                                    return (\n                                        <>\n                                        {type === \"waste per cover\" &&\n                                            <Draggable draggableId={id} index={index}>\n                                                {(provided) => (\n                                                    <div className=\"dashboard__draggableReport marginBottomBy1rem\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                                                        <WastePerCover\n                                                            wastePerCover={props.wastePerCover}\n                                                            setWastePerCover={props.setWastePerCover}\n                                                            showPounds={props.showPoundsWastePerCover}\n                                                            hideReport={props.hideReportWastePerCover}\n                                                            siteName={props.siteNameWastePerCover}\n                                                        />\n                                                    </div>\n                                                )}\n                                            </Draggable>\n                                        }\n\n                                        {type === \"waste per sales\" &&\n                                            <Draggable draggableId={id} index={index}>\n                                                {(provided) => (\n                                                    <div className=\"dashboard__draggableReport marginBottomBy1rem\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                                                        <WastePerSales\n                                                            wastePerSales={props.wastePerSales}\n                                                            setWastePerSales={props.setWastePerSales}\n                                                            showPounds={props.showPoundsWastePerSales}\n                                                            hideReport={props.hideReportWastePerSales}\n                                                            siteName={props.siteNameWastePerSales}\n                                                        />\n                                                    </div>\n                                                )}\n                                            </Draggable>\n                                        }\n\n                                        {type === \"daily sales vs waste report\" &&\n                                            <Draggable draggableId={id} index={index}>\n                                                {(provided) => (\n                                                    <div className=\"dashboard__draggableReport marginBottomBy1rem\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                                                        <DailySalesVsWasteReport\n                                                            siteName={props.siteNameDailySalesVsWasteReport}\n                                                            showPounds={props.showPoundsDailySalesVsWasteReport}\n                                                            showDailySalesVsWasteReport={props.showDailySalesVsWasteReport}\n                                                            setShowDailySalesVsWasteReport={props.setShowDailySalesVsWasteReport}\n                                                            hideReport={props.hideReportDailySalesVsWasteReport}\n                                                            weeklyDailyLabels={props.weeklyDailyLabels}\n                                                            weeklyDailyRange={props.weeklyDailyRange}\n                                                        />\n                                                    </div>\n                                                )}\n                                            </Draggable>\n                                        }\n\n\n                                        </>\n                                    )\n                                })}\n                            </main>\n                                )}\n                        </Droppable>\n                    )})}\n                </div>\n            </AccordionBody>\n\n        </DragDropContext>\n\n\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}