{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/group-one.js\";\nimport React, { useState } from 'react';\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport AiPredictionsReport from \"./reports/ai-predictions-report\";\nimport FoodWasteTrackingProgress from \"./reports/food-waste-target\";\nimport MonthlyWasteChart from \"./reports/monthly-waste-report\"; // import TotalWaste from \"./reports/total-waste-report\";\n\nimport WeeklyWasteTrends from \"./reports/weekly-trend-report\";\nimport { AccordionHeading, AccordionBody } from \"./accordion\";\nimport { setItemInLocalStorage } from \"../../../utilities.js\";\nimport { onDragEnd } from \"../../../helper.js\";\nconst newColumn = [{\n  id: '0',\n  type: 'foodWasteTargetSavings'\n}, {\n  id: '1',\n  type: 'aiPredictions'\n}, {\n  id: '2',\n  type: 'monthlyWaste'\n}, {\n  id: \"3\",\n  type: \"weeklyWasteTrend\"\n}];\nconst columnsNew = {\n  column: {\n    name: \"right-hand-side\",\n    items: newColumn\n  }\n};\nexport default function Group(props) {\n  const [columns, setColumns] = useState(columnsNew);\n  return /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: result => onDragEnd(result, columns, setColumns),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"group_card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, Object.entries(columns).map(([columnId, column], index) => {\n    return /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"\",\n      droppableId: columnId,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"main\", Object.assign({\n      className: \"\"\n    }, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(AccordionHeading, {\n      color: \"lightPrimaryGreenBackGroundColor\",\n      group: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"group_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }\n    }, \"WASTE TRENDS\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => {\n        // props.handleChangeForCheckedAndAccordion(!props.showGroup, \"group\")}\n        props.setShowGroupOne(!props.showGroupOne);\n        setItemInLocalStorage(\"groupOne\", !props.showGroupOne);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 37\n      }\n    }, props.showGroupOne ? \"X\" : \"| | | \"))), column.items.map(({\n      id,\n      type\n    }, index) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, type === \"foodWasteTargetSavings\" && /*#__PURE__*/React.createElement(Draggable, {\n        draggableId: id,\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 41\n        }\n      }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        className: \"dashboard__draggableReport marginBottomBy1rem\"\n      }, provided.draggableProps, provided.dragHandleProps, {\n        ref: provided.innerRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(FoodWasteTrackingProgress, {\n        foodWasteTargetSavings: props.foodWasteTargetSavings,\n        setFoodWasteTargetSavings: props.setFoodWasteTargetSavings,\n        hideReport: props.hideReportFoodWasteTargetSavings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 53\n        }\n      }))), type === \"aiPredictions\" && /*#__PURE__*/React.createElement(Draggable, {\n        draggableId: id,\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 41\n        }\n      }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        className: \"dashboard__aiPredictionsReport marginBottomBy1rem\"\n      }, provided.draggableProps, provided.dragHandleProps, {\n        ref: provided.innerRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(AiPredictionsReport, {\n        aiPredictions: props.aiPredictions,\n        setAiPredictions: props.setAiPredictions,\n        showPounds: props.showPoundsAiPredictions,\n        hideReport: props.hideReportAiPredictions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 49\n        }\n      }))), type === \"monthlyWaste\" && /*#__PURE__*/React.createElement(Draggable, {\n        draggableId: id,\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 41\n        }\n      }, provided => /*#__PURE__*/React.createElement(\"section\", Object.assign({\n        className: \"dashboard__report\"\n      }, provided.draggableProps, provided.dragHandleProps, {\n        ref: provided.innerRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(MonthlyWasteChart, {\n        siteName: props.siteNameMonthlyChart,\n        showPounds: props.showPoundsMonthlyChart,\n        showMonthlyChart: props.showMonthlyChart,\n        setShowMonthlyChart: props.setShowMonthlyChart,\n        handleChangeForCheckedAndAccordion: props.handleChangeForCheckedAndAccordionMonthlyChart,\n        hideReport: props.hideReportMonthlyChart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 53\n        }\n      }))), type === \"weeklyWasteTrend\" && /*#__PURE__*/React.createElement(Draggable, {\n        draggableId: id,\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 41\n        }\n      }, provided => /*#__PURE__*/React.createElement(\"section\", Object.assign({\n        className: \"dashboard__report\"\n      }, provided.draggableProps, provided.dragHandleProps, {\n        ref: provided.innerRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"weeklyWasteTrend__reportWrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(WeeklyWasteTrends, {\n        siteName: props.siteNameWeeklyTrend,\n        showPounds: props.showPoundsWeeklyTrend,\n        showWeeklyTrendChart: props.showWeeklyTrendChart,\n        setShowWeeklyTrendChart: props.setShowWeeklyTrendChart,\n        handleChangeForCheckedAndAccordion: props.handleChangeForCheckedAndAccordionWeeklyTrend,\n        hideReport: props.hideReportWeeklyTrend,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 49\n        }\n      })))));\n    })));\n  })));\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/group-one.js"],"names":["React","useState","DragDropContext","Draggable","Droppable","AiPredictionsReport","FoodWasteTrackingProgress","MonthlyWasteChart","WeeklyWasteTrends","AccordionHeading","AccordionBody","setItemInLocalStorage","onDragEnd","newColumn","id","type","columnsNew","column","name","items","Group","props","columns","setColumns","result","Object","entries","map","columnId","index","provided","droppableProps","innerRef","setShowGroupOne","showGroupOne","draggableProps","dragHandleProps","foodWasteTargetSavings","setFoodWasteTargetSavings","hideReportFoodWasteTargetSavings","aiPredictions","setAiPredictions","showPoundsAiPredictions","hideReportAiPredictions","siteNameMonthlyChart","showPoundsMonthlyChart","showMonthlyChart","setShowMonthlyChart","handleChangeForCheckedAndAccordionMonthlyChart","hideReportMonthlyChart","siteNameWeeklyTrend","showPoundsWeeklyTrend","showWeeklyTrendChart","setShowWeeklyTrendChart","handleChangeForCheckedAndAccordionWeeklyTrend","hideReportWeeklyTrend"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;AAEA,OAAOC,mBAAP,MAAgC,iCAAhC;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA,OAAOC,iBAAP,MAA8B,gCAA9B,C,CACA;;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AAEA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,aAAhD;AAEA,SAASC,qBAAT,QAAsC,uBAAtC;AAEA,SACIC,SADJ,QAES,oBAFT;AAIA,MAAMC,SAAS,GAAG,CACd;AACEC,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADc,EAKd;AACGD,EAAAA,EAAE,EAAE,GADP;AAEGC,EAAAA,IAAI,EAAE;AAFT,CALc,EASd;AACID,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,IAAI,EAAE;AAFV,CATc,EAad;AACID,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,IAAI,EAAE;AAFV,CAbc,CAAlB;AAoBA,MAAMC,UAAU,GAAG;AACnBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,IAAI,EAAE,iBADF;AAEJC,IAAAA,KAAK,EAAEN;AAFH;AADW,CAAnB;AAOA,eAAe,SAASO,KAAT,CAAeC,KAAf,EAAsB;AAErC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAACe,UAAD,CAAtC;AAII,sBAEI,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAGQ,MAAD,IAAYZ,SAAS,CAACY,MAAD,EAASF,OAAT,EAAkBC,UAAlB,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,MAAM,CAACC,OAAP,CAAeJ,OAAf,EAAwBK,GAAxB,CAA4B,CAAC,CAACC,QAAD,EAAWX,MAAX,CAAD,EAAqBY,KAArB,KAA+B;AAE5D,wBACI,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAC,EAAvB;AAA0B,MAAA,WAAW,EAAED,QAAvC;AAAiD,MAAA,GAAG,EAAEC,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEC,QAAD,iBACG;AAAM,MAAA,SAAS,EAAC;AAAhB,OAAuBA,QAAQ,CAACC,cAAhC;AAAgD,MAAA,GAAG,EAAED,QAAQ,CAACE,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKI,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE,kCAAzB;AAA6D,MAAA,KAAK,EAAE,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,OAAO,EAAE,MAAM;AACb;AACIX,QAAAA,KAAK,CAACY,eAAN,CACI,CAACZ,KAAK,CAACa,YADX;AAGAvB,QAAAA,qBAAqB,CACjB,UADiB,EAEjB,CAACU,KAAK,CAACa,YAFU,CAArB;AAIH,OATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWKb,KAAK,CAACa,YAAN,GAAsB,GAAtB,GAA2B,QAXhC,CADJ,CAFJ,CALJ,EAwBKjB,MAAM,CAACE,KAAP,CAAaQ,GAAb,CAAiB,CAAC;AAACb,MAAAA,EAAD;AAAKC,MAAAA;AAAL,KAAD,EAAac,KAAb,KAAuB;AACrC,0BACI,0CACCd,IAAI,KAAK,wBAAT,iBACG,oBAAC,SAAD;AAAW,QAAA,WAAW,EAAED,EAAxB;AAA4B,QAAA,KAAK,EAAEe,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMC,QAAD,iBACG;AAAK,QAAA,SAAS,EAAC;AAAf,SAAmEA,QAAQ,CAACK,cAA5E,EAAgGL,QAAQ,CAACM,eAAzG;AAA0H,QAAA,GAAG,EAAEN,QAAQ,CAACE,QAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACI,oBAAC,yBAAD;AACI,QAAA,sBAAsB,EAAEX,KAAK,CAACgB,sBADlC;AAEI,QAAA,yBAAyB,EAAEhB,KAAK,CAACiB,yBAFrC;AAGI,QAAA,UAAU,EAAEjB,KAAK,CAACkB,gCAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFR,CAFJ,EAeCxB,IAAI,KAAK,eAAT,iBACG,oBAAC,SAAD;AAAW,QAAA,WAAW,EAAED,EAAxB;AAA4B,QAAA,KAAK,EAAEe,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMC,QAAD,iBAEG;AAAK,QAAA,SAAS,EAAC;AAAf,SAAuEA,QAAQ,CAACK,cAAhF,EAAoGL,QAAQ,CAACM,eAA7G;AAA8H,QAAA,GAAG,EAAEN,QAAQ,CAACE,QAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,oBAAC,mBAAD;AACI,QAAA,aAAa,EAAEX,KAAK,CAACmB,aADzB;AAEI,QAAA,gBAAgB,EAAEnB,KAAK,CAACoB,gBAF5B;AAGI,QAAA,UAAU,EAAEpB,KAAK,CAACqB,uBAHtB;AAII,QAAA,UAAU,EAAErB,KAAK,CAACsB,uBAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAHR,CAhBJ,EA+BC5B,IAAI,KAAK,cAAT,iBACG,oBAAC,SAAD;AAAW,QAAA,WAAW,EAAED,EAAxB;AAA4B,QAAA,KAAK,EAAEe,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMC,QAAD,iBACG;AAAS,QAAA,SAAS,EAAC;AAAnB,SAA2CA,QAAQ,CAACK,cAApD,EAAwEL,QAAQ,CAACM,eAAjF;AAAkG,QAAA,GAAG,EAAEN,QAAQ,CAACE,QAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACI,oBAAC,iBAAD;AACI,QAAA,QAAQ,EAAEX,KAAK,CAACuB,oBADpB;AAEI,QAAA,UAAU,EAAEvB,KAAK,CAACwB,sBAFtB;AAGI,QAAA,gBAAgB,EAAExB,KAAK,CAACyB,gBAH5B;AAII,QAAA,mBAAmB,EAAEzB,KAAK,CAAC0B,mBAJ/B;AAKI,QAAA,kCAAkC,EAAE1B,KAAK,CAAC2B,8CAL9C;AAMI,QAAA,UAAU,EAAE3B,KAAK,CAAC4B,sBANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFR,CAhCJ,EAgDClC,IAAI,KAAK,kBAAT,iBACG,oBAAC,SAAD;AAAW,QAAA,WAAW,EAAED,EAAxB;AAA4B,QAAA,KAAK,EAAEe,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEC,QAAD,iBACG;AAAS,QAAA,SAAS,EAAC;AAAnB,SAA2CA,QAAQ,CAACK,cAApD,EAAwEL,QAAQ,CAACM,eAAjF;AAAkG,QAAA,GAAG,EAAEN,QAAQ,CAACE,QAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACI;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,iBAAD;AACI,QAAA,QAAQ,EAAEX,KAAK,CAAC6B,mBADpB;AAEI,QAAA,UAAU,EAAE7B,KAAK,CAAC8B,qBAFtB;AAGI,QAAA,oBAAoB,EAAE9B,KAAK,CAAC+B,oBAHhC;AAII,QAAA,uBAAuB,EAAE/B,KAAK,CAACgC,uBAJnC;AAKI,QAAA,kCAAkC,EAAEhC,KAAK,CAACiC,6CAL9C;AAMI,QAAA,UAAU,EAAEjC,KAAK,CAACkC,qBANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADJ,CAFJ,CAjDJ,CADJ;AAuEH,KAxEA,CAxBL,CAFJ,CADJ;AAuGE,GAzGD,CADL,CADJ,CAFJ;AAoHH","sourcesContent":["import React, {useState} from 'react'\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\n\nimport AiPredictionsReport from \"./reports/ai-predictions-report\";\nimport FoodWasteTrackingProgress from \"./reports/food-waste-target\";\nimport MonthlyWasteChart from \"./reports/monthly-waste-report\";\n// import TotalWaste from \"./reports/total-waste-report\";\nimport WeeklyWasteTrends from \"./reports/weekly-trend-report\";\n\nimport { AccordionHeading, AccordionBody } from \"./accordion\"\n\nimport { setItemInLocalStorage } from \"../../../utilities.js\";\n\nimport {\n    onDragEnd\n  } from \"../../../helper.js\"\n\nconst newColumn = [\n    {\n      id: '0',\n      type: 'foodWasteTargetSavings'\n    },\n    {\n       id: '1',\n       type: 'aiPredictions'\n    },\n    {\n        id: '2',\n        type: 'monthlyWaste'\n    },\n    {\n        id: \"3\",\n        type: \"weeklyWasteTrend\"\n    }\n  ]\n\n\nconst columnsNew = {\ncolumn: {\n    name: \"right-hand-side\",\n    items: newColumn,\n},\n};\n\nexport default function Group(props) {\n\nconst [columns, setColumns] = useState(columnsNew);\n\n\n\n    return (\n\n        <DragDropContext onDragEnd={(result) => onDragEnd(result, columns, setColumns)}>\n            <div className=\"group_card\">\n                {Object.entries(columns).map(([columnId, column], index) => {\n\n                return (\n                    <Droppable droppableId=\"\" droppableId={columnId} key={index}>\n                    {(provided) => (\n                        <main className=\"\" {...provided.droppableProps} ref={provided.innerRef}>\n                            {/* <div className=\"group_title\">\n                                <h1>WASTE TRENDS</h1>\n                            </div> */}\n\n                            <AccordionHeading color={\"lightPrimaryGreenBackGroundColor\"} group={true}>\n                                <div className=\"group_title\">WASTE TRENDS</div>\n                                <div className=\"container\">\n                                    <span onClick={() => {\n                                            // props.handleChangeForCheckedAndAccordion(!props.showGroup, \"group\")}\n                                                props.setShowGroupOne(\n                                                    !props.showGroupOne\n                                                );\n                                                setItemInLocalStorage(\n                                                    \"groupOne\",\n                                                    !props.showGroupOne\n                                                );\n                                            }}\n                                        >\n                                        {props.showGroupOne ? (\"X\"):\"| | | \"}\n                                    </span>\n                                </div>\n                            </AccordionHeading>\n\n                            {column.items.map(({id, type}, index) => {\n                                return (\n                                    <>\n                                    {type === \"foodWasteTargetSavings\" &&\n                                        <Draggable draggableId={id} index={index}>\n                                            {(provided) => (\n                                                <div className=\"dashboard__draggableReport marginBottomBy1rem\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                                                    <FoodWasteTrackingProgress\n                                                        foodWasteTargetSavings={props.foodWasteTargetSavings}\n                                                        setFoodWasteTargetSavings={props.setFoodWasteTargetSavings}\n                                                        hideReport={props.hideReportFoodWasteTargetSavings}\n                                                    />\n                                                </div>\n                                            )}\n                                        </Draggable>\n                                    }\n\n                                    {type === \"aiPredictions\" &&\n                                        <Draggable draggableId={id} index={index}>\n                                            {(provided) => (\n\n                                                <div className=\"dashboard__aiPredictionsReport marginBottomBy1rem\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                                                <AiPredictionsReport\n                                                    aiPredictions={props.aiPredictions}\n                                                    setAiPredictions={props.setAiPredictions}\n                                                    showPounds={props.showPoundsAiPredictions}\n                                                    hideReport={props.hideReportAiPredictions}\n                                                />\n                                                </div>\n                                            )}\n                                        </Draggable>\n                                    }\n\n                                    {type === \"monthlyWaste\" &&\n                                        <Draggable draggableId={id} index={index}>\n                                            {(provided) => (\n                                                <section className=\"dashboard__report\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                                                    <MonthlyWasteChart\n                                                        siteName={props.siteNameMonthlyChart}\n                                                        showPounds={props.showPoundsMonthlyChart}\n                                                        showMonthlyChart={props.showMonthlyChart}\n                                                        setShowMonthlyChart={props.setShowMonthlyChart}\n                                                        handleChangeForCheckedAndAccordion={props.handleChangeForCheckedAndAccordionMonthlyChart}\n                                                        hideReport={props.hideReportMonthlyChart}\n                                                    />\n                                                </section>\n                                            )}\n                                        </Draggable>\n                                    }\n\n                                    {type === \"weeklyWasteTrend\" &&\n                                        <Draggable draggableId={id} index={index}>\n                                        {(provided) => (\n                                            <section className=\"dashboard__report\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                                                <div className=\"weeklyWasteTrend__reportWrapper\">\n                                                <WeeklyWasteTrends\n                                                    siteName={props.siteNameWeeklyTrend}\n                                                    showPounds={props.showPoundsWeeklyTrend}\n                                                    showWeeklyTrendChart={props.showWeeklyTrendChart}\n                                                    setShowWeeklyTrendChart={props.setShowWeeklyTrendChart}\n                                                    handleChangeForCheckedAndAccordion={props.handleChangeForCheckedAndAccordionWeeklyTrend}\n                                                    hideReport={props.hideReportWeeklyTrend}\n                                                />\n                                                </div>\n                                            </section>\n                                        )}\n                                        </Draggable>\n                                    }\n\n\n                                    </>\n                                )\n                            })}\n                        </main>\n                            )}\n                    </Droppable>\n                )})}\n            </div>\n        </DragDropContext>\n\n\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}