{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/targets/targets-forms.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\"; // const sectors = [\n//   {\n//     value: 3.447,\n//     label: \"Restaurants\"\n//   },\n//   {\n//     value: 3.511,\n//     label: \"Quick Service Restaurants (QSR)\"\n//   },\n//   {\n//     value: 2.09,\n//     label: \"Pubs\"\n//   },\n//   {\n//     value: 4.008,\n//     label: \"Hotels\"\n//   },\n//   {\n//     value: 4.028,\n//     label: \"Leisure\"\n//   },\n//   {\n//     value: 2.208,\n//     label: \"Staff catering\"\n//   },\n//   {\n//     value: 1.929,\n//     label: \"Healthcare\"\n//   },\n//   {\n//     value: 2.075,\n//     label: \"Education\"\n//   },\n//   {\n//     value: 1.656,\n//     label: \"Services\"\n//   }\n// ];\n\nconst savings = [{\n  value: 0.0,\n  label: \"none\"\n}, {\n  value: 0.1,\n  label: \"10%\"\n}, {\n  value: 0.2,\n  label: \"20%\"\n}, {\n  value: 0.3,\n  label: \"30%\"\n}, {\n  value: 0.4,\n  label: \"40%\"\n}, {\n  value: 0.5,\n  label: \"50%\"\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n      height: \"10vh\"\n    }\n  }\n}));\nexport default function MultilineTextFields(props) {\n  const classes = useStyles();\n\n  if (props.steps === 0) {\n    return (\n      /*#__PURE__*/\n      // <form className={classes.root} noValidate autoComplete=\"off\">\n      //     <div>\n      //         <TextField\n      //             select\n      //             label=\"Sectors\"\n      //             value={props.poundsKGconverter}\n      //             name=\"sectors\"\n      //             onChange={props.handleChange}\n      //             helperText=\"Please select your sectors\"\n      //         >\n      //             {sectors.map((option, i) => (\n      //             <MenuItem key={option.value} value={option.value}>\n      //                 {option.label}\n      //             </MenuItem>\n      //             ))}\n      //         </TextField>\n      //     </div>\n      // </form>\n      React.createElement(\"form\", {\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        select: true,\n        label: \"% Savings\",\n        value: props.savingPercentage,\n        name: \"savings\",\n        onChange: props.handleChange,\n        SelectProps: {\n          native: true\n        },\n        helperText: \"Please select your % savings\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }, savings.map(option => /*#__PURE__*/React.createElement(\"option\", {\n        key: option.value,\n        value: option.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }\n      }, option.label)))))\n    );\n  } // else if (props.steps === 1) {\n  //   return (\n  //     <form className={classes.root} noValidate autoComplete=\"off\">\n  //         <div>\n  //             <TextField\n  //                 select\n  //                 label=\"% Savings\"\n  //                 value={props.savingPercentage}\n  //                 name=\"savings\"\n  //                 onChange={props.handleChange}\n  //                 SelectProps={{\n  //                 native: true\n  //                 }}\n  //                 helperText=\"Please select your % savings\"\n  //             >\n  //                 {savings.map((option) => (\n  //                 <option key={option.value} value={option.value}>\n  //                     {option.label}\n  //                 </option>\n  //                 ))}\n  //             </TextField>\n  //         </div>\n  //     </form>\n  //   );\n  // } else {\n  //   return (\n  //       <form className={classes.root} noValidate autoComplete=\"off\">\n  //       <TextField\n  //           label=\"Number of Covers\"\n  //           type=\"number\"\n  //           onChange={props.handleChange}\n  //           name=\"numberOfCovers\"\n  //           InputLabelProps={{\n  //               shrink: true,\n  //           }}\n  //           />\n  //       </form>\n  //   );\n  // }\n\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/targets/targets-forms.js"],"names":["React","makeStyles","TextField","MenuItem","savings","value","label","useStyles","theme","root","margin","spacing","width","height","MultilineTextFields","props","classes","steps","savingPercentage","handleChange","native","map","option"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\n// const sectors = [\n//   {\n//     value: 3.447,\n//     label: \"Restaurants\"\n//   },\n//   {\n//     value: 3.511,\n//     label: \"Quick Service Restaurants (QSR)\"\n//   },\n//   {\n//     value: 2.09,\n//     label: \"Pubs\"\n//   },\n//   {\n//     value: 4.008,\n//     label: \"Hotels\"\n//   },\n//   {\n//     value: 4.028,\n//     label: \"Leisure\"\n//   },\n//   {\n//     value: 2.208,\n//     label: \"Staff catering\"\n//   },\n//   {\n//     value: 1.929,\n//     label: \"Healthcare\"\n//   },\n//   {\n//     value: 2.075,\n//     label: \"Education\"\n//   },\n//   {\n//     value: 1.656,\n//     label: \"Services\"\n//   }\n// ];\n\nconst savings = [\n  {\n    value: 0.0,\n    label: \"none\"\n  },\n  {\n    value: 0.1,\n    label: \"10%\"\n  },\n  {\n    value: 0.2,\n    label: \"20%\"\n  },\n  {\n    value: 0.3,\n    label: \"30%\"\n  },\n  {\n    value: 0.4,\n    label: \"40%\"\n  },\n  {\n    value: 0.5,\n    label: \"50%\"\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n      height: \"10vh\"\n    }\n  },\n}));\n\nexport default function MultilineTextFields(props) {\n  const classes = useStyles();\n\n  if (props.steps === 0) {\n    return (\n      // <form className={classes.root} noValidate autoComplete=\"off\">\n      //     <div>\n      //         <TextField\n      //             select\n      //             label=\"Sectors\"\n      //             value={props.poundsKGconverter}\n      //             name=\"sectors\"\n      //             onChange={props.handleChange}\n      //             helperText=\"Please select your sectors\"\n      //         >\n      //             {sectors.map((option, i) => (\n      //             <MenuItem key={option.value} value={option.value}>\n      //                 {option.label}\n      //             </MenuItem>\n      //             ))}\n      //         </TextField>\n      //     </div>\n      // </form>\n\n      <form className={classes.root} noValidate autoComplete=\"off\">\n          <div>\n              <TextField\n                  select\n                  label=\"% Savings\"\n                  value={props.savingPercentage}\n                  name=\"savings\"\n                  onChange={props.handleChange}\n                  SelectProps={{\n                  native: true\n                  }}\n                  helperText=\"Please select your % savings\"\n              >\n                  {savings.map((option) => (\n                  <option key={option.value} value={option.value}>\n                      {option.label}\n                  </option>\n                  ))}\n              </TextField>\n          </div>\n      </form>\n\n    );\n  }\n\n  // else if (props.steps === 1) {\n  //   return (\n  //     <form className={classes.root} noValidate autoComplete=\"off\">\n  //         <div>\n  //             <TextField\n  //                 select\n  //                 label=\"% Savings\"\n  //                 value={props.savingPercentage}\n  //                 name=\"savings\"\n  //                 onChange={props.handleChange}\n  //                 SelectProps={{\n  //                 native: true\n  //                 }}\n  //                 helperText=\"Please select your % savings\"\n  //             >\n  //                 {savings.map((option) => (\n  //                 <option key={option.value} value={option.value}>\n  //                     {option.label}\n  //                 </option>\n  //                 ))}\n  //             </TextField>\n  //         </div>\n  //     </form>\n\n  //   );\n  // } else {\n  //   return (\n  //       <form className={classes.root} noValidate autoComplete=\"off\">\n  //       <TextField\n  //           label=\"Number of Covers\"\n  //           type=\"number\"\n  //           onChange={props.handleChange}\n  //           name=\"numberOfCovers\"\n  //           InputLabelProps={{\n  //               shrink: true,\n  //           }}\n  //           />\n  //       </form>\n  //   );\n  // }\n}\n"]},"metadata":{},"sourceType":"module"}