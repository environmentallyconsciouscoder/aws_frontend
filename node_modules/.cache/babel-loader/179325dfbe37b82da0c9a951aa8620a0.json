{"ast":null,"code":"import moment from \"moment\";\n/**\n * This returns a number string with 2 decimal places without rounding up 0.000\n * @param {String} number\n */\n\nexport const keepTwoDecimalPlacesWithoutRoundingUp = num => {\n  // console.log(\"num\",num);\n  let result = 0;\n\n  if (num !== 0) {\n    let str;\n    str = num.toString().split('.');\n    var res = str[1].slice(0, 2);\n    result = str[0] + '.' + res;\n    return result;\n  } else {\n    return result;\n  }\n\n  ;\n};\n/**\n* Returns true if number is an integer\n* @param {number}\n* @returns\n*/\n\nexport const isInt = n => {\n  return n % 1 === 0;\n};\n/**\n* Returns data format 23-29 Aug\n* @param {string}\n* @returns\n*/\n\nexport const weeklyDateFormat = startDayOfTheWeek => {\n  let formatedDateLabel = [];\n  let monthName;\n  const startDate = moment(startDayOfTheWeek);\n  const endDate = moment(startDayOfTheWeek).add(6, 'days');\n  formatedDateLabel.push(parseInt(startDate.format(\"D\")));\n  formatedDateLabel.push(parseInt(endDate.format(\"D\")));\n  monthName = startDate.format(\"MMMM\").substr(0, 3);\n  return monthName + \" \" + formatedDateLabel[0] + \"-\" + formatedDateLabel[1];\n};\n/**\n * Return the current week of the year\n * @returns {Number}\n */\n\nexport const getCurrentWeek = () => {\n  const formattedDate = moment().format('MM-DD-YYYY');\n  const currentWeek = moment(formattedDate, \"MMDDYYYY\").isoWeek();\n  return currentWeek;\n};\n/**\n * Return indexes require red color\n * @returns {object}\n */\n\nexport const getIndexesForBackgroundColours = (wasteValues, allCappings, type, activeState) => {\n  // console.log(\"wasteValues\",wasteValues)\n  // console.log(\"allCappings\",allCappings)\n  // console.log(\"type\",type)\n  // console.log(\"activeState\",activeState)\n  let cwTarget = allCappings[type][0].value;\n  let spoilageTarget = allCappings[type][1].value;\n  let prepTarget = allCappings[type][2].value; // console.log(\"cwTarget\",cwTarget)\n  // console.log(\"spoilageTarget\",spoilageTarget)\n  // console.log(\"prepTarget\",prepTarget)\n\n  let targetIndexArray = []; // let coverWasteOverTargetIndexArray = []\n  // let spoilageWasteOverTargetIndexArray = []\n  // let prepWasteOverTargetIndexArray = []\n  // console.log(\"activeState\",activeState)\n  // console.log(\"activeState.coverSelector\",activeState.coverSelector)\n  // console.log(\"activeState.spoilageSelector\",activeState.spoilageSelector)\n  // console.log(\"activeState.preparationSelector\",activeState.preparationSelector)\n\n  if (activeState.allSelector) {\n    wasteValues.map((data, i) => {\n      // console.log(\"cwTarget\",cwTarget)\n      // console.log(\"data\",data)\n      // console.log(\"data >= cwTarget\",data >= cwTarget)\n      const total = cwTarget + spoilageTarget + prepTarget;\n\n      if (data >= total) {\n        targetIndexArray.push(i);\n      }\n\n      return \"\";\n    });\n  } else if (activeState.coverSelector) {\n    wasteValues.map((data, i) => {\n      if (data >= cwTarget) {\n        targetIndexArray.push(i);\n      }\n\n      return \"\";\n    });\n  } else if (activeState.spoilageSelector) {\n    wasteValues.map((data, i) => {\n      if (data >= spoilageTarget) {\n        targetIndexArray.push(i);\n      }\n\n      return \"\";\n    });\n  } else if (activeState.preparationSelector) {\n    wasteValues.map((data, i) => {\n      if (data >= prepTarget) {\n        targetIndexArray.push(i);\n      }\n\n      return \"\";\n    });\n  } // console.log(\"targetIndexArray\",targetIndexArray);\n\n\n  return {\n    targetIndexArray: targetIndexArray\n  };\n};\nexport const onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: { ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n/**\n* Return the current week of the year\n* @param {string} date format\n* @returns {Number}\n*/\n\nexport const currentWeek = date => {\n  const currentWeek = moment(date, \"MMDDYYYY\").isoWeek();\n  return currentWeek;\n};\nexport const colors = [\"rgb(133, 165, 101)\", \"rgb(15, 128, 140)\", \"rgb(140, 112, 140)\", \"rgb(47, 67, 30)\", \"rgb(56, 166, 126)\", \"rgb(106, 217, 123)\", \"rgb(188, 242, 107)\", \"rgb(47, 64, 30)\", \"rgb(68, 89, 46)\", \"rgb(178, 191, 80)\", \"rgb(133, 165, 101)\", \"rgb(15, 128, 140)\", \"rgb(140, 112, 140)\", \"rgb(47, 67, 30)\", \"rgb(56, 166, 126)\", \"rgb(106, 217, 123)\", \"rgb(188, 242, 107)\", \"rgb(47, 64, 30)\", \"rgb(68, 89, 46)\", \"rgb(178, 191, 80)\", \"rgb(133, 165, 101)\", \"rgb(15, 128, 140)\", \"rgb(140, 112, 140)\", \"rgb(47, 67, 30)\", \"rgb(56, 166, 126)\", \"rgb(106, 217, 123)\", \"rgb(188, 242, 107)\", \"rgb(47, 64, 30)\", \"rgb(68, 89, 46)\", \"rgb(178, 191, 80)\", \"rgb(133, 165, 101)\", \"rgb(15, 128, 140)\", \"rgb(140, 112, 140)\", \"rgb(47, 67, 30)\", \"rgb(56, 166, 126)\", \"rgb(106, 217, 123)\", \"rgb(188, 242, 107)\", \"rgb(47, 64, 30)\", \"rgb(68, 89, 46)\", \"rgb(178, 191, 80)\", \"rgb(133, 165, 101)\", \"rgb(15, 128, 140)\", \"rgb(140, 112, 140)\", \"rgb(47, 67, 30)\", \"rgb(56, 166, 126)\", \"rgb(106, 217, 123)\", \"rgb(188, 242, 107)\", \"rgb(47, 64, 30)\", \"rgb(68, 89, 46)\", \"rgb(178, 191, 80)\", \"rgb(133, 165, 101)\", \"rgb(15, 128, 140)\", \"rgb(140, 112, 140)\", \"rgb(47, 67, 30)\", \"rgb(56, 166, 126)\", \"rgb(106, 217, 123)\", \"rgb(188, 242, 107)\", \"rgb(47, 64, 30)\", \"rgb(68, 89, 46)\", \"rgb(178, 191, 80)\", \"rgb(133, 165, 101)\", \"rgb(15, 128, 140)\", \"rgb(140, 112, 140)\", \"rgb(47, 67, 30)\", \"rgb(56, 166, 126)\", \"rgb(106, 217, 123)\", \"rgb(188, 242, 107)\", \"rgb(47, 64, 30)\", \"rgb(68, 89, 46)\", \"rgb(178, 191, 80)\"];","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/src/helper.js"],"names":["moment","keepTwoDecimalPlacesWithoutRoundingUp","num","result","str","toString","split","res","slice","isInt","n","weeklyDateFormat","startDayOfTheWeek","formatedDateLabel","monthName","startDate","endDate","add","push","parseInt","format","substr","getCurrentWeek","formattedDate","currentWeek","isoWeek","getIndexesForBackgroundColours","wasteValues","allCappings","type","activeState","cwTarget","value","spoilageTarget","prepTarget","targetIndexArray","allSelector","map","data","i","total","coverSelector","spoilageSelector","preparationSelector","onDragEnd","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","items","destItems","removed","splice","index","column","copiedItems","date","colors"],"mappings":"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","sourcesContent":["import moment from \"moment\";\n\n/**\n * This returns a number string with 2 decimal places without rounding up 0.000\n * @param {String} number\n */\n export const keepTwoDecimalPlacesWithoutRoundingUp = (num) => {\n    // console.log(\"num\",num);\n    let result = 0;\n    if (num !== 0) {\n        let str;\n        str = num.toString().split('.');\n        var res = str[1].slice(0, 2);\n        result = str[0]+'.'+res;\n        return result;\n    } else {\n        return result;\n    };\n  };\n\n  /**\n * Returns true if number is an integer\n * @param {number}\n * @returns\n */\nexport const isInt = (n) => {\n    return n % 1 === 0;\n};\n\n  /**\n * Returns data format 23-29 Aug\n * @param {string}\n * @returns\n */\nexport const weeklyDateFormat = (startDayOfTheWeek) => {\n    let formatedDateLabel = [];\n    let monthName;\n\n    const startDate = moment(startDayOfTheWeek);\n    const endDate = moment(startDayOfTheWeek).add(6, 'days');\n\n    formatedDateLabel.push(parseInt(startDate.format(\"D\")));\n    formatedDateLabel.push(parseInt(endDate.format(\"D\")));\n\n    monthName = startDate.format(\"MMMM\").substr(0, 3);\n    return  monthName + \" \" + formatedDateLabel[0] + \"-\" + formatedDateLabel[1];\n};\n\n/**\n * Return the current week of the year\n * @returns {Number}\n */\n export const getCurrentWeek = () => {\n    const formattedDate = moment().format('MM-DD-YYYY');\n    const currentWeek = moment(formattedDate, \"MMDDYYYY\").isoWeek();\n    return currentWeek;\n  };\n\n/**\n * Return indexes require red color\n * @returns {object}\n */\n  export const getIndexesForBackgroundColours =(wasteValues, allCappings, type, activeState) => {\n\n    // console.log(\"wasteValues\",wasteValues)\n    // console.log(\"allCappings\",allCappings)\n    // console.log(\"type\",type)\n    // console.log(\"activeState\",activeState)\n\n    let cwTarget = allCappings[type][0].value\n    let spoilageTarget =  allCappings[type][1].value\n    let prepTarget =  allCappings[type][2].value\n\n    // console.log(\"cwTarget\",cwTarget)\n    // console.log(\"spoilageTarget\",spoilageTarget)\n    // console.log(\"prepTarget\",prepTarget)\n\n    let targetIndexArray = []\n    // let coverWasteOverTargetIndexArray = []\n    // let spoilageWasteOverTargetIndexArray = []\n    // let prepWasteOverTargetIndexArray = []\n\n    // console.log(\"activeState\",activeState)\n    // console.log(\"activeState.coverSelector\",activeState.coverSelector)\n    // console.log(\"activeState.spoilageSelector\",activeState.spoilageSelector)\n    // console.log(\"activeState.preparationSelector\",activeState.preparationSelector)\n\n    if (activeState.allSelector) {\n        wasteValues.map((data, i) => {\n            // console.log(\"cwTarget\",cwTarget)\n            // console.log(\"data\",data)\n            // console.log(\"data >= cwTarget\",data >= cwTarget)\n            const total = cwTarget + spoilageTarget + prepTarget\n\n            if (data >= total) {\n                targetIndexArray.push(i)\n            }\n            return \"\"\n        })\n    } else if (activeState.coverSelector) {\n\n        wasteValues.map((data, i) => {\n            if (data >= cwTarget) {\n                targetIndexArray.push(i)\n            }\n            return \"\"\n        })\n\n    } else if (activeState.spoilageSelector) {\n\n        wasteValues.map((data, i) => {\n            if (data >= spoilageTarget) {\n                targetIndexArray.push(i)\n            }\n            return \"\"\n        })\n\n    } else if (activeState.preparationSelector) {\n\n        wasteValues.map((data, i) => {\n            if (data >= prepTarget) {\n                targetIndexArray.push(i)\n            }\n            return \"\"\n        })\n\n    }\n    // console.log(\"targetIndexArray\",targetIndexArray);\n\n    return {\n        targetIndexArray: targetIndexArray,\n    }\n\n  }\n\n  export const onDragEnd = (result, columns, setColumns) => {\n    if (!result.destination) return;\n    const { source, destination } = result;\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n      const [removed] = sourceItems.splice(source.index, 1);\n      destItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems\n        }\n      });\n\n    } else {\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n      const [removed] = copiedItems.splice(source.index, 1);\n      copiedItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...column,\n          items: copiedItems\n        }\n      });\n    }\n  };\n\n  /**\n * Return the current week of the year\n * @param {string} date format\n * @returns {Number}\n */\nexport const currentWeek = (date) => {\n  const currentWeek = moment(date, \"MMDDYYYY\").isoWeek();\n  return currentWeek;\n};\n\nexport const colors = [\n    \"rgb(133, 165, 101)\",\n    \"rgb(15, 128, 140)\",\n    \"rgb(140, 112, 140)\",\n    \"rgb(47, 67, 30)\",\n    \"rgb(56, 166, 126)\",\n    \"rgb(106, 217, 123)\",\n    \"rgb(188, 242, 107)\",\n    \"rgb(47, 64, 30)\",\n    \"rgb(68, 89, 46)\",\n    \"rgb(178, 191, 80)\",\n\n    \"rgb(133, 165, 101)\",\n    \"rgb(15, 128, 140)\",\n    \"rgb(140, 112, 140)\",\n    \"rgb(47, 67, 30)\",\n    \"rgb(56, 166, 126)\",\n    \"rgb(106, 217, 123)\",\n    \"rgb(188, 242, 107)\",\n    \"rgb(47, 64, 30)\",\n    \"rgb(68, 89, 46)\",\n    \"rgb(178, 191, 80)\",\n\n    \"rgb(133, 165, 101)\",\n    \"rgb(15, 128, 140)\",\n    \"rgb(140, 112, 140)\",\n    \"rgb(47, 67, 30)\",\n    \"rgb(56, 166, 126)\",\n    \"rgb(106, 217, 123)\",\n    \"rgb(188, 242, 107)\",\n    \"rgb(47, 64, 30)\",\n    \"rgb(68, 89, 46)\",\n    \"rgb(178, 191, 80)\",\n\n    \"rgb(133, 165, 101)\",\n    \"rgb(15, 128, 140)\",\n    \"rgb(140, 112, 140)\",\n    \"rgb(47, 67, 30)\",\n    \"rgb(56, 166, 126)\",\n    \"rgb(106, 217, 123)\",\n    \"rgb(188, 242, 107)\",\n    \"rgb(47, 64, 30)\",\n    \"rgb(68, 89, 46)\",\n    \"rgb(178, 191, 80)\",\n\n    \"rgb(133, 165, 101)\",\n    \"rgb(15, 128, 140)\",\n    \"rgb(140, 112, 140)\",\n    \"rgb(47, 67, 30)\",\n    \"rgb(56, 166, 126)\",\n    \"rgb(106, 217, 123)\",\n    \"rgb(188, 242, 107)\",\n    \"rgb(47, 64, 30)\",\n    \"rgb(68, 89, 46)\",\n    \"rgb(178, 191, 80)\",\n\n    \"rgb(133, 165, 101)\",\n    \"rgb(15, 128, 140)\",\n    \"rgb(140, 112, 140)\",\n    \"rgb(47, 67, 30)\",\n    \"rgb(56, 166, 126)\",\n    \"rgb(106, 217, 123)\",\n    \"rgb(188, 242, 107)\",\n    \"rgb(47, 64, 30)\",\n    \"rgb(68, 89, 46)\",\n    \"rgb(178, 191, 80)\",\n\n    \"rgb(133, 165, 101)\",\n    \"rgb(15, 128, 140)\",\n    \"rgb(140, 112, 140)\",\n    \"rgb(47, 67, 30)\",\n    \"rgb(56, 166, 126)\",\n    \"rgb(106, 217, 123)\",\n    \"rgb(188, 242, 107)\",\n    \"rgb(47, 64, 30)\",\n    \"rgb(68, 89, 46)\",\n    \"rgb(178, 191, 80)\",\n  ]\n"]},"metadata":{},"sourceType":"module"}