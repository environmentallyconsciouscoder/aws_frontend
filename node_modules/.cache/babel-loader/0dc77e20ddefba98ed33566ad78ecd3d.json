{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/contexts/daily-waste-context.js\";\nimport React, { createContext, useEffect, useState } from 'react';\nimport { roundedUpNumberAndTurnBackToNumber } from \"./../utilities.js\";\nexport const DailyWasteContext = createContext();\n\nconst DailyWasteContextProvider = props => {\n  const [dailyWasteData, setDailyWasteData] = useState([]);\n  const [coverWaste, setDailyCoverWaste] = useState([]);\n  const [prepWaste, setDailyPrepWaste] = useState([]);\n  const [spoilageWaste, setDailySpoilageWaste] = useState([]);\n  useEffect(() => {\n    if (props.dailyWaste) {\n      // console.log(\"props.dailyWaste\",props.dailyWaste);\n      setDailyCoverWaste(props.dailyWaste.coverWaste);\n      setDailyPrepWaste(props.dailyWaste.prepWaste);\n      setDailySpoilageWaste(props.dailyWaste.spoilageWaste);\n      setDailyWasteData(props.dailyWaste.totalWaste);\n    }\n  }, [props.siteName, props.dailyWaste]);\n\n  const getIndexesForBackgroundColours = targets => {\n    let cwTarget = targets.dailyCoverWastes;\n    let prepTarget = targets.dailyPeparationWastes;\n    let spoilageTarget = targets.dailySpoliageWastes;\n    let coverWasteOverTargetIndexArray = [];\n    let spoilageWasteOverTargetIndexArray = [];\n    let prepWasteOverTargetIndexArray = []; // console.log(\"coverWaste coverWaste\", coverWaste)\n\n    if (coverWaste !== undefined) {\n      coverWaste.map((data, i) => {\n        const formatedNumber = roundedUpNumberAndTurnBackToNumber(data);\n\n        if (formatedNumber >= cwTarget) {\n          coverWasteOverTargetIndexArray.push(i);\n        }\n\n        return \"\";\n      });\n      prepWaste.map((data, i) => {\n        const formatedNumber = roundedUpNumberAndTurnBackToNumber(data);\n\n        if (formatedNumber >= prepTarget) {\n          prepWasteOverTargetIndexArray.push(i);\n        }\n\n        return \"\";\n      });\n      spoilageWaste.map((data, i) => {\n        const formatedNumber = roundedUpNumberAndTurnBackToNumber(data);\n\n        if (formatedNumber >= spoilageTarget) {\n          spoilageWasteOverTargetIndexArray.push(i);\n        }\n\n        return \"\";\n      });\n    }\n\n    return {\n      coverWasteOverTargetIndexArray: coverWasteOverTargetIndexArray,\n      spoilageWasteOverTargetIndexArray: spoilageWasteOverTargetIndexArray,\n      prepWasteOverTargetIndexArray: prepWasteOverTargetIndexArray\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(DailyWasteContext.Provider, {\n    value: {\n      coverWaste,\n      prepWaste,\n      spoilageWaste,\n      getIndexesForBackgroundColours,\n      dailyWasteData\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default DailyWasteContextProvider;","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/contexts/daily-waste-context.js"],"names":["React","createContext","useEffect","useState","roundedUpNumberAndTurnBackToNumber","DailyWasteContext","DailyWasteContextProvider","props","dailyWasteData","setDailyWasteData","coverWaste","setDailyCoverWaste","prepWaste","setDailyPrepWaste","spoilageWaste","setDailySpoilageWaste","dailyWaste","totalWaste","siteName","getIndexesForBackgroundColours","targets","cwTarget","dailyCoverWastes","prepTarget","dailyPeparationWastes","spoilageTarget","dailySpoliageWastes","coverWasteOverTargetIndexArray","spoilageWasteOverTargetIndexArray","prepWasteOverTargetIndexArray","undefined","map","data","i","formatedNumber","push","children"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\nimport { roundedUpNumberAndTurnBackToNumber } from \"./../utilities.js\"\n\nexport const DailyWasteContext = createContext()\n\nconst DailyWasteContextProvider = props => {\n\n  const [dailyWasteData, setDailyWasteData] = useState([]);\n  const [coverWaste, setDailyCoverWaste] = useState([]);\n  const [prepWaste, setDailyPrepWaste] = useState([]);\n  const [spoilageWaste, setDailySpoilageWaste] = useState([]);\n\n  useEffect(() => {\n\n    if (props.dailyWaste) {\n      // console.log(\"props.dailyWaste\",props.dailyWaste);\n\n      setDailyCoverWaste(props.dailyWaste.coverWaste)\n      setDailyPrepWaste(props.dailyWaste.prepWaste)\n      setDailySpoilageWaste(props.dailyWaste.spoilageWaste)\n      setDailyWasteData(props.dailyWaste.totalWaste)\n    }\n\n}, [ props.siteName, props.dailyWaste])\n\n  const getIndexesForBackgroundColours =(targets) => {\n\n    let cwTarget = targets.dailyCoverWastes;\n    let prepTarget= targets.dailyPeparationWastes;\n    let spoilageTarget = targets.dailySpoliageWastes;\n\n    let coverWasteOverTargetIndexArray = []\n    let spoilageWasteOverTargetIndexArray = []\n    let prepWasteOverTargetIndexArray = []\n\n    // console.log(\"coverWaste coverWaste\", coverWaste)\n    if (coverWaste !== undefined) {\n\n      coverWaste.map((data, i) => {\n\n        const formatedNumber = roundedUpNumberAndTurnBackToNumber(data)\n\n        if (formatedNumber >= cwTarget) {\n          coverWasteOverTargetIndexArray.push(i)\n        }\n        return \"\"\n      })\n\n      prepWaste.map((data, i) => {\n\n        const formatedNumber = roundedUpNumberAndTurnBackToNumber(data)\n\n        if (formatedNumber >= prepTarget) {\n          prepWasteOverTargetIndexArray.push(i)\n        }\n        return \"\"\n      })\n\n      spoilageWaste.map((data, i) => {\n\n        const formatedNumber = roundedUpNumberAndTurnBackToNumber(data)\n\n        if (formatedNumber >= spoilageTarget) {\n          spoilageWasteOverTargetIndexArray.push(i)\n        }\n        return \"\"\n      })\n\n    }\n\n\n    return {\n      coverWasteOverTargetIndexArray: coverWasteOverTargetIndexArray,\n      spoilageWasteOverTargetIndexArray: spoilageWasteOverTargetIndexArray,\n      prepWasteOverTargetIndexArray: prepWasteOverTargetIndexArray\n    }\n\n  }\n\n\n\n  return (\n    <DailyWasteContext.Provider\n      value={{\n        coverWaste,\n        prepWaste,\n        spoilageWaste,\n        getIndexesForBackgroundColours,\n        dailyWasteData,\n      }}\n    >\n      {props.children}\n    </DailyWasteContext.Provider>\n  )\n}\n\nexport default DailyWasteContextProvider\n"]},"metadata":{},"sourceType":"module"}