{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/company-selector.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { getAllCompaniesBack } from \"../../../api\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem'; // import FormHelperText from '@material-ui/core/FormHelperText';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { Link } from \"react-router-dom\"; // import { WasteLabelsContext } from \"../../../contexts/waste-labels-context.js\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport default function CompanySelector(props) {\n  // const {\n  //     getWasteLabelFunc\n  // } = useContext(WasteLabelsContext)\n  const classes = useStyles();\n  let [companiesNamesAndIDs, setCompaniesNamesAndIDs] = useState([]);\n  let [allData, setAllData] = useState([]);\n  useEffect(() => {\n    getAllCompaniesBack().then(data => {\n      let filteredData = [];\n      data.Items.map(company => {\n        // console.log(\"company\", company.company);\n        // console.log(\"company id\", company.id);\n        filteredData.push({\n          companyName: company.company,\n          companyID: company.id\n        });\n        return \"\";\n      });\n      setAllData(data);\n      setCompaniesNamesAndIDs(filteredData);\n    });\n  }, []);\n\n  const handleChange = event => {\n    const input = event.target.value;\n    const fields = input.split('_');\n    const name = fields[0];\n    const id = fields[1];\n    const selectedCompany = allData.Items.filter(data => {\n      return data.company == name;\n    });\n    const siteId = selectedCompany[0].deviceID[0].siteId; // setCompanyName(name)\n    // setCompanyID(id)\n    // console.log(\"input id\", id)\n    // console.log(\"input name\", name)\n    // console.log(\"input siteId\", siteId)\n    // getWasteLabelFunc(name, id, siteId)\n\n    load(name, id);\n  }; // console.log(\"companyName\", companyName)\n  // console.log(\"companyID\", companyID)\n\n\n  const load = (companyName, companyId) => {\n    let usersEmail = \"\";\n    let name = \"\";\n    let typeOfUser = \"superAdmin\";\n    const userDetails = {\n      companyname: companyName,\n      email: usersEmail,\n      fullName: name,\n      typeOfUser: typeOfUser\n    }; // console.log(\"userDetails\", userDetails)\n    // console.log(\"usersEmail\", usersEmail)\n    // console.log(\"name\", name)\n    // console.log(\"typeOfUser\", typeOfUser)\n    // console.log(\"props\", props)\n\n    props.saveUserType(typeOfUser);\n    props.getUserDetails(userDetails); // props.getNoOfUsersCreated(noOfUsers);\n\n    props.userHasAuthenticated(true);\n    props.getAllData(companyName, usersEmail, userDetails, companyId);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: \"15rem\",\n      margin: \"0 20rem\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Select a company you want to load on the dashboard & click submit:\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Companies\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, \"None\")), companiesNamesAndIDs.map(value => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: value.companyName + \"_\" + value.companyID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, value.companyName);\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, \"submit\"))));\n}","map":{"version":3,"sources":["/Users/james/Documents/CODE/GREENKODE_DASHBOARD/greenkode-dashboard/frontend/greenkode/src/shared/components/containers/company-selector.js"],"names":["React","useEffect","useState","useContext","getAllCompaniesBack","makeStyles","InputLabel","MenuItem","FormControl","Select","Link","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","CompanySelector","props","classes","companiesNamesAndIDs","setCompaniesNamesAndIDs","allData","setAllData","then","data","filteredData","Items","map","company","push","companyName","companyID","id","handleChange","event","input","target","value","fields","split","name","selectedCompany","filter","siteId","deviceID","load","companyId","usersEmail","typeOfUser","userDetails","companyname","email","fullName","saveUserType","getUserDetails","userHasAuthenticated","getAllData","paddingTop","display","justifyContent","flexDirection"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { getAllCompaniesBack } from \"../../../api\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n// import FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport { Link } from \"react-router-dom\";\n\n// import { WasteLabelsContext } from \"../../../contexts/waste-labels-context.js\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2)\n    }\n}));\n\nexport default function CompanySelector(props) {\n\n    // const {\n    //     getWasteLabelFunc\n    // } = useContext(WasteLabelsContext)\n\n    const classes = useStyles();\n    let [companiesNamesAndIDs, setCompaniesNamesAndIDs] = useState([]);\n    let [allData, setAllData] = useState([]);\n\n    useEffect(() => {\n        getAllCompaniesBack().then((data) => {\n            let filteredData = [];\n            data.Items.map((company) => {\n                // console.log(\"company\", company.company);\n                // console.log(\"company id\", company.id);\n                filteredData.push({\n                    companyName: company.company,\n                    companyID: company.id\n                })\n                return \"\"\n            })\n\n            setAllData(data);\n            setCompaniesNamesAndIDs(filteredData)\n        })\n    }, [])\n\n    const handleChange = (event) => {\n        const input = event.target.value;\n        const fields = input.split('_');\n        const name = fields[0];\n        const id = fields[1];\n\n        const selectedCompany = allData.Items.filter((data) => {\n            return data.company == name;\n        });\n        const siteId = selectedCompany[0].deviceID[0].siteId;\n\n        // setCompanyName(name)\n        // setCompanyID(id)\n        // console.log(\"input id\", id)\n        // console.log(\"input name\", name)\n        // console.log(\"input siteId\", siteId)\n        // getWasteLabelFunc(name, id, siteId)\n        load(name, id)\n    };\n\n    // console.log(\"companyName\", companyName)\n    // console.log(\"companyID\", companyID)\n\n    const load = (companyName, companyId) => {\n\n        let usersEmail = \"\"\n        let name = \"\"\n        let typeOfUser = \"superAdmin\"\n\n        const userDetails = {\n            companyname: companyName,\n            email: usersEmail,\n            fullName: name,\n            typeOfUser: typeOfUser\n        };\n\n        // console.log(\"userDetails\", userDetails)\n        // console.log(\"usersEmail\", usersEmail)\n        // console.log(\"name\", name)\n        // console.log(\"typeOfUser\", typeOfUser)\n        // console.log(\"props\", props)\n\n        props.saveUserType(typeOfUser)\n        props.getUserDetails(userDetails);\n        // props.getNoOfUsersCreated(noOfUsers);\n        props.userHasAuthenticated(true);\n        props.getAllData(companyName, usersEmail, userDetails, companyId);\n    }\n\n\n    return (\n        <div\n            style={{\n                paddingTop: \"15rem\",\n                margin: \"0 20rem\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                flexDirection: \"column\"\n            }}\n        >\n            <h2>Select a company you want to load on the dashboard & click submit:</h2>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Companies</InputLabel>\n\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    onChange={handleChange}\n                >\n                    <MenuItem value=\"\">\n                        <em>None</em>\n                    </MenuItem>\n                    {companiesNamesAndIDs.map((value) => {\n                        return (\n                            <MenuItem value={value.companyName + \"_\" + value.companyID}>{value.companyName}</MenuItem>\n                        )\n                    })}\n\n                </Select>\n\n\n            </FormControl>\n\n            <button>\n                <Link to=\"/\">\n                    <h3>submit</h3>\n                </Link>\n            </button>\n\n        </div >\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}