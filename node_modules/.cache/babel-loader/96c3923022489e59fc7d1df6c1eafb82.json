{"ast":null,"code":"// Box Annotation implementation\nmodule.exports = function (Chart) {\n  var helpers = require('../helpers.js')(Chart);\n\n  var BoxAnnotation = Chart.Annotation.Element.extend({\n    setDataLimits: function () {\n      var model = this._model;\n      var options = this.options;\n      var chartInstance = this.chartInstance;\n      var xScale = chartInstance.scales[options.xScaleID];\n      var yScale = chartInstance.scales[options.yScaleID];\n      var chartArea = chartInstance.chartArea; // Set the data range for this annotation\n\n      model.ranges = {};\n\n      if (!chartArea) {\n        return;\n      }\n\n      var min = 0;\n      var max = 0;\n\n      if (xScale) {\n        min = helpers.isValid(options.xMin) ? options.xMin : xScale.getPixelForValue(chartArea.left);\n        max = helpers.isValid(options.xMax) ? options.xMax : xScale.getPixelForValue(chartArea.right);\n        model.ranges[options.xScaleID] = {\n          min: Math.min(min, max),\n          max: Math.max(min, max)\n        };\n      }\n\n      if (yScale) {\n        min = helpers.isValid(options.yMin) ? options.yMin : yScale.getPixelForValue(chartArea.bottom);\n        max = helpers.isValid(options.yMax) ? options.yMax : yScale.getPixelForValue(chartArea.top);\n        model.ranges[options.yScaleID] = {\n          min: Math.min(min, max),\n          max: Math.max(min, max)\n        };\n      }\n    },\n    configure: function () {\n      var model = this._model;\n      var options = this.options;\n      var chartInstance = this.chartInstance;\n      var xScale = chartInstance.scales[options.xScaleID];\n      var yScale = chartInstance.scales[options.yScaleID];\n      var chartArea = chartInstance.chartArea; // clip annotations to the chart area\n\n      model.clip = {\n        x1: chartArea.left,\n        x2: chartArea.right,\n        y1: chartArea.top,\n        y2: chartArea.bottom\n      };\n      var left = chartArea.left,\n          top = chartArea.top,\n          right = chartArea.right,\n          bottom = chartArea.bottom;\n      var min, max;\n\n      if (xScale) {\n        min = helpers.isValid(options.xMin) ? xScale.getPixelForValue(options.xMin) : chartArea.left;\n        max = helpers.isValid(options.xMax) ? xScale.getPixelForValue(options.xMax) : chartArea.right;\n        left = Math.min(min, max);\n        right = Math.max(min, max);\n      }\n\n      if (yScale) {\n        min = helpers.isValid(options.yMin) ? yScale.getPixelForValue(options.yMin) : chartArea.bottom;\n        max = helpers.isValid(options.yMax) ? yScale.getPixelForValue(options.yMax) : chartArea.top;\n        top = Math.min(min, max);\n        bottom = Math.max(min, max);\n      } // Ensure model has rect coordinates\n\n\n      model.left = left;\n      model.top = top;\n      model.right = right;\n      model.bottom = bottom; // Stylistic options\n\n      model.borderColor = options.borderColor;\n      model.borderWidth = options.borderWidth;\n      model.backgroundColor = options.backgroundColor;\n    },\n    inRange: function (mouseX, mouseY) {\n      var model = this._model;\n      return model && mouseX >= model.left && mouseX <= model.right && mouseY >= model.top && mouseY <= model.bottom;\n    },\n    getCenterPoint: function () {\n      var model = this._model;\n      return {\n        x: (model.right + model.left) / 2,\n        y: (model.bottom + model.top) / 2\n      };\n    },\n    getWidth: function () {\n      var model = this._model;\n      return Math.abs(model.right - model.left);\n    },\n    getHeight: function () {\n      var model = this._model;\n      return Math.abs(model.bottom - model.top);\n    },\n    getArea: function () {\n      return this.getWidth() * this.getHeight();\n    },\n    draw: function () {\n      var view = this._view;\n      var ctx = this.chartInstance.chart.ctx;\n      ctx.save(); // Canvas setup\n\n      ctx.beginPath();\n      ctx.rect(view.clip.x1, view.clip.y1, view.clip.x2 - view.clip.x1, view.clip.y2 - view.clip.y1);\n      ctx.clip();\n      ctx.lineWidth = view.borderWidth;\n      ctx.strokeStyle = view.borderColor;\n      ctx.fillStyle = view.backgroundColor; // Draw\n\n      var width = view.right - view.left,\n          height = view.bottom - view.top;\n      ctx.fillRect(view.left, view.top, width, height);\n      ctx.strokeRect(view.left, view.top, width, height);\n      ctx.restore();\n    }\n  });\n  return BoxAnnotation;\n};","map":{"version":3,"sources":["/Users/james/Documents/CODE/greenkode-dashboard/frontend/greenkode/node_modules/chartjs-plugin-annotation/src/types/box.js"],"names":["module","exports","Chart","helpers","require","BoxAnnotation","Annotation","Element","extend","setDataLimits","model","_model","options","chartInstance","xScale","scales","xScaleID","yScale","yScaleID","chartArea","ranges","min","max","isValid","xMin","getPixelForValue","left","xMax","right","Math","yMin","bottom","yMax","top","configure","clip","x1","x2","y1","y2","borderColor","borderWidth","backgroundColor","inRange","mouseX","mouseY","getCenterPoint","x","y","getWidth","abs","getHeight","getArea","draw","view","_view","ctx","chart","save","beginPath","rect","lineWidth","strokeStyle","fillStyle","width","height","fillRect","strokeRect","restore"],"mappings":"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","sourcesContent":["// Box Annotation implementation\nmodule.exports = function(Chart) {\n\tvar helpers = require('../helpers.js')(Chart);\n\t\n\tvar BoxAnnotation = Chart.Annotation.Element.extend({\n\t\tsetDataLimits: function() {\n\t\t\tvar model = this._model;\n\t\t\tvar options = this.options;\n\t\t\tvar chartInstance = this.chartInstance;\n\n\t\t\tvar xScale = chartInstance.scales[options.xScaleID];\n\t\t\tvar yScale = chartInstance.scales[options.yScaleID];\n\t\t\tvar chartArea = chartInstance.chartArea;\n\n\t\t\t// Set the data range for this annotation\n\t\t\tmodel.ranges = {};\n\t\t\t\n\t\t\tif (!chartArea) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tvar min = 0;\n\t\t\tvar max = 0;\n\t\t\t\n\t\t\tif (xScale) {\n\t\t\t\tmin = helpers.isValid(options.xMin) ? options.xMin : xScale.getPixelForValue(chartArea.left);\n\t\t\t\tmax = helpers.isValid(options.xMax) ? options.xMax : xScale.getPixelForValue(chartArea.right);\n\n\t\t\t\tmodel.ranges[options.xScaleID] = {\n\t\t\t\t\tmin: Math.min(min, max),\n\t\t\t\t\tmax: Math.max(min, max)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (yScale) {\n\t\t\t\tmin = helpers.isValid(options.yMin) ? options.yMin : yScale.getPixelForValue(chartArea.bottom);\n\t\t\t\tmax = helpers.isValid(options.yMax) ? options.yMax : yScale.getPixelForValue(chartArea.top);\n\n\t\t\t\tmodel.ranges[options.yScaleID] = {\n\t\t\t\t\tmin: Math.min(min, max),\n\t\t\t\t\tmax: Math.max(min, max)\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\t\tconfigure: function() {\n\t\t\tvar model = this._model;\n\t\t\tvar options = this.options;\n\t\t\tvar chartInstance = this.chartInstance;\n\n\t\t\tvar xScale = chartInstance.scales[options.xScaleID];\n\t\t\tvar yScale = chartInstance.scales[options.yScaleID];\n\t\t\tvar chartArea = chartInstance.chartArea;\n\n\t\t\t// clip annotations to the chart area\n\t\t\tmodel.clip = {\n\t\t\t\tx1: chartArea.left,\n\t\t\t\tx2: chartArea.right,\n\t\t\t\ty1: chartArea.top,\n\t\t\t\ty2: chartArea.bottom\n\t\t\t};\n\n\t\t\tvar left = chartArea.left, \n\t\t\t\ttop = chartArea.top, \n\t\t\t\tright = chartArea.right, \n\t\t\t\tbottom = chartArea.bottom;\n\n\t\t\tvar min, max;\n\n\t\t\tif (xScale) {\n\t\t\t\tmin = helpers.isValid(options.xMin) ? xScale.getPixelForValue(options.xMin) : chartArea.left;\n\t\t\t\tmax = helpers.isValid(options.xMax) ? xScale.getPixelForValue(options.xMax) : chartArea.right;\n\t\t\t\tleft = Math.min(min, max);\n\t\t\t\tright = Math.max(min, max);\n\t\t\t}\n\n\t\t\tif (yScale) {\n\t\t\t\tmin = helpers.isValid(options.yMin) ? yScale.getPixelForValue(options.yMin) : chartArea.bottom;\n\t\t\t\tmax = helpers.isValid(options.yMax) ? yScale.getPixelForValue(options.yMax) : chartArea.top;\n\t\t\t\ttop = Math.min(min, max);\n\t\t\t\tbottom = Math.max(min, max);\n\t\t\t}\n\n\t\t\t// Ensure model has rect coordinates\n\t\t\tmodel.left = left;\n\t\t\tmodel.top = top;\n\t\t\tmodel.right = right;\n\t\t\tmodel.bottom = bottom;\n\n\t\t\t// Stylistic options\n\t\t\tmodel.borderColor = options.borderColor;\n\t\t\tmodel.borderWidth = options.borderWidth;\n\t\t\tmodel.backgroundColor = options.backgroundColor;\n\t\t},\n\t\tinRange: function(mouseX, mouseY) {\n\t\t\tvar model = this._model;\n\t\t\treturn model &&\n\t\t\t\tmouseX >= model.left && \n\t\t\t\tmouseX <= model.right && \n\t\t\t\tmouseY >= model.top && \n\t\t\t\tmouseY <= model.bottom;\n\t\t},\n\t\tgetCenterPoint: function() {\n\t\t\tvar model = this._model;\n\t\t\treturn {\n\t\t\t\tx: (model.right + model.left) / 2,\n\t\t\t\ty: (model.bottom + model.top) / 2\n\t\t\t};\n\t\t},\n\t\tgetWidth: function() {\n\t\t\tvar model = this._model;\n\t\t\treturn Math.abs(model.right - model.left);\n\t\t},\n\t\tgetHeight: function() {\n\t\t\tvar model = this._model;\n\t\t\treturn Math.abs(model.bottom - model.top);\n\t\t},\n\t\tgetArea: function() {\n\t\t\treturn this.getWidth() * this.getHeight();\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar view = this._view;\n\t\t\tvar ctx = this.chartInstance.chart.ctx;\n\n\t\t\tctx.save();\n\n\t\t\t// Canvas setup\n\t\t\tctx.beginPath();\n\t\t\tctx.rect(view.clip.x1, view.clip.y1, view.clip.x2 - view.clip.x1, view.clip.y2 - view.clip.y1);\n\t\t\tctx.clip();\n\n\t\t\tctx.lineWidth = view.borderWidth;\n\t\t\tctx.strokeStyle = view.borderColor;\n\t\t\tctx.fillStyle = view.backgroundColor;\n\n\t\t\t// Draw\n\t\t\tvar width = view.right - view.left,\n\t\t\t\theight = view.bottom - view.top;\n\t\t\tctx.fillRect(view.left, view.top, width, height);\n\t\t\tctx.strokeRect(view.left, view.top, width, height);\n\n\t\t\tctx.restore();\n\t\t}\n\t});\n\n\treturn BoxAnnotation;\n};\n"]},"metadata":{},"sourceType":"script"}