{"version":3,"sources":["image/green_kode_white.svg","image/meals.svg","image/co2.svg","image/money.svg","image/previous_icon.svg","image/next_icon.svg","image/green_kode.svg","shared/components/navigation/footer.js","shared/components/libs/spinner.js","shared/components/libs/use-spinner.js","shared/components/containers/auth/login.js","shared/components/libs/use-check-request.js","api.js","shared/components/containers/auth/sign-up.js","shared/components/containers/auth/forgot-password.js","shared/components/containers/auth/sign-up-super-admin.js","contexts/dashboard-context.js","contexts/total-waste-context.js","contexts/waste-cap-context.js","utilities.js","shared/components/containers/accordion.js","shared/components/containers/reports/total-waste-report.js","shared/components/libs/use-window-dimensions.js","contexts/daily-waste-context.js","contexts/hourly-food-waste-context.js","contexts/inputs-context.js","shared/components/containers/reports/daily-waste-report.js","shared/components/containers/reports/hourly-waste-report.js","contexts/weekly-waste-context.js","shared/components/containers/reports/weekly-waste-report.js","contexts/weekly-trends-context.js","shared/components/containers/reuseable-components/charts/bar-chart/style.js","shared/components/containers/reuseable-components/charts/bar-chart/bar-chart.js","shared/components/containers/reports/weekly-trend-report.js","contexts/monthly-waste-context.js","shared/components/containers/reports/monthly-waste-report.js","contexts/ai-prediction-data-context.js","shared/components/containers/reports/ai-predictions-report.js","contexts/target-context.js","shared/components/containers/reports/food-waste-target.js","contexts/waste-per-cover-context.js","helper.js","shared/components/containers/reuseable-components/labels/capping.js","shared/components/containers/reports/waste-per-cover-report.js","contexts/waste-per-sales-context.js","shared/components/containers/reports/waste-per-sales-report.js","contexts/waste-on-a-day-of-the-week-context.js","styles/graph/barchart.styles.js","shared/components/containers/reports/waste-on-a-day-of-the-week-report.js","shared/components/containers/reuseable-components/labels/subheadings.js","shared/components/containers/reuseable-components/charts/slack-chart/slack-chart.js","contexts/daily-sales-vs-waste-context.js","shared/components/containers/reports/daily-sales-vs-waste-report.js","shared/components/libs/use-switches.js","shared/components/containers/controller.js","shared/components/containers/dashboard.js","shared/components/containers/live-feeds/public-live-feed.js","shared/components/containers/live-feeds/kitchen-live-feed.js","shared/components/containers/auth/authenticated-route.js","shared/components/containers/auth/unauthenticated-route.js","shared/components/containers/targets/targets-forms.js","shared/components/containers/targets/targets-menu.js","shared/components/containers/targets/targets-calculator.js","shared/components/containers/capping/add-capping.js","shared/components/containers/reuseable-components/pagination/pagination.js","shared/components/containers/user-inputs/daily-sales-vs-waste-inputs.js","shared/components/containers/user-inputs/inputs-list.js","shared/components/containers/display-settings.js","shared/components/containers/user-inputs/cover-inputs.js","shared/components/containers/user-inputs/sales-inputs.js","shared/components/containers/user-inputs/inputs.js","shared/components/containers/company-selector.js","routes.js","shared/components/navigation/side-drawer.js","shared/components/navigation/back-drop.js","shared/components/navigation/main-navigation.js","shared/components/libs/use-user-information.js","shared/components/libs/use-company-information.js","shared/components/libs/use-get-request.js","shared/components/libs/use-kg-pounds-converter.js","app.js","config.js","index.js"],"names":["module","exports","Footer","props","className","src","Logo","alt","icon","faEnvelope","href","target","message","rel","faTwitter","faInstagram","faLinkedinIn","faFacebook","Spinner","size","color","useSpinner","useState","visible","setVisible","initialFormState","username","password","email","authCode","formType","Login","formState","updateFormState","onChange","e","persist","name","value","errorMessage","setErrorMessage","spinner","showSpinner","hideSpinner","a","Auth","signIn","usersEmail","user","attributes","companyName","companyId","userGroups","signInUserSession","accessToken","payload","noOfUsers","checkIfUserHasPermissionToAccessDashboard","filter","data","greenkodeUser","find","element","admin","superAdmin","typeOfUser","undefined","length","signOut","userDetails","companyname","fullName","saveUserType","getUserDetails","getNoOfUsersCreated","userHasAuthenticated","getAllData","console","log","code","controlid","bssize","placeholder","type","onClick","to","checkWeeklyWasteData","Object","keys","currentWeeklyValues","coverWaste","preparationWaste","spoilageWaste","weekOfYear","Date","weeklyWasteTrend","totalWaste","prepWaste","checkWastePerCoverOrSales","monthsName","percentageOfInputsAreZeros","siteName","totalCW","totalCoverInputs","totalPW","totalSW","wastePerCoverForAllWaste","wastePerCoverForCoverWaste","wastePerCoverForPreparationWaste","wastePerCoverForSpoilageWaste","xAxis","checkAllSitesData","trends","checkGetDailyAndWeeklyDatesData","dailyCoverWasteArrayFormated","dailyPrepWasteArrayFormated","dailySpoilageWasteArrayFormated","hourlyWastesWeeklyArray","date","totalDailyWaste","weeklyData","CheckRequest","addToGroup","groupName","Promise","resolve","reject","API","post","body","then","res","catch","error","updateUsersAttribute","createUserLoginTime","company","companyID","addCoverInput","covers","addSalesInput","sales","verifyEmail","Signup","useForm","register","handleSubmit","errors","errorMessageFromAWS","setErrorMessageFromAWS","stage","setStage","loginEmailAddress","setLoginEmailAddress","classes","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","useStyles","React","userType","setUserType","values","phone","signUpInformation","startDate","signUp","numberOfUsers","toString","confirmSignUp","history","push","useEffect","userDetail","onSubmit","faAsterisk","autoFocus","ref","required","pattern","minLength","maxLength","onKeyDown","evt","includes","key","preventDefault","FormControl","variant","InputLabel","id","Select","labelId","event","label","MenuItem","style","display","justifyContent","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","superAdminCreatedUsers","map","row","scope","loginTime","time","Forgotpassword","setEmail","watch","forgotPassword","confirmPassword","forgotPasswordSubmit","err","validate","confirmpassword","SignUpSuperAdmin","submit","DashboardContext","createContext","DashboardContextProvider","monthlySelectedValue","handleSiteChange","selectedValue","sites","handleMonthlyValues","displayMonthlyValue","allMonthlyData","monthlyChartMaxValue","monthlyChangesValue","showPounds","userEmail","adminType","count","totalMonthlyWaste","clickOnMonthlyBarChart","changeIndex","sitesID","handleSiteIDchange","selectedSiteValueID","weeklyDailyLabels","weeklyDailyRange","Provider","children","OverviewWasteContext","OverviewWasteContextProvider","setCoverWaste","setPrepWaste","setSpoilageWaste","setSiteName","totalWasteFromSelectedSite","site","replace","toUpperCase","WasteCapContext","WasteCapContextProvider","allCappingValue","setAllCappingValue","weeklyCoverWastes","setWeeklyCoverWastes","weeklySpoliageWastes","setWeeklySpoliageWastes","weeklyPeparationWastes","setWeeklyPeparationWastes","selectedSiteCoverWastes","setSelectedSiteCoverWastes","selectedSiteSpoliageWastes","setSelectedSiteSpoliageWastes","selectedSitePeparationWastes","setSelectedSitePeparationWastes","dailyCoverWastes","setDailyCoverWastes","dailySpoliageWastes","setDailySpoliageWastes","dailyPeparationWastes","setDailyPeparationWastes","hourlyCoverWastes","setHourlyCoverWastes","hourlySpoliageWastes","setHourlySpoliageWastes","hourlyPeparationWastes","sethHourlyPeparationWastes","wastePerCoverCoverWastes","setWastePerCoverCoverWastes","wastePerCoverSpoilageWastes","setWastePerCoverSpoilageWastes","wastePerCoverPrepWastes","setWastePerCoverPrepWastes","wastePerSalesCoverWastes","setWastePerSalesCoverWastes","wastePerSalesSpoilageWastes","setWastePerSalesSpoilageWastes","wastePerSalesPrepWastes","setWastePerSalesPrepWastes","setShowPounds","cappingValue","getAllCappingDataForForm","Items","getWeeklyCappingValue","weeklyCappingValues","getSelectedSiteCappingValue","totalCappingValues","getHourlyCappingValue","hourlyCappingValues","getDailyCappingValue","dailyCappingValues","getWastePerCoverCappingValue","wastePerCoverCappingValues","getWastePerSalesCappingValue","wastePerSalesCappingValues","cappingValues","cover","spoilage","prep","addDaysToDate","firstDayOfTheWeek","numberOfdays","moment","add","format","formatSiteName","toLowerCase","getMonthAsAnumber","currentDate","getYear","getFullYear","splitCamelCaseStringAndMakeFirstCharacterUpperCase","formatedData","charAt","slice","reducer","accumulator","currentValue","getMonths","getMonth","roundedUpNumberAndTurnBackToString","changeToNumber","parseFloat","roundUp","parseInt","toFixed","roundedUpNumberAndTurnBackToNumber","roundedUpNumberTwoPointsAndTurnBackToString","setItemInLocalStorage","localStorage","setItem","JSON","stringify","wasteDailyDateRange","dateLabel","formatedDateLabel","monthName","formatingDateLabel","substr","indexOfLastArrayValue","maxNumForCoverPerWasteChartFunction","maxNum","Math","max","apply","calculateTodaysDate","today","dayNumber","String","getDate","year","getDay","AccordionHeading","AccordionBody","open","TotalWaste","useContext","totalCoverCap","totalSpoliageCap","totalPreparationCap","totalCapValue","spoliage","production","coverWasteColor","spoliageWasteColor","preparationWasteColor","textColor","isNaN","coverWastepercentage","spoliageWastepercentage","productionWastepercentage","showDarkTheme","hideReport","showTotalWasteChart","setShowTotalWasteChart","formatStartDate","text","styles","buildStyles","pathColor","trailColor","textSize","strokeLinecap","strokeWidth","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","DailyWasteContext","DailyWasteContextProvider","dailyWasteData","setDailyWasteData","setDailyCoverWaste","setDailyPrepWaste","setDailySpoilageWaste","dailyWaste","getIndexesForBackgroundColours","targets","cwTarget","prepTarget","spoilageTarget","coverWasteOverTargetIndexArray","spoilageWasteOverTargetIndexArray","prepWasteOverTargetIndexArray","i","HourlyFoodWasteContext","HourlyFoodWasteContextProvider","hourlyWasteDate","setHourlyWasteDate","index","setIndex","hourlyWasteSelector","setHourlyWasteSelector","hourlyWasteValues","setHourlyWasteValues","clickOnHourlyBarChart","setClickOnHourlyChart","hourlyCoverWasteData","setHourlyCoverWaste","hourlyPreparationWasteData","setHourlyPrepWaste","hourlySpoilageWasteData","setHourlySpoilageWaste","allHourlyWasteData","setAllHourlyWasteData","showTooltip","setTooltip","hourlyWaste","handleHourlyWaste","item","selectedHourlyWaste","hourlyWasteDataFormated","reformatData","selectedData","showCoverWasteLabelRed","cap","capInPounds","convertedValues","handleHourlyWasteCategory","targetsInPounds","allCappings","hourlyCoverWastesCap","hourlyPeparationWastesCap","hourlySpoliageWastesCap","InputsContext","InputsContextProvider","coversInput","checkBox","thisWeekCoverInputs","setThisWeekCoverInputs","setSelectedSiteValueID","salesInput","thisWeekSalesInputs","setThisWeekSalesInputs","setCompanyName","setCompanyID","allWeekSalesInput","setAllWeekSalesInput","allWeekCoverInput","setAllWeekCoverInput","thisWeekSalesInput","sendDataToDatabase","updateValues","filterMenuItems","selectedPage","menuItemsForSelectedPage","menuItemsForSelectedPageForCoverInputs","DailyWasteChart","Chart","defaults","global","defaultFontFamily","chartReference","coverWasteData","prepWasteData","spoilageWasteData","totalWasteData","totalCappingInPounds","setTotalCappingInPounds","dailyWasteCappingInPounds","setDailyWasteCappingInPounds","prepWasteCappingInPounds","setPrepWasteCappingInPounds","spoilageWasteCappingInPounds","setSpoilageWasteCappingInPounds","dailyCoverWastesCap","dailySpoliageWastesCap","dailyPeparationWastesCap","formatedDate","parse","getItem","dailyChartXaxis","setCheckBox","totalWarningInPounds","dailyWasteWarningInPounds","prepWasteWarningInPounds","spoilageWasteWarningInPounds","background","indexes","coverWasteBackgroundColours","spoilageWasteBackgroundColours","prepWasteBackgroundColours","dateRangeLable","dailyWasteHeight","dailyWasteWidth","CSPlabelFont","totalLabelFont","handleChangeForCheckedAndAccordion","showDailyChart","labels","datasets","fill","backgroundColor","minBarLength","barPercentage","categoryPercentage","options","responsive","maintainAspectRatio","legend","scales","xAxes","gridLines","ticks","fontColor","yAxes","beginAtZero","plugins","datalabels","anchor","borderColor","borderRadius","borderWidth","font","weight","offset","padding","context","dataIndex","dataset","warningForCoverWasteCap","warningForPreparationWasteCap","warningForSpoilageWasteCap","formatter","reference","dates","waste","hoverBackgroundColor","tooltips","enabled","array","_chart","config","forEach","_index","chartInstance","update","maxTicksLimit","warning","clamp","HourlyWasteChart","tooltipIsOpen","setTooltipIsOpen","hourlyWasteHeight","hourlyWasteWidth","fontSize","spoliageWaste","productionWaste","activeState","changeActiveState","setWarning","displayValues","setDisplayValues","activeObject","val","objects","appState","changeState","barColors","toggleActive","showHourlyChart","maxNumForHourlyChart","maxNumForHourlyChartFunction","maxNumForHourlyChartInPounds","hourlyWasteXaxisColors","coverWasteLableRed","prepWasteLableRed","spoilageWasteLableRed","hourlyWasteDateConverter","Tooltip","onClose","title","arrow","round","warningKGConverted","hover","intersect","WeeklyWasteContext","WeeklyWasteContextProvider","setPreparationWaste","weeklyWaste","ReportOne","showWeeklyChart","totalWastepercentage","weeklyCoverCap","weeklySpoliageCap","weeklyPreparationCap","totalWasteColor","totalCapping","localData","getLocalStorageData","WeeklyWasteTrendContext","WeeklyWasteTrendProvider","selectedSiteWeeklyValues","previousSelectedSiteWeeklyValues","setTotalWaste","lastWeekCoverWaste","setlastWeekCoverWaste","lastWeekPreparationWaste","setLastWeekPreparationWaste","lastWeekSpoilageWaste","setLastWeekSpoilageWaste","lastWeekTotalWaste","setLastWeekTotalWaste","currentWeekCoverWaste","setCurrentWeekCoverWaste","currentWeekPreparationWaste","setCurrentWeekPreparationWaste","currentWeekSpoilageWaste","setCurrentWeekSpoilageWaste","currentWeekTotalWaste","setCurrentWeekTotalWaste","displayCurrentWasteValue","setDisplayCurrentWasteValue","displayPreviousWasteValue","setDisplayPreviousWasteValue","setColor","weeklyWasteValuesForCurrentWeekAndLastWeek","colors","weeklyTrend","reformatForWeeklyWasteBar","lastWeek","totalCurrentWeekWaste","totalPreviousWeekWaste","currentWeek","setDateRange","thisWeek","handleWeeklyTrendValues","selector","Container","styled","div","MainContainer","BarChartContainer","css","Number","span","MakeBar","BlackLine","BarChart","formatNum","setShowWeeklyTrendChart","showWeeklyTrendChart","formatedDateRange","lastWeekMonthName","thisWeekMonthName","dateNumberOfLastWeek","convertToJavascriptData","dateNumber","getTime","weeklyWasteDateRange","allWaste","MonthlyWasteContext","MonthlyTargetContextProvider","coverWasteInCurrentMonth","setCoverWasteInCurrentMonth","preparationWasteInCurrentMonth","setPreparationWasteInCurrentMonth","spoilageWasteInCurrentMonth","setSpoilageWasteInCurrentMonth","currentMonthCoverWasteArray","setCurrentMonthCoverWasteArray","currentMonthPrepWasteArray","setCurrentMonthPrepWasteArray","currentMonthSpoilageWasteArray","setCurrentMonthSpoilageWasteArray","coverMonthlyChanges","setCoverMonthlyChanges","prepMonthlyChanges","setPrepMonthlyChanges","spoilageMonthlyChanges","setSpoilageMonthlyChanges","monthlyChanges","setMonthlyChanges","displayMonthlyTrends","setDisplayMonthlyTrends","setMonthlySelectedValue","MonthlyWasteChart","siteId","monthlyCoverWaste","monthlyPreparationWaste","monthlySpoilageWaste","graphHeight","graphWidth","totalMonthlyValueFontSize","xAxisLabel","showMonthlyChart","siteID","monthlyWasteTextColor","stacked","getEndDate","reduce","position","canvas","lineTension","AiPredictionDataContext","AiPredictionDataContextProvider","month","setMonthWaste","aiPredictionsYearlyCoverWaste","setAiPredictionsYearlyCoverWaste","aiPredictionsYearlyPrepWaste","setAiPredictionsYearlyPrepWaste","aiPredictionsYearlySpoilageWaste","setAiPredictionsYearlySpoilageWaste","aiPredictionsMonthlyCoverWaste","setAiPredictionsMonthlyCoverWaste","aiPredictionsMonthlyPrepWaste","setAiPredictionsMonthlyPrepWaste","aiPredictionsMonthlySpoilageWaste","setAiPredictionsMonthlySpoilageWaste","aiPredictionsWeeklyCoverWaste","setAiPredictionsWeeklyCoverWaste","aiPredictionsWeeklyPrepWaste","setAiPredictionsWeeklyPrepWaste","aiPredictionsWeeklySpoilageWaste","setAiPredictionsWeeklySpoilageWaste","aiPredictionsDailyCoverWaste","setAiPredictionsDailyCoverWaste","aiPredictionsDailyPrepWaste","setAiPredictionsDailyPrepWaste","aiPredictionsDailySpoilageWaste","setAiPredictionsDailySpoilageWaste","aiPredictionsDisplayValueForCoverWaste","setAiPredictionsDisplayValueForCoverWaste","aiPredictionsDisplayValueForPrepWaste","setAiPredictionsDisplayValueForPrepWaste","aiPredictionsDisplayValueForSpoilageWaste","setAiPredictionsDisplayValueForSpoilageWaste","monthlyForcasts","weeklyForcasts","dailyForcasts","yearlyForcasts","aiPredictionsActiveState","aiPredictionsChangeActiveState","aiPredictionsAppState","aiPredictionsChangeState","filterAiPredictionsData","aiPredictionsData","aiPrediction","yearlyForcastsBasedOnCurrentMonth","monthlyForcastsBasedOnCurrentMonth","weeklylyForcastsBasedOnCurrentMonth","dailyForcastsBasedOnCurrentMonth","monthInUpperCase","aiPredictionsToggleActive","months","labelFont","pointRadius","layoutPadding","getCoverData","pointBackgroundColor","getSpoilageData","getPreparationData","ProgressBar","aiPredictions","setAiPredictions","layout","left","right","top","bottom","TargetContext","TargetContextProvider","monthlyCoverWasteTarget","monthlyPrepWasteTarget","monthlySpoilageWasteTarget","mealsSavings","co2Reduction","moneySavings","totalMonthlyForecasts","totalShortFall","coverWasteShortFall","prepWasteShortFall","spoilageWasteShortFall","targetIsRealistic","percentaged","targetsAndImpact","setTargetsAndImpact","prevMonthWaste","setPrevMonthWaste","showPercentagedWarning","setShowPercentagedWarning","setLabel","percent","setPercent","monthlyTargets","weeklyTargets","dailyTargets","yearlyTargets","dailyCoverWaste","dailyPrepWaste","dailySpoilageWaste","setMonthlyCoverWaste","monthlyPrepWaste","setMonthlyPrepWaste","setMonthlySpoilageWaste","weeklyCoverWaste","setWeeklyCoverWaste","weeklyPrepWaste","setWeeklyPrepWaste","weeklySpoilageWaste","setWeeklySpoilageWaste","yearlyCoverWaste","setYearlyCoverWaste","yearlyPrepWaste","setYearlyPrepWaste","yearlySpoilageWaste","setYearlySpoilageWaste","recommendedTargets","cw","pw","sw","percentagedAsString","percents","getTargetsAndImpact","calculateTargetsAndImpact","prevMonthIndex","previousMonthCoverWaste","previousMonthPrepWaste","previousMonthSpoilageWaste","monthIndex","savings","totalTarget","carbonMunicipalValue","getMonthlyTargetsAndImpact","getWeeklyTargetsAndImpact","getDailyTargetsAndImpact","getYearlyTargetsAndImpact","currentAndPreviousMonths","currentMonthNum","currentMonth","previousMonth","getCurrentAndPreviousMonths","setFoodWasteTargetSavings","foodWasteTargetSavings","meals","co2","money","WastePerCoverContext","WastePerCoverContextProvider","initialStateForyearlyArray","initialStateFormontlyArray","yearlyArray","setYearlyArray","montlyArray","setMonthArray","setCount","coverSelector","spoilageSelector","preparationSelector","allSelector","setTotalCW","setTotalPW","setTotalSW","setXaxis","setForAllWaste","setTotalCoverInputs","setPercentageOfInputsAreZeros","setMonthName","setDisplay","searchError","setSearchError","selectedYear","setSelectedYear","datesLabel","setDatesBeforeFormating","foodWaste","setFoodWaste","foodWasteXaxis","setFoodWasteXaxis","coverInputDataArray","setCoverInputDataArray","coverWasteDataArray","setCoverWasteDataArray","preparationWasteDataArray","setPreparationWasteDataArray","spoilageWasteDataArray","setSpoilageWasteDataArray","totalDailyWasteDataArray","setTotalDailyWasteDataArray","wasteSteamValue","setWasteSteamValue","wastePerCover","addGap","addGapToTotalDailyWasteDataArray","monthlyArray","prepfoodWaste","coverfoodWaste","spoilagefoodWaste","dataSet","Array","prototype","insert","this","splice","handleSearch","monthlyIndexArray","show","yearlyIndexArray","monthlyIndex","yearlyIndex","handleYearly","step","getIndex","highestIndex","indexOf","prevCount","handleMonthly","keepTwoDecimalPlacesWithoutRoundingUp","num","result","str","split","isInt","n","weeklyDateFormat","startDayOfTheWeek","endDate","getCurrentWeek","formattedDate","isoWeek","wasteValues","targetIndexArray","capping","coverWastes","spoilageWastes","prepWastes","CoverPerWasteGraph","monthly","setMonthlyArray","displayValue","totalCoverWaste","totalPrepWaste","totalSpoilageWaste","totalAllWaste","setShowSearchError","inputsData","setInputsData","wasteStreamValue","setWasteStreamValue","maxNumber","setMaxNumber","monetaryValues","setWastePerCover","overflow","wasteSteamsValue","inputData","autoSkip","callbacks","tooltipItems","tooltipItem","datasetIndex","WastePerSalesContext","WastePerSalesContextProvider","wastePerSalesForAllWaste","wastePerSalesForCoverWaste","wastePerSalesForPreparationWaste","wastePerSalesForSpoilageWaste","totalSalesInputs","setTotalSalesInputs","salesInputDataArray","setSalesInputDataArray","wastePerSales","salesWasteDataArray","spoilageFoodWaste","prepFoodWaste","coverFoodWaste","totalSalesInput","searchErrorForWastePerSales","selectedYearForWastePerSales","WastePerSalesGraph","setWastePerSales","WasteOnAdayOfTheWeekContext","WasteOnAdayOfTheWeekProvider","wasteOnAdayOfTheWeekData","setWasteOnAdayOfTheWeek","day","setDay","setYear","setStartDate","get","getWasteOnAdayOfTheWeek","responseData","wasteOnADayOfTheWeek","isGap","WasteOnAdayOfTheWeek","gapArray","setGapArray","input","weeks","showWasteOnAdayOfTheWeek","setActiveState","capLimit","setCapLimit","setShowWasteOnAdayOfTheWeek","LeftArr","startYear","RightArr","dayName","ret","rem","getMonthNum","Subheadings","SlackChart","chartData","DailySalesVsWasteContext","DailySalesVsWasteInputsProvider","dailyMenuInputs","setDailyMenuInputs","setId","dataFromDB","setData","setChartData","allFormatedData","setAllFormatedData","allMenuItems","setAllMenuItems","setFirstDayOfTheWeek","indexNumber","getMenuInputData","getTopCausesOfWaste","newMenuWaste","filterDataForChart","updateGraph","removeEmptyArray","menuItems","itemName","putAlllabelsInArray","uniqueArray","removeArrayDuplicates","dataFormatForChart","totalWastePerItem","uniqueSet","Set","companyNumber","getMenuInput","weekOfTheYear","getWeek","valueOf","dayNr","setDate","firstThursday","setMonth","ceil","weekOfTheYearData","menuWaste","getFirstDayOfTheWeek","dailyMenuInputsData","menuWasteWeek","dailyMenuInputsDataAfterFiltered","filterOutEmptyObjects","menuItem","filterDataByDate","updateDailySalesVsWasteInput","DailySalesVsWasteReport","dateLabels","setDateLabels","setFormatedDate","setShowDailySalesVsWasteReport","showDailySalesVsWasteReport","flexDirection","coverWasteMaxDailyValue","spoilageWasteMaxDailyValue","preparationWasteMaxDailyValue","Switches","initialStateForShowTotalWasteChart","initialStateForShowFoodWasteTargetSavings","initialStateForShowAiPredictions","initialStateForShowWastePerCover","initialStateForShowWastePerSales","initialStateForShowWeeklyTrendChart","initialStateForShowHourlyChartSwitch","setShowHourlyChart","initialStateForShowDailyChartSwitch","setShowDailyChart","initialStateForShowWeeklyChartSwitch","setShowWeeklyChart","initialStateForShowMonthlyChartSwitch","setShowMonthlyChart","initialStateForWasteOnADayOfTheWeek","initialStateForDailySalesVsWasteReport","initialStateForSwitches","hourlyChartSwitch","dailyChartSwitch","weeklyChartSwitch","monthlyChartSwitch","wastePerSalesSwitch","wastePerCoverSwitch","aiPredictionSwitch","foodWasteTargetSwitch","totalSiteWasteSwitch","weeklyWasteTrendSwitch","wasteOnAdayOfTheWeekSwitch","dailySalesVsWasteReportSwitch","checked","setChecked","handleChange","checkedObject","Controller","page","setPage","rowsPerPage","setRowsPerPage","clear","sessionStorage","location","reload","stickyHeader","allsites","Radio","inputProps","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","Dashboard","twoColumns","rightColumn","items","leftColumn","initialStateForColumns","columns","setColumns","handleChangePage","handleChangeRowsPerPage","onDragEnd","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","removed","column","copiedItems","entries","columnId","provided","droppableProps","innerRef","draggableId","draggableProps","dragHandleProps","PublicLiveFeed","setCompanyId","match","params","KitchenLiveFeed","AuthenticatedRoute","C","appProps","rest","render","isAuthenticated","UnauthenticatedRoute","root","MultilineTextFields","steps","noValidate","autoComplete","TextField","select","savingPercentage","SelectProps","native","helperText","option","setWidth","button","marginRight","instructions","marginBottom","HorizontalLinearStepper","activeStep","setActiveStep","Typography","Button","getStepContent","poundsKGconverter","disabled","prevActiveStep","checkActiveStep","Settings","potentialSavingsInAday","setPotentialSavingsInAday","potentialSavingsInWeek","setPotentialSavingsInWeek","potentialSavingsInMonth","setPotentialSavingsInMonth","potentialSavingsInYear","setPotentialSavingsInYear","kiloOfCO2SavedYearlyDisplay","setKiloOfCO2SavedYearlyDisplay","numberOfMealsSavedYearlyDisplay","setNumberOfMealsSavedYearlyDisplay","cspWasteOfPreviousMonth","setCspWasteOfPreviousMonth","percentagedSavingsTotal","setPercentagedSavingsTotal","coverBreakDown","setCoverBreakDown","prepBreakDown","setPrepBreakDown","spoilageBreakDown","setSpoilageBreakDown","setPoundsKGconverter","setSavingPercentage","sendToDataBase","setSendToDataBase","recommendTargetDisplay","setRecommendTargetDisplay","percentSavingsInAday","percentSavingsInAweek","percentSavingsInAmonth","percentSavingsInAyear","recommendTarget","totalPercentagedSavingsTotal","totalCSPforPreviousMonth","yearlyKilosOfCO2saved","yearlyMealsSaved","showResults","monthNumber","previousMonthNumber","monthlyValue","percentSavingsForCoverWaste","percentSavingsForPreparationWaste","percentSavingsForSpoilageWaste","kilosOfMonthlyCO2saved","mealsSaved","saveTargets","put","postTargets","AddCapping","setTotalCappingValues","monthlyCappingValues","setMonthlyCappingValues","setWeeklyCappingValues","setDailyCappingValues","setHourlyCappingValues","setWastePerCoverCappingValues","setWastePerSalesCappingValues","setSiteId","isSubmitting","setIsSubmitting","handleFieldChange","numTwo","numThree","numFour","numFive","numSix","numSeven","numEight","numNine","numTen","numEleven","numTwelve","numThirteen","numFourteen","numFifteen","postCapping","callGetCappingAPI","InputProps","disableUnderline","pagination","previousLabel","nextLabel","pageCount","onPageChange","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","initialPage","CoverInputs","displays","setDisplays","setSite","pageNumber","setPageNumber","formatedSiteName","formatDateToDatabaseDateFormat","addDateToObject","assign","removeEmptyFields","companyInformation","addMenuInput","newDate","handleChangeInput","newInputFields","IconButton","weightPerItem","wastePerCent","marginLeft","salesNum","weightNum","wasteNum","getWeight","weightAsWaste","getWastePerSales","fontFamily","cursor","deleteItem","selected","inputsList","DisplaySettings","switchBase","track","Switch","focusVisibleClassName","focusVisible","disableRipple","require","setCovers","setPageCount","firstDateOfTheWeek","setFirstDateOfTheWeek","setWeekOfYear","newArray","numberOfDates","handleChangeForCheckBox","newValue","confirmedCovers","Checkbox","SalesInputs","setSales","confirmedSales","Input","CompanySelector","companiesNamesAndIDs","setCompaniesNamesAndIDs","filteredData","load","paddingTop","fields","Routes","path","exact","Capping","Inputs","coverInputs","salesInputs","DailySalesVsWasteInputs","InputsList","Displays","SideDrawer","content","CSSTransition","in","timeout","classNames","mountOnEnter","unmountOnExit","ReactDOM","createPortal","document","getElementById","Backdrop","MainNavigation","drawerIsOpen","setDrawerIsOpen","toggleActiveStyles","closeDrawerHandler","menu","kgPoundsConverter","showHamburgerButton","UsersInformation","setUserDetail","setNoOfUsers","setSuperAdminCreatedUsers","formatedIntoNumber","saveLoginTime","updateUsersLoginTime","toLocaleString","timeZone","getTheLoginTimeFromUsers","getLoginTimeFromUsers","CompanyInformation","setSelectedValueID","setcompanyName","setCarbonMunicipalValue","monthlyArr","getCurrentMonthlyAndYear","startData","yearsArray","currentYear","reverse","getYearsArray","useGetRequests","selectedMonth","setSelectedMonth","setSearchErrorForWastePerSales","setSelectedYearForWastePerSales","allSites","setAllSites","setTotalWasteFromSelectedSite","setWeeklyWaste","setWeeklyTrend","setWeeklyWasteValuesForCurrentWeekAndLastWeek","setRecommendedTargets","setAiPredictionsData","setCappingValue","setDailyWaste","sethourlyWaste","setWeeklyDaysLabels","setWeeklyDaysRange","setAllWeekSalesInputs","setAllWeekCoverInputs","callCoverInput","siteNameSelected","getCoverInput","weeknumber","getThisWeekCoverInput","weeklyCovers","callSalesInput","getSalesInput","getThisWeekSalesInput","weeklySales","callDailyAndWeeklyDatesData","formatedXaxis","formattingDataLabel","convertDate","dateRangeLabel","weeklyDates","numberInDay","indexForNumberInDay","companySite","getAiPrediction","getAiPredictionData","getTargetsData","getTargets","callWeeklyWasteAPI","getWeeklyWaste","weeklyWasteValuesForCurrentWeekAndLastWeekData","lastWeekWasteValues","callMonthlyWastesAPI","getMonthlyWastes","callWastePerCover","getWastePerCover","callWastePerSales","getAllSites","getAllSitesData","KgPoundsConverter","withRouter","mySiteId","setMySiteId","setShowHamburgerButton","setUpdateGraph","yearly","response","getMasterTableData","attribute","currentMonthNumber","REGION","BUCKET","URL","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","Storage","bucket","endpoints","endpoint"],"mappings":"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","file":"static/js/main.ad31a9fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/green_kode_white.5a90a352.svg\";","module.exports = __webpack_public_path__ + \"static/media/meals.4e97c906.svg\";","module.exports = __webpack_public_path__ + \"static/media/co2.6797119b.svg\";","module.exports = __webpack_public_path__ + \"static/media/money.7f0795b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/previous_icon.3b04b1e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/next_icon.1b83573b.svg\";","module.exports = __webpack_public_path__ + \"static/media/green_kode.8f56e717.svg\";","import React from \"react\";\nimport Logo from \"../../../image/green_kode_white.svg\";\nimport {\n  faTwitter,\n  faInstagram,\n  faLinkedinIn,\n  faFacebook,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction Footer(props) {\n  return (\n    <div className=\"footer\">\n      <div className=\"footer__wrapper\">\n        <div className=\"footer__addressAndLogo\">\n          <img className=\"footer__logo\" src={Logo} alt=\"logo\" />\n          <p className=\"footer__address\">\n            Launchpad Falmouth University <br /> Penryn Campus\n            <br /> Treliever Road <br /> Penryn\n            <br />\n            Cornwall <br /> TR10 9FE\n          </p>\n        </div>\n        <div className=\"footer__contact\">\n          <p className=\"footer__contactHeader--style\">Contact us</p>\n          <div>\n            <FontAwesomeIcon icon={faEnvelope} />\n            <a\n              className=\"footer__contactIcon--style\"\n              href=\"mailto:contact@greenkode.net\"\n              target=\"_top\"\n            >\n              contact@greenkode.net\n            </a>\n          </div>\n        </div>\n        <div className=\"footer__heading\">\n          <p className=\"footer__heading--style\">\"{props.message}\"</p>\n        </div>\n        <div className=\"footer__socialMedia\">\n          <div className=\"footer__socialMedia--padding\">\n            <div className=\"circle\">\n              <a\n                href=\"https://twitter.com/GreenKode_net\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <FontAwesomeIcon icon={faTwitter} />\n              </a>\n            </div>\n          </div>\n          <div className=\"footer__socialMedia--padding\">\n            <div className=\"circle\">\n              <a\n                href=\"https://www.instagram.com/green_kode/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <FontAwesomeIcon icon={faInstagram} />\n              </a>\n            </div>\n          </div>\n          <div className=\"footer__socialMedia--padding\">\n            <div className=\"circle\">\n              <a\n                href=\"https://www.linkedin.com/company/greenkode/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <FontAwesomeIcon icon={faLinkedinIn} />\n              </a>\n            </div>\n          </div>{\" \"}\n          <div className=\"footer__socialMedia--padding\">\n            <div className=\"circle\">\n              <a\n                href=\"https://www.facebook.com/greenkodenet/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <FontAwesomeIcon icon={faFacebook} />\n              </a>\n            </div>\n          </div>{\" \"}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react'\nimport { SyncLoader } from \"react-spinners\"\n\n// const Spinner = props => {\nconst Spinner = () => {\n    return(\n        <div className=\"Spinner\">\n            <SyncLoader\n                size={16}\n                color={\"rgb(140, 112, 140)\"}\n             />\n            {/* <div className=\"modal-loader\"></div> */}\n        </div>\n    )\n}\n\nexport default Spinner;","import React, { useState } from \"react\";\nimport Spinner from \"./spinner\";\n\n// const useSpinner = prop => {\nconst useSpinner = () => {\n     const [visible, setVisible] = useState(false)\n\n     const showSpinner = () => setVisible(true);\n     const hideSpinner = () => setVisible(false);\n     const spinner = visible ? <Spinner /> : null;\n\n     return [ spinner, showSpinner, hideSpinner];\n};\n\nexport default useSpinner;","import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { Link } from \"react-router-dom\";\nimport Footer from \"../../navigation/footer\";\n\nimport useSpinner from \"../../libs/use-spinner\";\n\nconst initialFormState = {\n  username: '', password: '', email: '', authCode: '', formType: 'signIn'\n}\n\nexport default function Login(props) {\n  const [formState, updateFormState] = useState(initialFormState)\n\n  function onChange(e) {\n    e.persist()\n    updateFormState(() => ({ ...formState, [e.target.name]: e.target.value }))\n  }\n  const { formType } = formState\n\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [spinner, showSpinner, hideSpinner] = useSpinner();\n\n  async function signIn() {\n\n    const { username, password } = formState\n    showSpinner()\n\n    try {\n\n      const result = await Auth.signIn(username, password)\n\n      if (result) {\n        hideSpinner()\n\n        const usersEmail = Auth.user.attributes.email;\n        const companyName = Auth.user.attributes[\"custom:company\"];\n        const companyId = Auth.user.attributes[\"custom:companyId\"];\n\n        const userGroups = Auth.user.signInUserSession.accessToken.payload[\"cognito:groups\"];\n        const name = Auth.user.attributes[\"name\"];\n        // const noOfUsers = Auth.user.attributes[\"custom:NumberOfUsersCreated\"] ? Auth.user.attributes[\"custom:NumberOfUsersCreated\"]: 6;\n        const noOfUsers = Auth.user.attributes[\"custom:NumberOfUsersSix\"] ? Auth.user.attributes[\"custom:NumberOfUsersSix\"] : 6;\n\n\n        const checkIfUserHasPermissionToAccessDashboard = userGroups.filter((data) => {\n          return data === \"admin\" || data === \"greenkodeUser\" || data === \"superAdmin\" || data === \"user\"\n        })\n\n        const greenkodeUser = userGroups.find(element => element === \"greenkodeUser\");\n        const admin = userGroups.find(element => element === \"admin\");\n        const superAdmin = userGroups.find(element => element === \"superAdmin\");\n        const user = userGroups.find(element => element === \"user\");\n\n        const typeOfUser = greenkodeUser ? greenkodeUser : superAdmin ? superAdmin : admin ? admin : user ? user : user;\n\n        if (typeOfUser === \"superAdmin\" || typeOfUser === \"admin\" || typeOfUser === \"user\") {\n\n          if (companyName !== undefined) {\n\n            if (checkIfUserHasPermissionToAccessDashboard.length === 0) {\n\n              await Auth.signOut();\n\n            } else {\n\n              const userDetails = {\n                companyname: companyName,\n                email: usersEmail,\n                fullName: name,\n                typeOfUser: typeOfUser\n              };\n\n              props.saveUserType(typeOfUser)\n              props.getUserDetails(userDetails);\n              props.getNoOfUsersCreated(noOfUsers);\n              props.userHasAuthenticated(true);\n\n              props.getAllData(companyName, usersEmail, userDetails, companyId);\n              // props.getAllData(companyName, userDetails);\n            }\n\n          }\n        } else {\n          props.userHasAuthenticated(true);\n          props.saveUserType(typeOfUser)\n        }\n\n      }\n\n    } catch (e) {\n      console.log(\"e\", e)\n\n      let message;\n\n      if (e.code === \"UserNotConfirmedException\" || e.code === \"NotAuthorizedException\") {\n        message = e.message;\n      } else {\n        message = \"An error occurred while logging in, please re-enter again\";\n      }\n\n      setErrorMessage(message)\n      hideSpinner()\n    }\n\n  }\n\n\n  return (\n\n    <>\n      {spinner}\n      {\n        formType === 'signIn' && (\n          <div className=\"login\">\n\n            <div className=\"login__form\">\n              <div controlid=\"email\" bssize=\"large\" className=\"login__wrapper\">\n                <div className=\"login__email--colorAndSpacing\">\n                  <h3>Email</h3>\n                </div>{\" \"}\n                <input name=\"username\" onChange={onChange} placeholder=\"username\" className=\"login__emailInput\" />\n              </div>\n              <div controlid=\"password\" bssize=\"large\" className=\"login__wrapper\">\n                <div className=\"login__password--colorAndSpacing\">\n                  <h3>Password</h3>\n                </div>{\" \"}\n                <input name=\"password\" type=\"password\" onChange={onChange} placeholder=\"password\" className=\"login__passwordInput\" />\n              </div>\n              <button onClick={signIn}>\n                <h3>Sign in</h3>\n              </button>\n              <div className=\"login__links\">\n                <Link className=\"login__linksForgotpassword\" to=\"forgotpassword\">Forgot Password</Link>\n              </div>\n              <div className=\"warning-message\">{errorMessage}</div>\n            </div>\n\n            <div className=\"login__heading\">\n              <div className=\"login__heading--size\">\n                \"The Hospitality <br />\n                sector can make a <br /> profit of £7 for every <br /> £1 they\n                invest in\n                <br /> cutting food waste, a<br /> global report reveals\"\n                <p className=\"login__headingReference\">\n                  https://champions123.org/the-business-case-for-reducing-food-loss-and-waste/\n                </p>\n              </div>\n            </div>\n          </div>\n        )\n      }\n\n      <Footer\n        message={\"Working towards a circular economy in waste management\"}\n      />\n\n    </>\n\n  );\n}\n\n","// import React, { useState } from \"react\";\n\nconst CheckRequest = () => {\n\n    const checkWeeklyWasteData = (data) => {\n        // console.log(\"data\", data)\n\n        let result;\n        if (Object.keys(data).length === 0 || data === null || data === undefined) {\n                result = {\n                    currentWeeklyValues: [\n                        [{\n                            coverWaste: [0],\n                            preparationWaste: [0],\n                            spoilageWaste: [0],\n                            weekOfYear: \"0\",\n                            Date:\"\"\n                        }]\n            ],\n            weeklyWasteTrend:\n             [\n                 {\n                     totalWaste: 0,\n                     coverWaste: 0,\n                     prepWaste: 0,\n                     spoilageWaste: 0\n                 }\n             ]\n        };\n        } else {\n            result = data;\n        }\n\n        return result;\n    };\n\n    const checkWastePerCoverOrSales = (data) => {\n        let result;\n        if (Object.keys(data).length === 0 || data === null || data === undefined) {\n            result = {\n                monthsName: \"\",\n                percentageOfInputsAreZeros: 0,\n                siteName: \"\",\n                totalCW: \"\",\n                totalCoverInputs: 0,\n                totalPW: \"\",\n                totalSW: \"\",\n                totalWaste: \"\",\n                wastePerCoverForAllWaste:[0],\n                wastePerCoverForCoverWaste: [0],\n                wastePerCoverForPreparationWaste: [0],\n                wastePerCoverForSpoilageWaste: [0],\n                xAxis: []\n                }\n        } else {\n            result = data\n        }\n\n        return result;\n    }\n\n    const checkAllSitesData = (data) => {\n        // console.log(\"data\",data)\n        let result;\n        if (Object.keys(data).length === 0 || data === null || data === undefined) {\n            result = [{\n                coverWaste: 0,\n                prepWaste: 0,\n                siteName: \"\",\n                spoilageWaste: 0,\n                totalWaste: 0,\n                trends: 0\n            }]\n        } else {\n            result = data\n        }\n\n        return result;\n    }\n\n    const checkGetDailyAndWeeklyDatesData = (data) => {\n        // console.log(\"data\",data)\n        let result;\n        if (Object.keys(data).length === 0 || data === null || data === undefined) {\n            result = {\n                dailyCoverWasteArrayFormated: [0],\n                dailyPrepWasteArrayFormated: [0],\n                dailySpoilageWasteArrayFormated: [0],\n                hourlyWastesWeeklyArray: [{\n                    date: \"\",\n                    data: {\n                        coverWaste: [0],\n                        preparationWaste: [0],\n                        spoilageWaste: [0]\n                    }\n                }],\n                totalDailyWaste: [0],\n                weeklyData: [\"2021-05-17\", \"2021-05-18\", \"2021-05-19\", \"2021-05-20\", \"2021-05-21\", \"2021-05-22\", \"2021-05-23\"]\n            }\n        } else {\n            result = data\n        }\n\n        return result;\n    };\n\n    return {\n        checkWeeklyWasteData,\n        checkWastePerCoverOrSales,\n        checkAllSitesData,\n        checkGetDailyAndWeeklyDatesData\n    }\n\n}\n\nexport default CheckRequest","import { API } from \"aws-amplify\";\nimport CheckRequest from \"./shared/components/libs/use-check-request\"\n\nconst {\n  checkWeeklyWasteData,\n  checkWastePerCoverOrSales,\n  checkAllSitesData,\n  checkGetDailyAndWeeklyDatesData\n} = CheckRequest()\n\n// getWastePerCover,\nexport const getWastePerCover = (id, company, site, month, year) => {\n  return new Promise((resolve, reject) => {\n    API.get(\"wastes\", `/getWastePerCoverData`,\n      {\n        'queryStringParameters': {\n          'id': id,\n          'company': company,\n          'site': site,\n          'month': month,\n          // 'year': year\n        }\n      }\n    )\n      .then((res) => {\n        console.log(\"res\", res)\n\n        const result = checkWastePerCoverOrSales(res)\n        resolve(result);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\n// getWastePerSales,\nexport const getWastePerSales = (id, company, site, month, year) => {\n  // console.log(\"monthly\",month)\n  // console.log(\"yearly\",year)\n  // console.log(\"selectedSiteValueID\",site)\n  // console.log(\"companyID\",id)\n  // console.log(\"companyName\",company)\n  return new Promise((resolve, reject) => {\n    API.get(\"wastes\", `/getWastePerSalesData`,\n      {\n        'queryStringParameters': {\n          'id': id,\n          'company': company,\n          'site': site,\n          'month': month,\n          // 'year': year\n        }\n      }\n    )\n      .then((res) => {\n        // console.log(\"here res\",res)\n        const result = checkWastePerCoverOrSales(res)\n        // console.log(\"result\",result)\n        resolve(result);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\n// getMonthlyWastes,\nexport const getMonthlyWastes = (companyNumber, companyName, siteID) => {\n  return new Promise((resolve, reject) => {\n    API.get(\"wastes\", `/getMonthlyWasteData`, {\n      'queryStringParameters': {\n        'companyName': companyName,\n        'companyNumber': companyNumber,\n        'siteID': siteID\n      }\n    }).then((res) => {\n      // console.log(\"res\", res);\n      resolve(res);\n    })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\n// getAllCompaniesBack,\nexport const getAllCompaniesBack = () => {\n  return new Promise((resolve, reject) => {\n    API.get(\"wastes\", `/getAllCompaniesBack`).then((res) => {\n      console.log(\"getAllCompaniesBack\", res);\n      resolve(res);\n    })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\n// getAllSitesData,\nexport const getAllSitesData = (companyNumber, companyName) => {\n  return new Promise((resolve, reject) => {\n    API.get(\"wastes\", `/getAllSitesData`, {\n      'queryStringParameters': {\n        'id': companyNumber,\n        'companyName': companyName\n      }\n    }).then((res) => {\n      const result = checkAllSitesData(res);\n      // console.log(\"result\",result)\n      // console.log(\"res\",res)\n      resolve(result);\n    })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\n// getWeeklyWaste,\nexport const getWeeklyWaste = (companyNumber, companyName, siteID) => {\n  return new Promise((resolve, reject) => {\n    API.get(\"wastes\", `/getWeeklyWasteData`,\n      {\n        'queryStringParameters': {\n          'companyName': companyName,\n          'companyNumber': companyNumber,\n          'siteID': siteID\n        }\n      }\n    ).then((res) => {\n      console.log(\"res getWeeklyWaste\",res);\n      const result = checkWeeklyWasteData(res)\n      resolve(result);\n    })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\n// getTargets,\nexport const getTargets = (id, company, site) => {\n  // console.log(\"getTargets\")\n  return new Promise((resolve, reject) => {\n    API.get(\"wastes\", `/getTargets`,\n      {\n        'queryStringParameters': {\n          'id': id,\n          'company': company,\n          'site': site\n        }\n      }\n    )\n      .then((res) => {\n        // console.log(\"res\",res)\n        resolve(res);\n      })\n      .catch((error) => {\n        // console.log(\"error\",error)\n        reject(error);\n      });\n  });\n};\n\n// getAiPredictionData,\nexport const getAiPredictionData = (id, company, site) => {\n  // console.log(\"selectedSiteValueID\",site)\n  // console.log(\"companyID\",id)\n  // console.log(\"companyName\",company)\n  return new Promise((resolve, reject) => {\n    API.get(\"wastes\", `/getAiPredictionData`,\n      {\n        'queryStringParameters': {\n          'id': id,\n          'company': company,\n          'site': site\n        }\n      }\n    )\n      .then((res) => {\n        // console.log(\"res\",res)\n        resolve(res);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\n// getCapping,\nexport const getCapping = (id, company, site) => {\n  return new Promise((resolve, reject) => {\n    API.get(\"wastes\", `/getCapping`,\n      {\n        'queryStringParameters': {\n          'id': id,\n          'company': company,\n          'site': site\n        }\n      }\n    )\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\n// getDailyAndWeeklyDatesData,\nexport const getDailyAndWeeklyDatesData = (companyNumber, companyName, siteID) => {\n\n  // console.log(\"getDailyAndWeeklyDatesData companyNumber\", companyNumber)\n  // console.log(\"getDailyAndWeeklyDatesData companyName\", companyName)\n  // console.log(\"getDailyAndWeeklyDatesData siteID\", siteID)\n\n  return new Promise((resolve, reject) => {\n    API.get(\"wastes\", `/getDailyAndWeeklyDatesData`,\n      {\n        'queryStringParameters': {\n          'companyName': companyName,\n          'companyNumber': companyNumber,\n          'siteID': siteID\n        }\n      }\n    ).then((res) => {\n      console.log(\"getDailyAndWeeklyDatesData\", res);\n      const result = checkGetDailyAndWeeklyDatesData(res)\n      // console.log(\"result\",result);\n      resolve(result);\n    })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\n// getCoverInput,\nexport const getCoverInput = (companyNumber, companyName, siteID) => {\n  return new Promise((resolve, reject) => {\n    API.get(\"wastes\", `/getCoverInput`,\n      {\n        'queryStringParameters': {\n          'companyName': companyName,\n          'companyNumber': companyNumber,\n          'siteID': siteID\n        }\n      }\n    )\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\n// getSalesInput\nexport const getSalesInput = (companyNumber, companyName, siteID) => {\n  return new Promise((resolve, reject) => {\n    API.get(\"wastes\", `/getSalesInput`,\n      {\n        'queryStringParameters': {\n          'companyName': companyName,\n          'companyNumber': companyNumber,\n          'siteID': siteID\n        }\n      }\n    )\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\n// getMasterTableData\nexport const getMasterTableData = (companyName, companyId) => {\n  return new Promise((resolve, reject) => {\n\n    // console.log(\"companyId\",companyId)\n    // console.log(\"companyName\",companyName)\n\n    API.get(\"wastes\", `/masterTableData`,\n      {\n        'queryStringParameters': {\n          'companyId': companyId,\n          'companyName': companyName,\n        }\n      }\n    )\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\n\n//OTHER GET REQUESTS\n\nexport const getLoginTimeFromUsers = (companyNumber, companyName) => {\n  return new Promise((resolve, reject) => {\n    API.get(\"wastes\", `/getLoginTimeFromUsers`, {\n      'queryStringParameters': {\n        'companyName': companyName,\n        'companyNumber': companyNumber\n      }\n    }).then((res) => {\n      resolve(res);\n    })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const addToGroup = (username, groupName) => {\n  // console.log(\"username\",username)\n  // console.log(\"groupName\",groupName)\n\n  return new Promise((resolve, reject) => {\n    API.post(\"wastes\", `/addUserToGroup`, { body: { username, groupName } })\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((error) => {\n        console.log(\"error\", error)\n        reject(error);\n      });\n  });\n};\n\nexport const getLastYearMonthlyWaste = (companyNumber, companyName, siteID) => {\n  return new Promise((resolve, reject) => {\n    API.get(\"wastes\", `/getLastYearMonthlyWaste`, {\n      'queryStringParameters': {\n        'companyName': companyName,\n        'companyNumber': companyNumber,\n        'siteID': siteID\n      }\n    }).then((res) => {\n      // console.log(\"res\",res)\n      resolve(res);\n    })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\n// getMenuInput,\nexport const getMenuInput = (companyNumber, companyName, siteID) => {\n  return new Promise((resolve, reject) => {\n    API.get(\"wastes\", `/getMenuInput`,\n      {\n        'queryStringParameters': {\n          'companyName': companyName,\n          'companyNumber': companyNumber,\n          'siteID': siteID\n        }\n      }\n    )\n      .then((res) => {\n        // console.log(\"getMenuInput\",res)\n        resolve(res);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\n//GET WASTE ON A DAY OF THE WEEK\nexport const getWasteOnAdayOfTheWeek = (id, company, site, day, year) => {\n  return new Promise((resolve, reject) => {\n    API.get(\"wastes\", `/getWasteOnADayOfTheWeek`,\n      {\n        'queryStringParameters': {\n          'id': id,\n          'company': company,\n          'site': site,\n          'day': day,\n          'year': year\n        }\n      }\n    )\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const getTopCausesOfWaste = (id, companyName, siteId) => {\n\n  // console.log(\"id getTopCausesOfWaste\", id)\n  // console.log(\"companyName getTopCausesOfWaste\", companyName)\n  // console.log(\"siteId getTopCausesOfWaste\", siteId)\n\n  return new Promise((resolve, reject) => {\n    API.get(\"wastes\", `/getTopCausesOfWaste`, {\n      'queryStringParameters': {\n        'companyName': companyName,\n        'id': id,\n        'siteID': siteId\n      }\n    }).then((res) => {\n      // console.log(\" getTopCausesOfWaste res\", res)\n      resolve(res);\n    })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const getAllCompanies = () => {\n  return new Promise((resolve, reject) => {\n    API.get(\"wastes\", `/getAllCompanies`).then((res) => {\n      console.log(\" getAllCompanies res\", res)\n      resolve(res);\n    })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\n//OTHER UPDATE/POST REQUESTS\n\nexport const updateUsersAttribute = (username, value) => {\n  return new Promise((resolve, reject) => {\n    API.post(\"wastes\", `/updateUsersAttribute`, { body: { username, value } })\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((error) => {\n        console.log(\"error updateUsersAttribute\", error)\n        reject(error);\n      });\n  });\n};\n\nexport const updateUsersLoginTime = (userDetails, companyID, time) => {\n  // console.log(\"userDetails\",userDetails)\n  // console.log(\"companyID\",companyID)\n  // console.log(\"time\",time)\n\n  return new Promise((resolve, reject) => {\n    API.put(\"wastes\", `/updateUsersLoginTime/${companyID}`, { body: { userDetails, time } })\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((error) => {\n        console.log(\"error updateUsersLoginTime\", error)\n        reject(error);\n      });\n  });\n};\n\nexport const createUserLoginTime = (name, username, company, companyID) => {\n  return new Promise((resolve, reject) => {\n    API.post(\"wastes\", `/createUserLoginTime/`, { body: { name, username, company, companyID } })\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((error) => {\n        console.log(\"error\", error)\n        reject(error);\n      });\n  });\n}\n\nexport const addCoverInput = (covers) => {\n  console.log(\"RES\",covers);\n\n  return new Promise((resolve, reject) => {\n    API.post(\"wastes\", `/addCoverInput`, { body: covers })\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((error) => {\n        console.log(\"error\", error)\n        reject(error);\n      });\n  });\n};\n\nexport const addSalesInput = (sales) => {\n  return new Promise((resolve, reject) => {\n    API.post(\"wastes\", `/addSalesInput`, { body: sales })\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((error) => {\n        console.log(\"error\", error)\n        reject(error);\n      });\n  });\n};\n\nexport const postTargets = (data) => {\n  // console.log(\"data\",data)\n  return new Promise((resolve, reject) => {\n    API.put(\"wastes\", `/updateRecommendedTargets`, { body: data })\n      .then((res) => {\n        // console.log(\"res\",res)\n        resolve(res);\n      })\n      .catch((error) => {\n        console.log(\"error\", error)\n        reject(error);\n      });\n  });\n};\n\nexport const postCapping = (data) => {\n  return new Promise((resolve, reject) => {\n    API.put(\"wastes\", `/updateCapping`, { body: data })\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((error) => {\n        console.log(\"error\", error)\n        reject(error);\n      });\n  });\n};\n\nexport const addMenuInput = (menuItems, siteName, companyName, id) => {\n\n  const companyInformation = {\n    siteName: siteName,\n    companyName: companyName,\n    id: id\n  };\n\n  // console.log(\"menuItems\",menuItems);\n  return new Promise((resolve, reject) => {\n    API.put(\"wastes\", `/addMenuInput`, { body: { menuItems: menuItems, companyInformation: companyInformation } })\n      .then((res) => {\n        console.log(\"addmenu items\", res)\n        resolve(res);\n      })\n      .catch((error) => {\n        console.log(\"error\", error)\n        reject(error);\n      });\n  });\n};\n\nexport const verifyEmail = (email) => {\n  return new Promise((resolve, reject) => {\n    API.post(\"wastes\", `/verifyEmailIdentity`, { body: { email } })\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((error) => {\n        console.log(\"error\", error)\n        reject(error);\n      });\n  });\n};","import React, { useState, useEffect } from \"react\";\nimport {\n  faAsterisk,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useForm } from \"react-hook-form\";\nimport { Auth } from \"aws-amplify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nimport {\n  addToGroup,\n  updateUsersAttribute,\n  createUserLoginTime,\n  verifyEmail\n} from \"../../../../api\";\n\nimport useSpinner from \"../../libs/use-spinner\";\n\nimport {\n  TableRow,\n  Paper,\n  TableHead,\n  Table,\n  TableContainer,\n  TableCell,\n  TableBody,\n} from \"@material-ui/core\";\n\nexport default function Signup(props) {\n  const { register, handleSubmit, errors } = useForm();\n  const [errorMessageFromAWS, setErrorMessageFromAWS] = useState(\"\");\n\n  const [stage, setStage] = useState(1);\n  const [loginEmailAddress, setLoginEmailAddress] = useState(\"\");\n\n  const [ spinner, showSpinner, hideSpinner ] = useSpinner();\n\n  const useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    }\n  }));\n\n  const classes = useStyles();\n  const [userType, setUserType] = React.useState(\"user\");\n\n  const handleChange = (event) => {\n    setUserType(event.target.value);\n  };\n\n  useEffect(() => {\n    setLoginEmailAddress(props.userDetail.email)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ props.userDetail])\n\n  async function submit(values) {\n\n    showSpinner()\n\n    const username = values.email;\n    const password = values.password;\n    const name = values.name;\n    const phone = values.phone;\n\n    const company = props.companyName;\n    const noOfUsers = props.noOfUsers + 1\n    const companyID = props.companyID;\n\n    const signUpInformation = {\n      username,\n      password,\n      attributes: {\n          name: name,\n        \"custom:company\": company,\n        \"custom:NumberOfUsersSix\": \"0\",\n        \"custom:companyId\": companyID,\n        \"custom:smsAlerts\": \"true\",\n        \"custom:emailAlerts\": \"true\",\n        \"custom:mobile\": phone,\n        \"custom:companyStartDate\": props.startDate\n      },\n    };\n\n    console.log(\"signUpInformation\",signUpInformation);\n\n    //prevent adding user already been added\n    let error = false;\n\n    try {\n      await Auth.signUp(signUpInformation)\n      error = true;\n      hideSpinner()\n      setErrorMessageFromAWS(\"\")\n      setStage(2);\n    } catch (error) {\n      hideSpinner()\n      setErrorMessageFromAWS(error.message);\n      // error = false\n      console.log(\"error signing up:\", error);\n    }\n\n    if (error) {\n\n      if (userType === \"admin\") {\n        try {\n          await verifyEmail(username)\n        } catch (error) {\n          setErrorMessageFromAWS(error.message);\n          console.log(\"error verifyEmail:\", error);\n        }\n      }\n\n      try {\n        await addToGroup(username, userType)\n      } catch (error) {\n        setErrorMessageFromAWS(error.message);\n        console.log(\"error addToGroup:\", error);\n      }\n\n      try {\n        const numberOfUsers = noOfUsers.toString()\n        await updateUsersAttribute(loginEmailAddress, numberOfUsers)\n      } catch (error) {\n        setErrorMessageFromAWS(error.message);\n        console.log(\"error updateUsersAttribute:\", error);\n      }\n\n      try {\n        await createUserLoginTime(name, username, company, companyID);\n      } catch (error) {\n        setErrorMessageFromAWS(error.message);\n        console.log(\"error createUserLoginTime:\", error);\n      }\n    }\n\n  }\n\n\n  async function confirmSignUp(values) {\n    const username = values.email;\n    const code = values.code;\n\n    try {\n      await Auth.confirmSignUp(username, code).then(() => {\n        props.history.push(\"/dashboard\");\n      });\n    } catch (error) {\n      setErrorMessageFromAWS(error.message);\n    }\n  }\n\n  return (\n    <>\n      {spinner}\n      {stage === 1 && (\n        <div className=\"signup\">\n          <div className=\"signup__columns\">\n            <form onSubmit={handleSubmit(submit)} className=\"signup__form signup__column\">\n            <div className=\"signup__heading--style\">\n              Sign up maximum of {props.noOfUsers === 0 ? 6: 6 - props.noOfUsers} users\n            </div>\n\n            <div className=\"signup__wrapper\">\n              <div className=\"signup__textWrapper\">\n                <FontAwesomeIcon icon={faAsterisk} />\n                <div className=\"signup__inputText\">Email (Username)</div>{\" \"}\n              </div>\n              <input\n                autoFocus\n                type=\"email\"\n                name=\"email\"\n                className=\"signup__emailInput\"\n                ref={register({\n                  required: \"required\",\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: \"invalid email address\",\n                  },\n                })}\n              />\n              {errors.email ? (\n                <p>{errors.email.message} </p>\n              ): \"\"}\n            </div>\n\n            <div className=\"signup__wrapper\">\n              <div className=\"signup__textWrapper\">\n                <FontAwesomeIcon icon={faAsterisk} />\n                <div className=\"signup__inputText\">New Password</div>{\" \"}\n              </div>\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"signup__passwordInput\"\n                ref={register({\n                  required: \"required\",\n                  minLength: {\n                    value: 8,\n                    message: \"min length is 8\",\n                  },\n                })}\n              />\n              {errors.password ? (\n                <p>{errors.password.message} </p>\n              ):\"\"}\n            </div>\n\n            <div className=\"signup__wrapper\">\n              <div className=\"signup__textWrapper\">\n                <FontAwesomeIcon icon={faAsterisk} />\n                <div className=\"signup__inputText\">Full Name</div>{\" \"}\n              </div>\n              <input\n                type=\"name\"\n                name=\"name\"\n                className=\"signup__passwordInput\"\n                ref={register({\n                  required: \"required\",\n                })}\n              />\n              {errors.name ? (\n                <p>{errors.name.message} </p>\n              ):\"\"}\n            </div>\n\n            <div className=\"signup__wrapper\">\n              <div className=\"signup__textWrapper\">\n                <FontAwesomeIcon icon={faAsterisk} />\n                <div className=\"signup__inputText\">Mobile Number</div>{\" \"}\n              </div>\n              <input\n                type=\"number\"\n                name=\"phone\"\n                className=\"signup__passwordInput\"\n                ref={register({\n                  required: \"required\",\n                  minLength: {\n                    value: 11,\n                    message: \"invalid number\",\n                  },\n                  maxLength: {\n                    value: 11,\n                    message: \"invalid number\",\n                  },\n                })}\n                onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n              />\n              {errors.phone ? (\n                <p>{errors.phone.message} </p>\n              ):\"\"}\n            </div>\n\n            <div className=\"signup__userType__formWrapper\">\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                User Role\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={userType}\n                onChange={handleChange}\n                label=\"users\"\n              >\n                <MenuItem value={\"user\"}>Staff</MenuItem>\n                <MenuItem value={\"admin\"}>Head chef</MenuItem>\n              </Select>\n            </FormControl>\n            </div>\n\n            {props.noOfUsers === 6 ? <div style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              color: \"red\"\n            }}>\"You have reached the maximum amount of users\"</div> :\n            <button\n              type=\"submit\"\n            >\n              Sign up\n            </button>\n            }\n\n            <div className=\"signUp__errorMessage\">\n              <p>{errorMessageFromAWS}</p>\n            </div>\n          </form>\n            <div className=\"signup__column\">\n\n\n                <TableContainer component={Paper}>\n                  <Table className=\"superAdminCreatedUsers__table\" aria-label=\"simple table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Full Name</TableCell>\n                        <TableCell align=\"left\">Most Recent Logins</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {props.superAdminCreatedUsers.map((row, id) => (\n                        <TableRow key={id}>\n                          <TableCell component=\"th\" scope=\"row\">\n                            {row.name}\n                          </TableCell>\n                          <TableCell align=\"left\">\n                            {\n                              row.loginTime.map((data) => {\n                                return (\n                                <div>\n                                  {data.time}\n                                </div>\n                                )\n                              })\n                            }\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n\n\n            </div>\n          </div>\n        </div>\n      )}\n\n      {stage === 2 && (\n        <div className=\"signup\">\n          <form onSubmit={handleSubmit(confirmSignUp)} className=\"signup__form\">\n            <div className=\"signup__heading--style\">Confirm Sign Up</div>\n\n            <div className=\"signup__wrapper\">\n              <div className=\"signup__emailText\">Username (Email)</div>{\" \"}\n              <input\n                autoFocus\n                type=\"email\"\n                name=\"email\"\n                className=\"signup__emailInput\"\n                ref={register({\n                  required: \"required\",\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: \"invalid email address\",\n                  },\n                })}\n              />\n            </div>\n            <div className=\"signup__wrapper\">\n              <div className=\"signup__passwordText\">Verification code</div>{\" \"}\n              <input\n                type=\"code\"\n                name=\"code\"\n                className=\"signup__passwordInput\"\n                ref={register({\n                  required: \"required\",\n                })}\n              />\n            </div>\n\n            <button\n              type=\"submit\"\n              bssize=\"large\"\n            >\n              confirm\n            </button>\n\n            <div className=\"forget-password-message\">\n              <p>{errorMessageFromAWS}</p>\n            </div>\n          </form>\n        </div>\n      )}\n\n    </>\n  );\n}\n","import React, { useState } from \"react\";\n// import button from \"./button\";\nimport { Auth } from \"aws-amplify\";\nimport Footer from \"../../navigation/footer\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function Forgotpassword(props) {\n  const [stage, setStage] = useState(1); // 1 = email stage, 2 = code stage\n  const [email, setEmail] = useState(\"\");\n  const { register, handleSubmit, watch, errors } = useForm();\n  const [errorMessageFromAWS, setErrorMessageFromAWS] = useState(\"\");\n\n  const sendCode = (event) => {\n    event.preventDefault();\n    Auth.forgotPassword(email)\n      .then((data) => {\n        console.log(data);\n        setStage(2);\n      })\n      .catch((error) => setErrorMessageFromAWS(error.message));\n  };\n\n  const resetPassword = (values) => {\n    const code = values.code;\n    const confirmPassword = values.confirmPassword;\n\n    Auth.forgotPasswordSubmit(email, code, confirmPassword)\n      .then(() => props.history.push(\"/\"))\n      .catch((err) =>\n\n      setErrorMessageFromAWS(err.message)\n\n      );\n  };\n\n  return (\n    <>\n      <div className=\"login\">\n        {stage === 1 && (\n          <form onSubmit={sendCode} className=\"login__form\">\n            <div className=\"signup__heading--style\">\n              <h3>Submit your email to receive code</h3>\n            </div>\n            <div controlid=\"email\" bssize=\"large\" className=\"login__wrapper\">\n              <div className=\"login__email--colorAndSpacing\">\n                <h3>\n                  Email\n                </h3>\n              </div>{\" \"}\n              <input\n                className=\"signup__passwordInput\"\n                value={email}\n                onChange={(event) => setEmail(event.target.value)}\n              />\n            </div>{\" \"}\n            <button type=\"submit\" bssize=\"large\">\n              <h3>\n                Submit\n              </h3>\n            </button>\n          </form>\n        )}\n\n        {stage === 2 && (\n          <form onSubmit={handleSubmit(resetPassword)} className=\"signup__form\">\n            <div className=\"forgotPassword__heading--style\">\n              <h3>\n              If your email exisits, you will receive a code in your inbox\n              </h3>\n            </div>\n            <div>\n              <div className=\"signup__wrapper\">\n                <div className=\"forgotPassword__text\"> <h3>code</h3> </div>{\" \"}\n                <input\n                  className=\"signup__passwordInput\"\n                  name=\"code\"\n                  ref={register({\n                    required: \"required\",\n                  })}\n                />\n                {errors.code ? <p>{errors.code.message} </p> : \"\"}{\" \"}\n              </div>\n              <div className=\"signup__wrapper\">\n                <div className=\"forgotPassword__text\"> <h3>new password</h3> </div>{\" \"}\n                <input\n                  className=\"signup__passwordInput\"\n                  type=\"password\"\n                  name=\"password\"\n                  ref={register({\n                    required: \"required\",\n                    minLength: {\n                      value: 8,\n                      message: \"min length is 8\",\n                    },\n                  })}\n                />\n                {errors.password ? <p>{errors.password.message} </p> : \"\"}{\" \"}\n              </div>\n              <div className=\"signup__wrapper\">\n                <div className=\"forgotPassword__text\"><div> <h3>confirm password</h3> </div></div>{\" \"}\n                <input\n                  className=\"signup__passwordInput\"\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  ref={register({\n                    required: \"required\",\n                    minLength: {\n                      value: 8,\n                      message: \"min length is 8\",\n                    },\n                    validate: (value) =>\n                      value === watch(\"password\") || \"Passwords don't match.\",\n                  })}\n                />\n                {errors.confirmpassword ? (\n                  <p>{errors.confirmpassword.message} </p>\n                ) : (\n                  \"\"\n                )}{\" \"}\n              </div>\n            </div>\n            <button type=\"submit\" bssize=\"large\">\n              <h3>\n                Submit\n              </h3>\n            </button>\n            <div className=\"warning-message\">{errorMessageFromAWS}</div>\n\n          </form>\n        )}\n      </div>\n      <Footer\n        message={\"Working towards a circular economy in waste management\"}\n      />\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  faAsterisk,\n  // faQuestionCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Footer from \"../../navigation/footer\";\n// import { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { Auth } from \"aws-amplify\";\n\nimport {\n  addToGroup,\n} from \"../../../../api\";\n\nexport default function SignUpSuperAdmin(props) {\n  const { register, handleSubmit, errors } = useForm();\n  const [errorMessageFromAWS, setErrorMessageFromAWS] = useState(\"\");\n\n  const [stage, setStage] = useState(1);\n\n  async function submit(values) {\n\n    console.log(\"values.email\",values)\n\n    const username = values.email;\n    const phone = values.phone;\n    const password = \"PassW0rd!\"\n    const name = values.name;\n    const company = values.company;\n    const companyId = props.companyID;\n\n    const signUpInformation = {\n      username,\n      password,\n      attributes: {\n          name: name,\n        \"custom:company\": company,\n        \"custom:NumberOfUsersSix\": \"0\",\n        \"custom:companyId\": companyId,\n        \"custom:smsAlerts\": \"true\",\n        \"custom:emailAlerts\": \"true\",\n        \"custom:mobile\": phone\n      },\n    };\n\n    try {\n\n      console.log(\"signUpInformation\",signUpInformation)\n\n      await Auth.signUp(signUpInformation);\n      await addToGroup(username, \"superAdmin\")\n\n      setStage(2);\n    } catch (error) {\n      setErrorMessageFromAWS(error.message);\n      console.log(\"error signing up:\", error);\n    }\n  }\n\n  async function confirmSignUp(values) {\n    const username = values.email;\n    const code = values.code;\n\n    try {\n      await Auth.confirmSignUp(username, code).then(() => {\n        props.history.push(\"/login\");\n      });\n    } catch (error) {\n      setErrorMessageFromAWS(error.message);\n    }\n  }\n\n  return (\n    <>\n      {stage === 1 && (\n        <div className=\"signup\">\n          <form onSubmit={handleSubmit(submit)} className=\"signup__form\">\n            {/* <div className=\"signup__heading--style\">\n              Sign up up maximum of 3 users\n            </div> */}\n\n            <div className=\"signup__wrapper\">\n              <div className=\"signup__emailText\">Email (Username)</div>{\" \"}\n              <input\n                autoFocus\n                type=\"email\"\n                name=\"email\"\n                className=\"signup__emailInput\"\n                ref={register({\n                  required: \"required\",\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: \"invalid email address\",\n                  },\n                })}\n              />\n              {errors.email ? (\n                <p>{errors.email.message} </p>\n              ) : (\n                <FontAwesomeIcon icon={faAsterisk} />\n              )}\n            </div>\n\n\n            <div className=\"signup__wrapper\">\n              <div className=\"signup__passwordText\">Full Name</div>{\" \"}\n              <input\n                type=\"name\"\n                name=\"name\"\n                className=\"signup__passwordInput\"\n                ref={register({\n                  required: \"required\",\n                })}\n              />\n              {errors.name ? (\n                <p>{errors.name.message} </p>\n              ) : (\n                <FontAwesomeIcon icon={faAsterisk} />\n              )}{\" \"}\n            </div>\n\n            <div className=\"signup__wrapper\">\n              <div className=\"signup__passwordText\">Company Name</div>{\" \"}\n              <input\n                type=\"company\"\n                name=\"company\"\n                className=\"signup__passwordInput\"\n                ref={register({\n                  required: \"required\",\n                  maxLength: 20,\n                })}\n              />\n              {errors.company ? (\n                <p>{errors.company.message} </p>\n              ) : (\n                <FontAwesomeIcon icon={faAsterisk} />\n              )}{\" \"}\n            </div>\n\n            <div className=\"signup__wrapper\">\n              <div className=\"signup__passwordText\">Mobile number</div>{\" \"}\n              <input\n                // type=\"number\"\n                name=\"phone\"\n                className=\"signup__passwordInput\"\n                ref={register({\n                  required: \"required\",\n                  maxLength: 20,\n                })}\n              />\n              {errors.company ? (\n                <p>{errors.company.message} </p>\n              ) : (\n                <FontAwesomeIcon icon={faAsterisk} />\n              )}{\" \"}\n            </div>\n\n            <div className=\"signup__wrapper\">\n              <div className=\"signup__passwordText\">company ID</div>{\" \"}\n              <input\n                name=\"companyID\"\n                className=\"signup__passwordInput\"\n                ref={register({\n                  required: \"required\",\n                  maxLength: 20,\n                })}\n              />\n              {errors.company ? (\n                <p>{errors.company.message} </p>\n              ) : (\n                <FontAwesomeIcon icon={faAsterisk} />\n              )}{\" \"}\n            </div>\n\n            <button\n              type=\"submit\"\n              onClick={submit}\n            >\n              Sign up\n            </button>\n\n            <div className=\"forget-password-message\">\n              <p>{errorMessageFromAWS}</p>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {stage === 2 && (\n        <div className=\"signup\">\n          <form onSubmit={handleSubmit(confirmSignUp)} className=\"signup__form\">\n            <div className=\"signup__heading--style\">Confirm Sign Up</div>\n\n            <div className=\"signup__wrapper\">\n              <div className=\"signup__emailText\">Username (Email)</div>{\" \"}\n              <input\n                autoFocus\n                type=\"email\"\n                name=\"email\"\n                className=\"signup__emailInput\"\n                ref={register({\n                  required: \"required\",\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: \"invalid email address\",\n                  },\n                })}\n              />\n            </div>\n            <div className=\"signup__wrapper\">\n              <div className=\"signup__passwordText\">Verification code</div>{\" \"}\n              <input\n                type=\"code\"\n                name=\"code\"\n                className=\"signup__passwordInput\"\n                ref={register({\n                  required: \"required\",\n                })}\n              />\n            </div>\n\n            <button\n              type=\"submit\"\n              bssize=\"large\"\n            >\n              confirm\n            </button>\n\n            <div className=\"forget-password-message\">\n              <p>{errorMessageFromAWS}</p>\n            </div>\n          </form>\n        </div>\n      )}\n\n       {/* <Footer\n        message={\n          \"Our partners estimated that we can save them 30% on total cost on food waste\"\n        }\n      /> */}\n    </>\n  );\n}\n","import React, { createContext } from 'react'\n\nexport const DashboardContext = createContext()\n\nconst DashboardContextProvider = props => {\n\n    let monthlySelectedValue = props.monthlySelectedValue\n    let handleSiteChange = props.handleSiteChange\n    let selectedValue = props.selectedValue\n    let siteName = props.siteName\n    let companyName = props.companyName\n    let sites = props.sites\n    let handleMonthlyValues = props.handleMonthlyValues\n    let displayMonthlyValue = props.displayMonthlyValue\n    let allMonthlyData = props.allMonthlyData\n    let monthlyChartMaxValue = props.monthlyChartMaxValue\n    let monthlyChangesValue = props.monthlyChangesValue\n    let startDate = props.startDate\n    let showPounds = props.showPounds\n    let userEmail = props.userEmail\n    let adminType = props.adminType\n    let count = props.count\n    let totalMonthlyWaste = props.totalMonthlyWaste\n    let clickOnMonthlyBarChart = props.clickOnMonthlyBarChart\n    let changeIndex = props.changeIndex\n    let userType = props.userType\n    let userDetail = props.userDetail\n    let sitesID = props.sitesID\n\n    let handleSiteIDchange = props.handleSiteIDchange\n    let selectedSiteValueID = props.selectedSiteValueID\n    let companyID = props.companyID\n\n    let weeklyDailyLabels = props.weeklyDailyLabels\n    let weeklyDailyRange = props.weeklyDailyRange\n\n  return (\n    <DashboardContext.Provider\n      value={{\n        monthlySelectedValue,\n        handleSiteChange,\n        selectedValue,\n        siteName,\n        companyName,\n        sites,\n        handleMonthlyValues,\n        displayMonthlyValue,\n        allMonthlyData,\n        monthlyChartMaxValue,\n        monthlyChangesValue,\n        startDate,\n        showPounds,\n        userEmail,\n        adminType,\n        count,\n        totalMonthlyWaste,\n        clickOnMonthlyBarChart,\n        changeIndex,\n        userType,\n        userDetail,\n        sitesID,\n        companyID,\n\n        handleSiteIDchange,\n        selectedSiteValueID,\n\n        weeklyDailyLabels,\n        weeklyDailyRange\n      }}\n    >\n      {props.children}\n    </DashboardContext.Provider>\n  )\n}\n\nexport default DashboardContextProvider\n","import React, { createContext, useEffect, useState } from 'react'\n\nexport const OverviewWasteContext = createContext()\n\nconst OverviewWasteContextProvider = props => {\n\n  const [coverWaste, setCoverWaste] = useState(0);\n  const [prepWaste, setPrepWaste] = useState(0);\n  const [spoilageWaste, setSpoilageWaste] = useState(0);\n  const [siteName, setSiteName] = useState(\"\");\n  useEffect(() => {\n\n    if (props.totalWasteFromSelectedSite[0] !== undefined) {\n\n      let site = props.totalWasteFromSelectedSite[0].siteName.replace(/[^A-Za-z]+/g, '').toUpperCase();\n      setSiteName(site)\n\n      setCoverWaste(props.totalWasteFromSelectedSite[0].coverWaste)\n      setPrepWaste(props.totalWasteFromSelectedSite[0].prepWaste)\n      setSpoilageWaste(props.totalWasteFromSelectedSite[0].spoilageWaste)\n    }\n\n}, [props.totalWasteFromSelectedSite])\n\n  return (\n    <OverviewWasteContext.Provider\n      value={{\n        coverWaste,\n        prepWaste,\n        spoilageWaste,\n        siteName\n      }}\n    >\n      {props.children}\n    </OverviewWasteContext.Provider>\n  )\n}\n\nexport default OverviewWasteContextProvider","import React, { createContext, useEffect, useState } from 'react'\n\nexport const WasteCapContext = createContext()\n\nconst WasteCapContextProvider = props => {\n\n  const [allCappingValue, setAllCappingValue] = useState({\n    \"wastePerCoverCappingValues\": [\n      {\n        \"id\": 0,\n        \"label\": \"wastePerCoverCoverWastes\",\n        \"type\": \"C\",\n        \"value\": 0\n      },\n      {\n        \"id\": 1,\n        \"label\": \"wastePerCoverSpoilageWastes\",\n        \"type\": \"S\",\n        \"value\": 0\n      },\n      {\n        \"id\": 2,\n        \"label\": \"wastePerCoverPreparationWastes\",\n        \"type\": \"P\",\n        \"value\": 0\n      }\n    ],\n    \"wastePerSalesCappingValues\": [\n      {\n        \"id\": 0,\n        \"label\": \"wastePerSalesCoverWastes\",\n        \"type\": \"C\",\n        \"value\": 0\n      },\n      {\n        \"id\": 1,\n        \"label\": \"wastePerSalesSpoilageWastes\",\n        \"type\": \"S\",\n        \"value\": 0\n      },\n      {\n        \"id\": 2,\n        \"label\": \"wastePerSalesPreparationWastes\",\n        \"type\": \"P\",\n        \"value\": 0\n      }\n    ],\n  })\n\n  const [weeklyCoverWastes, setWeeklyCoverWastes] = useState(0)\n  const [weeklySpoliageWastes, setWeeklySpoliageWastes] = useState(0)\n  const [weeklyPeparationWastes, setWeeklyPeparationWastes] = useState(0)\n\n  const [selectedSiteCoverWastes, setSelectedSiteCoverWastes] = useState(0)\n  const [selectedSiteSpoliageWastes, setSelectedSiteSpoliageWastes] = useState(0)\n  const [selectedSitePeparationWastes, setSelectedSitePeparationWastes] = useState(0)\n\n  const [dailyCoverWastes, setDailyCoverWastes] = useState(0)\n  const [dailySpoliageWastes, setDailySpoliageWastes] = useState(0)\n  const [dailyPeparationWastes, setDailyPeparationWastes] = useState(0)\n\n  const [hourlyCoverWastes, setHourlyCoverWastes] = useState(0)\n  const [hourlySpoliageWastes, setHourlySpoliageWastes] = useState(0)\n  const [hourlyPeparationWastes, sethHourlyPeparationWastes] = useState(0)\n\n  const [wastePerCoverCoverWastes, setWastePerCoverCoverWastes] = useState(0)\n  const [wastePerCoverSpoilageWastes, setWastePerCoverSpoilageWastes] = useState(0)\n  const [wastePerCoverPrepWastes, setWastePerCoverPrepWastes] = useState(0)\n\n  const [wastePerSalesCoverWastes, setWastePerSalesCoverWastes] = useState(0)\n  const [wastePerSalesSpoilageWastes, setWastePerSalesSpoilageWastes] = useState(0)\n  const [wastePerSalesPrepWastes, setWastePerSalesPrepWastes] = useState(0)\n\n  const [showPounds, setShowPounds] = useState(false)\n\n  useEffect(() => {\n\n    if (props.cappingValue) {\n      getAllCappingDataForForm(props.cappingValue.Items[0].cappingValue)\n      getWeeklyCappingValue(props.cappingValue.Items[0].cappingValue.weeklyCappingValues)\n      getSelectedSiteCappingValue(props.cappingValue.Items[0].cappingValue.totalCappingValues)\n      getHourlyCappingValue(props.cappingValue.Items[0].cappingValue.hourlyCappingValues)\n      getDailyCappingValue(props.cappingValue.Items[0].cappingValue.dailyCappingValues)\n      getWastePerCoverCappingValue(props.cappingValue.Items[0].cappingValue.wastePerCoverCappingValues)\n      getWastePerSalesCappingValue(props.cappingValue.Items[0].cappingValue.wastePerSalesCappingValues)\n    }\n\n    setShowPounds(props.showPounds)\n\n  }, [props.cappingValue, props.showPounds])\n\n  const getAllCappingDataForForm = (cappingValue) => {\n    setAllCappingValue(cappingValue);\n  }\n\n  const getWeeklyCappingValue = (cappingValues) => {\n    const cover = cappingValues.filter((data) => {\n      return data.label === \"weeklyCoverWastes\"\n    });\n\n    const spoilage = cappingValues.filter((data) => {\n      return data.label === \"weeklySpoilageWastes\"\n    });\n\n    const prep = cappingValues.filter((data) => {\n      return data.label === \"weeklyPreparationWastes\"\n    });\n\n    setWeeklyCoverWastes(cover[0].value)\n    setWeeklySpoliageWastes(spoilage[0].value)\n    setWeeklyPeparationWastes(prep[0].value)\n  }\n\n  const getHourlyCappingValue = (cappingValues) => {\n    const cover = cappingValues.filter((data) => {\n      return data.label === \"hourlyCoverWastes\"\n    });\n\n    const spoilage = cappingValues.filter((data) => {\n      return data.label === \"hourlySpoilageWastes\"\n    });\n\n    const prep = cappingValues.filter((data) => {\n      return data.label === \"hourlyPreparationWastes\"\n    });\n\n    setHourlyCoverWastes(cover[0].value)\n    setHourlySpoliageWastes(spoilage[0].value)\n    sethHourlyPeparationWastes(prep[0].value)\n  }\n\n  const getDailyCappingValue = (cappingValues) => {\n    const cover = cappingValues.filter((data) => {\n      return data.label === \"dailyCoverWastes\"\n    });\n\n    const spoilage = cappingValues.filter((data) => {\n      return data.label === \"dailySpoilageWastes\"\n    });\n\n    const prep = cappingValues.filter((data) => {\n      return data.label === \"dailyPreparationWastes\"\n    });\n\n    setDailyCoverWastes(cover[0].value)\n    setDailySpoliageWastes(spoilage[0].value)\n    setDailyPeparationWastes(prep[0].value)\n  }\n\n  const getSelectedSiteCappingValue = (cappingValues) => {\n\n    const cover = cappingValues.filter((data) => {\n      return data.label === \"totalCoverWastes\"\n    });\n\n    const spoilage = cappingValues.filter((data) => {\n      return data.label === \"totalSpoilageWastes\"\n    });\n\n    const prep = cappingValues.filter((data) => {\n      return data.label === \"totalPreparationWastes\"\n    });\n\n    setSelectedSiteCoverWastes(cover[0].value)\n    setSelectedSiteSpoliageWastes(spoilage[0].value)\n    setSelectedSitePeparationWastes(prep[0].value)\n  }\n\n  const getWastePerCoverCappingValue = (cappingValues) => {\n\n    const cover = cappingValues.filter((data) => {\n      return data.label === \"wastePerCoverCoverWastes\"\n    });\n\n    const spoilage = cappingValues.filter((data) => {\n      return data.label === \"wastePerCoverSpoilageWastes\"\n    });\n\n    const prep = cappingValues.filter((data) => {\n      return data.label === \"wastePerCoverPreparationWastes\"\n    });\n\n    setWastePerCoverCoverWastes(cover[0].value)\n    setWastePerCoverSpoilageWastes(spoilage[0].value)\n    setWastePerCoverPrepWastes(prep[0].value)\n  }\n\n  const getWastePerSalesCappingValue = (cappingValues) => {\n    const cover = cappingValues.filter((data) => {\n      return data.label === \"wastePerSalesCoverWastes\"\n    });\n\n    const spoilage = cappingValues.filter((data) => {\n      return data.label === \"wastePerSalesSpoilageWastes\"\n    });\n\n    const prep = cappingValues.filter((data) => {\n      return data.label === \"wastePerSalesPreparationWastes\"\n    });\n\n    setWastePerSalesCoverWastes(cover[0].value)\n    setWastePerSalesSpoilageWastes(spoilage[0].value)\n    setWastePerSalesPrepWastes(prep[0].value)\n  }\n\n  return (\n    <WasteCapContext.Provider\n      value={{\n        wastePerSalesCoverWastes,\n        wastePerSalesSpoilageWastes,\n        wastePerSalesPrepWastes,\n\n        allCappingValue,\n        weeklyCoverWastes,\n        weeklySpoliageWastes,\n        weeklyPeparationWastes,\n        showPounds,\n\n        selectedSiteCoverWastes,\n        selectedSiteSpoliageWastes,\n        selectedSitePeparationWastes,\n\n        dailyCoverWastes,\n        dailySpoliageWastes,\n        dailyPeparationWastes,\n\n        hourlyCoverWastes,\n        hourlySpoliageWastes,\n        hourlyPeparationWastes,\n\n        wastePerCoverCoverWastes,\n        wastePerCoverSpoilageWastes,\n        wastePerCoverPrepWastes\n      }}\n    >\n      {props.children}\n    </WasteCapContext.Provider>\n  )\n}\n\nexport default WasteCapContextProvider","import moment from \"moment\";\n\nexport const addDaysToDate = (firstDayOfTheWeek, numberOfdays) => {\n  const new_date = moment(firstDayOfTheWeek).add(numberOfdays, 'days');\n  return new_date.format('MMM DD YYYY');\n}\n\nexport const formatSiteName = (name) => {\n  return name.replace(/[^A-Za-z]+/g, '').toLowerCase();\n}\n\nexport const formatDateToDatabaseDateFormat = (date) => {\n  return moment(date).format(\"YYYY-MM-DD\");\n};\n\nexport const getWeekOfTheYear = () => {\n\n  Date.prototype.getWeek = function () {\n    var target  = new Date(this.valueOf());\n    var dayNr   = (this.getDay() + 6) % 7;\n    target.setDate(target.getDate() - dayNr + 3);\n    var firstThursday = target.valueOf();\n    target.setMonth(0, 1);\n    if (target.getDay() !== 4) {\n        target.setMonth(0, 1 + ((4 - target.getDay()) + 7) % 7);\n    }\n    return 1 + Math.ceil((firstThursday - target) / 604800000);\n  }\n\n  const d= new Date();\n  return d.getWeek()\n}\n\n// function getWeek() {\n//   // Create a copy of this date object\n//   var target  = new Date(this.valueOf());\n\n//   // ISO week date weeks start on monday, so correct the day number\n//   var dayNr   = (this.getDay() + 6) % 7;\n\n//   // Set the target to the thursday of this week so the\n//   // target date is in the right year\n//   target.setDate(target.getDate() - dayNr + 3);\n\n//   // ISO 8601 states that week 1 is the week with january 4th in it\n//   var jan4    = new Date(target.getFullYear(), 0, 4);\n\n//   // Number of days between target date and january 4th\n//   var dayDiff = (target - jan4) / 86400000;\n\n//   if(new Date(target.getFullYear(), 0, 1).getDay() < 5) {\n//     // Calculate week number: Week 1 (january 4th) plus the\n//     // number of weeks between target date and january 4th\n//     return 1 + Math.ceil(dayDiff / 7);\n//   }\n//   else {  // jan 4th is on the next week (so next week is week 1)\n//     return Math.ceil(dayDiff / 7);\n//   }\n// }\n\nexport const getMonthAsAnumber = () => {\n  const currentDate = new Date();\n  const getMonthAsAnumber = moment(currentDate).format('M');\n  return getMonthAsAnumber;\n}\n\nexport const getYear = () => {\n  var d = new Date();\n  var n = d.getFullYear();\n  return n;\n}\n\nexport const getYearsArray = (data) => {\n\n  let yearsArray = [];\n\n  let date = moment(data).format('YYYY')\n  let todayDate = new Date();\n  let currentYear = todayDate.getFullYear();\n\n  if (currentYear === date) {\n    yearsArray.push({\n      year: date,\n      show: true\n    });\n  } else {\n    for (let year = currentYear; year >= date; year--) {\n      yearsArray.push({\n        year: year,\n        show: year === currentYear\n      });\n    }\n  }\n  return yearsArray.reverse();\n};\n\nexport const splitCamelCaseStringAndMakeFirstCharacterUpperCase = (data) => {\n  if (data) {\n    const formatedData = data.replace(/([a-z])([A-Z])/g, '$1 $2');\n    const makeFirstCharacterCapital = formatedData.charAt(0).toUpperCase() + formatedData.slice(1)\n    return makeFirstCharacterCapital;\n  }\n}\n\nexport const getTotalMonthlyValue = (\n  monthlyValueCoverWaste,\n  monthlyValuePreparationWaste,\n  monthlyValueSpoliageWaste\n) => {\n  let totalMonthlyValue = [];\n  let i;\n  if (monthlyValueCoverWaste !== undefined) {\n    for (i = 0; i < 12; i++) {\n      let coverWaste = monthlyValueCoverWaste[i];\n      let preparationWaste =\n        monthlyValuePreparationWaste[i];\n      let spoliageWaste = monthlyValueSpoliageWaste[i];\n\n      totalMonthlyValue.push(coverWaste + preparationWaste + spoliageWaste);\n    }\n  }\n  return totalMonthlyValue;\n};\n\nexport const reducer = (accumulator, currentValue) => {\n  return accumulator + currentValue;\n}\n\nexport const getCurrentAndPreviousMonths = () => {\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  const date  = new Date();\n  const currentMonthNum = date.getMonth();\n  let previousMonthNum;\n  if (currentMonthNum === 0) {\n    previousMonthNum = 11\n  } else {\n    previousMonthNum = currentMonthNum - 1\n  }\n  let values = {\n    currentMonth: months[currentMonthNum],\n    previousMonth: months[previousMonthNum]\n  }\n  return values;\n}\n\nexport const getMonths = () => {\n  const date  = new Date();\n  const month = date.getMonth();\n  return month;\n}\n\nexport const getMonthsWord = () => {\n  const date  = new Date();\n  const month = date.getMonth();\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  return months[month];\n}\n\nexport const roundedUpNumberAndTurnBackToString = (data) => {\n  if (data) {\n    let changeToNumber = parseFloat(data)\n    let roundUp = parseInt(changeToNumber.toFixed(0));\n    return parseInt(roundUp)\n  }\n  if(0){\n    return parseInt(data)\n  }\n  if(\"0\"){\n    return parseInt(data)\n  }\n};\n\nexport const roundedUpNumberAndTurnBackToNumber = (data) => {\n  if (data) {\n    let changeToNumber = parseFloat(data)\n    let roundUp = parseInt(changeToNumber.toFixed(0));\n    return parseInt(roundUp)\n  }\n  if(0){\n    return parseInt(data)\n  }\n  if(\"0\"){\n    return parseInt(data)\n  }\n};\n\nexport const roundedUpNumberTwoPointsAndTurnBackToString = (data) => {\n  if (data) {\n    // let roundUp = parseFloat(data).toFixed(2);\n    let roundUp = parseFloat(data.toFixed(2));\n    return parseFloat(roundUp)\n  }\n  if(0){\n    return data\n  }\n}\n\nexport const getLocalStorageData = (data) => {\n  const localData = localStorage.getItem(data);\n  return localData ? JSON.parse(localData) : [];\n};\n\nexport const setItemInLocalStorage = (name, data) => {\n  localStorage.setItem(name, JSON.stringify(data));\n};\n\nexport const formatStartDate = (startDate) => {\n  var data = moment(startDate);\n  var newDateFormat =\n    data.format(\"MMM\").toUpperCase().substr(0, 3) + \"-\" + data.format(\"D\");\n  return newDateFormat;\n};\n\nexport const getEndDate = () => {\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  const today = new Date();\n  const dayNumber = String(today.getDate());\n  const monthNumber = parseInt(String(today.getMonth())); //January is 0!\n  const monthName = months[monthNumber];\n  const monthName3Characters = monthName.toUpperCase().substr(0, 3);\n  return monthName3Characters + \"-\" + dayNumber;\n};\n\nexport const hourlyWasteDateConverter = (data) => {\n  var date = moment(data, \"YYYY-MM-DD\");\n  return (\n    date.format(\"dddd\").toUpperCase().substr(0, 3) + \" \" + date.format(\"Do\")\n  );\n};\n\nexport const total = (data) => {\n  return data.reduce((a, b) => a + b, 0);\n};\n\nexport const totalCosts = (allSites, data) => {\n  return allSites\n    .map((site) => {\n      return site[data];\n    })\n    .reduce((a, b) => a + b, 0);\n};\n\nexport const numberOfMonthsBetweenStartDateAndCurrentDate = (startData) => {\n\n  const startYear = new Date(startData).getFullYear();\n  const thisYear = new Date().getFullYear();\n  const thisYearMinisStartYear = thisYear - startYear;\n\n  let totalNumberOfMonths = [];\n\n  for (let i = 0; i <= thisYearMinisStartYear; i++) {\n    const year = startYear + i\n\n    if (year === thisYear) {\n      const thisYearMonths = new Date().getMonth();\n      const formatedMonthsToGet1To12Not0To11 = thisYearMonths + 1\n      totalNumberOfMonths.push(formatedMonthsToGet1To12Not0To11);\n    } else if (year === startYear) {\n      const formatedToMomentData = moment(startData, \"YYYY-MM-DD\");\n      const months = formatedToMomentData.format('M');\n      //if the start date is in december it will count that one month\n      let numOfMonths;\n      if ((12 - months) === 0) {\n        numOfMonths = 1\n      } else {\n        numOfMonths = 12 - months\n      }\n      totalNumberOfMonths.push(numOfMonths);\n    } else {\n      totalNumberOfMonths.push(12);\n    }\n  }\n\n  const sumOfTotalNumberOfMonths = totalNumberOfMonths.reduce((a, b) => a + b, 0)\n  return sumOfTotalNumberOfMonths;\n};\n\nexport const convertDate = (dateLabel) => {\n  let formatedDateLabel;\n  let formattingDataLabel = dateLabel.map((date) => {\n    var data = moment(date, \"YYYY-MM-DD\");\n    let formatedDateLabel = [];\n    formatedDateLabel.push(\n      data.format(\"dddd\").toUpperCase().substr(0, 3) + \" \" + data.format(\"D\")\n    );\n    return formatedDateLabel;\n  });\n  formatedDateLabel = formattingDataLabel\n  return formatedDateLabel;\n};\n\nexport const weeklyWasteDateRange = (dateLabel) => {\n  if (dateLabel !== undefined) {\n    let lastWeek = moment(dateLabel.lastWeek, \"YYYY-MM-DD\");\n    let thisWeek = moment(dateLabel.thisWeek, \"YYYY-MM-DD\");\n    let lastWeekMonthName = lastWeek.format(\"MMMM\").substr(0, 3);\n    let thisWeekMonthName = thisWeek.format(\"MMMM\").substr(0, 3);\n\n    let convertToJavascriptDataOflastWeekDate = new Date(lastWeek);\n    let dateNumberOfLastWeek = convertToJavascriptDataOflastWeekDate.getDate()\n\n    let convertToJavascriptData = new Date(thisWeek);\n    let sixDays = (60 * 60 * 24 * 1000) * 6;\n    let datein6daysTime = new Date(convertToJavascriptData.getTime() + sixDays);\n    let dateNumber = datein6daysTime.getDate()\n\n    return `${dateNumberOfLastWeek} ${lastWeekMonthName} to ${dateNumber} ${thisWeekMonthName} `\n  }\n}\n\nexport const wasteDailyDateRange = (dateLabel) => {\n  let formatedDateLabel;\n  let monthName;\n\n  let formatingDateLabel = dateLabel.map((date) => {\n\n    var data = moment(date, \"YYYY-MM-DD\");\n\n    let formatedDateLabel = [];\n    formatedDateLabel.push(parseInt(data.format(\"D\")));\n\n    monthName = data.format(\"MMMM\").substr(0, 3);\n    return formatedDateLabel\n  });\n\n  formatedDateLabel = formatingDateLabel\n\n  let indexOfLastArrayValue = formatedDateLabel.length - 1\n\n  let smallestNumber = formatedDateLabel[0];\n  let highestNumber = formatedDateLabel[indexOfLastArrayValue];\n\n  return smallestNumber + \"-\" + highestNumber + \" \" + monthName;\n};\n\nexport const maxNumForHourlyChartFunction = (hourlyWasteValues) => {\n  // return Math.max.apply(Math, hourlyWasteValues) + 5;\n  let maxNum = Math.max.apply(Math, hourlyWasteValues)\n  return Math.max.apply(Math, hourlyWasteValues) + maxNum\n};\n\nexport const maxNumForCoverPerWasteChartFunction = (data) => {\n  // let maxNum = 0.5;\n  let maxNum = Math.max.apply(Math, data)\n  return Math.max.apply(Math, data) + maxNum;\n};\n\nexport const maxNumArrays = (array1, array2, array3) => {\n  let newArray = [];\n  newArray.push(Math.max.apply(Math, array1));\n  newArray.push(Math.max.apply(Math, array2));\n  newArray.push(Math.max.apply(Math, array3));\n  return Math.max.apply(Math, newArray);\n};\n\nexport const maxNumArray = (array) => {\n  return Math.max.apply(Math, array) + 50;\n};\n\nexport const minNumArray = (array) => {\n  return Math.min.apply(Math, array);\n};\n\nexport const calculateTodaysDate = () => {\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  const days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  const today = new Date();\n  const dayNumber = String(today.getDate());\n  const monthNumber = parseInt(String(today.getMonth())); //January is 0!\n  const monthName = months[monthNumber];\n  const year = today.getFullYear();\n  const date = new Date();\n  const index = date.getDay();\n  const daysName = days[index];\n\n  return daysName + \" \" + dayNumber + \" \" + monthName + \" \" + year;\n};\n","import React from \"react\";\n\nexport const AccordionHeading = (props) => {\n    return (\n        <div className= \"accordion__heading originalTheme__accordionHeading\">\n            {props.children}\n        </div>\n    )\n};\n\nexport const AccordionBody = (props) => {\n    return (\n        <div className={(props.open ? \"accordion__opening \" : \"displayNone accordion__closing\")}>\n            {props.children}\n        </div>\n    )\n};\n\n","import React, {  useContext } from \"react\";\n\nimport { OverviewWasteContext } from \"../../../../contexts/total-waste-context\";\n\nimport { WasteCapContext } from \"../../../../contexts/waste-cap-context\";\n\nimport { formatStartDate, roundedUpNumberAndTurnBackToNumber, setItemInLocalStorage } from \"../../../../utilities\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\n\nimport { AccordionHeading, AccordionBody } from \"../accordion\"\n\nexport default function TotalWaste(props) {\n\n    const {\n      selectedSiteCoverWastes,\n      selectedSiteSpoliageWastes,\n      selectedSitePeparationWastes,\n      showPounds\n     } = useContext(WasteCapContext);\n\n    const {\n      coverWaste,\n      prepWaste,\n      spoilageWaste,\n      siteName\n    } = useContext(OverviewWasteContext);\n\n    let totalCoverCap = 0\n    let totalSpoliageCap = 0\n    let totalPreparationCap = 0\n\n    if (showPounds) {\n      totalCoverCap = roundedUpNumberAndTurnBackToNumber(selectedSiteCoverWastes * 2.775)\n      totalSpoliageCap = roundedUpNumberAndTurnBackToNumber(selectedSiteSpoliageWastes * 2.775)\n      totalPreparationCap = roundedUpNumberAndTurnBackToNumber(selectedSitePeparationWastes * 2.775)\n    } else {\n      totalCoverCap = selectedSiteCoverWastes > 0 ? selectedSiteCoverWastes : 0\n      totalSpoliageCap = selectedSiteSpoliageWastes > 0 ? selectedSiteSpoliageWastes : 0\n      totalPreparationCap = selectedSitePeparationWastes > 0 ? selectedSitePeparationWastes : 0\n    }\n\n    let totalCapValue = totalCoverCap + totalSpoliageCap + totalPreparationCap;\n\n    let cover = 0;\n    let spoliage = 0;\n    let production = 0;\n\n    // console.log(\"coverWaste\",coverWaste)\n    // console.log(\"spoilageWaste\",spoilageWaste)\n    // console.log(\"prepWaste\",prepWaste)\n\n    if (showPounds) {\n      cover = roundedUpNumberAndTurnBackToNumber(coverWaste * 2.775)\n      spoliage = roundedUpNumberAndTurnBackToNumber(spoilageWaste * 2.775)\n      production = roundedUpNumberAndTurnBackToNumber(prepWaste * 2.775)\n    } else {\n      cover = coverWaste > 0 ? coverWaste: 0;\n      spoliage = spoilageWaste > 0? spoilageWaste: 0;\n      production = prepWaste > 0 ? prepWaste : 0;\n    }\n\n    let totalWaste = !isNaN(cover + spoliage + production) ? cover + spoliage + production : 0;\n\n    // const totalWasteInPounds = roundedUpNumberAndTurnBackToNumber(totalWaste * 2.775)\n    // console.log(\"totalWasteInPounds\",totalWasteInPounds)\n    // console.log(\"totalWaste\",totalWaste)\n\n    // const totalWasteInPoundsFormated = totalWasteInPounds\n\n    let coverWastepercentage = 0\n    let spoliageWastepercentage = 0\n    let productionWastepercentage = 0\n\n    if (isNaN((cover / totalCoverCap) * 100)) {\n      coverWastepercentage = 100\n    } else {\n      coverWastepercentage = (cover / totalCoverCap) * 100\n    }\n\n    if (isNaN((spoliage / totalSpoliageCap) * 100)) {\n      spoliageWastepercentage = 100\n    } else {\n      spoliageWastepercentage = (spoliage / totalSpoliageCap) * 100\n    }\n\n    if (isNaN((production / totalPreparationCap) * 100)) {\n      productionWastepercentage = 100\n    } else {\n      productionWastepercentage = (production / totalPreparationCap) * 100\n    }\n\n\n    let coverWasteColor;\n    if (cover >= totalCoverCap) {\n      coverWasteColor = \"rgba(255, 0, 0, 0.9)\";\n    } else if (cover === 0) {\n      coverWasteColor = \"rgb(163, 181, 44)\"\n    } else {\n      coverWasteColor = \"rgb(47, 67, 30)\";\n    }\n\n    let spoliageWasteColor;\n    if (spoliage >= totalSpoliageCap) {\n      spoliageWasteColor = \"rgba(255, 0, 0, 0.9)\";\n    } else if (spoliage === 0) {\n      spoliageWasteColor = \"rgb(163, 181, 44)\"\n    } else {\n      spoliageWasteColor = \"rgb(47, 67, 30)\";\n    }\n\n    let preparationWasteColor;\n    if (production >= totalPreparationCap) {\n      preparationWasteColor = \"rgba(255, 0, 0, 0.9)\";\n    } else if (production === 0) {\n      preparationWasteColor = \"rgb(163, 181, 44)\"\n    } else {\n      preparationWasteColor = \"rgb(47, 67, 30)\";\n    }\n\n    let textColor;\n\n    if (props.showDarkTheme) {\n      textColor = \"rgb(255, 231, 227)\";\n      } else {\n      textColor = \"rgb(140, 112, 140)\";\n    }\n\n    return (\n\n      <div className=\"total__wasteReport\">\n        {!props.hideReport &&\n          <>\n            <AccordionHeading>\n              <div className=\"section-title\">TOTAL WASTE FROM {siteName}</div>\n              <div className=\"container\">\n                {props.showTotalWasteChart ? (\n                  <span onClick={() =>\n                  {\n                    setItemInLocalStorage(\"showTotalWasteChart\", !props.showTotalWasteChart)\n                    props.setShowTotalWasteChart(!props.showTotalWasteChart)\n                  }\n                  }>X</span>\n                ) : (\n                  <span onClick={() =>\n                  {\n                    props.setShowTotalWasteChart(!props.showTotalWasteChart)\n                    setItemInLocalStorage(\"showTotalWasteChart\", !props.showTotalWasteChart)\n                  }\n                  }> | | | </span>\n                )}\n              </div>\n            </AccordionHeading>\n\n            <AccordionBody open={props.showTotalWasteChart}>\n              <div className= { props.showDarkTheme ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem\": \"originalTheme__reportBackgroundColor addPaddingOfHalveRem\"}>\n\n                <div className=\"report-subtitle\">Overview</div>\n\n                  <div className=\"total__wasteReport__reportHeading\">\n                  <div className=\"start-date cooperHewittBold\">START DATE: {formatStartDate(props.startDate)}</div>\n                  </div>\n\n                  <div className=\"total__wasteReport__capping\">\n                  <div className=\"capping--displayFlex\">\n                      <div className=\"applyMarginRightAndLeft applyPurpleColor cooperHewittBold\">Total Cap</div>\n\n                      <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                        {roundedUpNumberAndTurnBackToNumber(totalCapValue)}\n                      </div>\n\n                  </div>\n                  <b className=\"capping\">\n                          <div className=\"applyPurpleColor cooperHewittBold\">Cap</div>\n                          <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\">\n                          C\n                          </div>\n\n                          <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                            {roundedUpNumberAndTurnBackToNumber(totalCoverCap)}\n                          </div>\n\n                          <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\">\n                          S\n                          </div>\n\n                          <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                            {roundedUpNumberAndTurnBackToNumber(totalSpoliageCap)}\n                          </div>\n\n                          <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\">\n                          P\n                          </div>\n\n                          <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                            {roundedUpNumberAndTurnBackToNumber(totalPreparationCap)}\n                          </div>\n                  </b>\n                  </div>\n\n                  <div className=\"total__wasteReport__progressBarWrapper\">\n\n                      <>\n\n                      <div className=\"dashboard__progressBar\">\n\n                        <div className=\"dashboard__progressBar__one\">\n\n                          <div className=\"dashboard__progressBar__totalWasteValue__wrapper\">\n                              <div className=\"dashboard__progressBar__totalWasteValue\">\n                                {props.showPounds ? (\n                                  <>\n\n\n                                    <div className={props.showDarkTheme? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor cooperHewittBold\" :\"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor cooperHewittBold\"}>\n                                      £\n                                    </div>\n\n                                    <div className={props.showDarkTheme? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor\" :\"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor\"}>\n                                      {/* {totalWasteInPoundsFormated} */}\n                                      {totalWaste}\n                                    </div>\n                                  </>\n                                ) : (\n                                  <>\n\n                                    <div className={props.showDarkTheme? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor\" :\"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor\"}>\n                                      {totalWaste}\n                                    </div>\n\n                                    <div className={props.showDarkTheme? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor cooperHewittBold\" :\"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor cooperHewittBold\"}>\n                                      Kg\n                                    </div>\n                                  </>\n                                )}\n                              </div>\n                          </div>\n\n\n                        </div>\n\n                        <div className=\"dashboard__progressBar__two\">\n\n                          <div className=\"dashboard__progressBar__totalWasteValue--icon\">=</div>\n\n                          <div className=\"dashboard__progressBar__size\">\n                            {cover >= totalCoverCap ? (\n                              <div className=\"dashboard__progressBar__warningText\">WARNING!</div>\n                            ) : (\n                              <div\n                                style={{\n                                  marginTop: \"1rem\",\n                                }}\n                              ></div>\n                            )}\n\n                            <div className=\"dashboard__progressBar__wrapper\">\n                              <CircularProgressbar\n                                value={coverWastepercentage}\n                                text={\n                                  cover\n                                }\n                                styles={buildStyles({\n                                  textColor: textColor,\n                                  pathColor: coverWasteColor,\n                                  trailColor: \"rgb(163, 181, 44)\",\n                                  textSize: \"20px\",\n                                  strokeLinecap: \"butt\",\n                                })}\n                                strokeWidth={10}\n                              />\n                              <div className=\"dashboard__progressBar__text\">\n                                <div className=\"dashboard__progressBar__textSize\">\n                                  <b>C</b>OVER WASTE\n                                </div>\n                              </div>\n                            </div>\n\n                          </div>\n\n                          <div className=\"dashboard__progressBar__totalWasteValue--icon\">+</div>\n\n                          <div className=\"dashboard__progressBar__size\">\n                            {spoliage >= totalSpoliageCap ? (\n                              <div className=\"dashboard__progressBar__warningText\">WARNING!</div>\n                            ) : (\n                              <div\n                                style={{\n                                  marginTop: \"1rem\",\n                                }}\n                              ></div>\n                            )}\n                            <div className=\"dashboard__progressBar__wrapper\">\n                              <CircularProgressbar\n                                value={spoliageWastepercentage}\n                                text={\n                                  spoliage\n                                }\n                                styles={buildStyles({\n                                  textColor: textColor,\n                                  pathColor: spoliageWasteColor,\n                                  trailColor: \"rgb(163, 181, 44)\",\n                                  textSize: \"20px\",\n                                  strokeLinecap: \"butt\",\n                                })}\n                                strokeWidth={10}\n                              />\n                            </div>\n                              <div className=\"dashboard__progressBar__text\">\n                                <div className=\"dashboard__progressBar__textSize\">\n                                  <b>S</b>POILAGE\n                                </div>\n                              </div>\n                          </div>\n\n\n                          <div className=\"dashboard__progressBar__totalWasteValue--icon\">+</div>\n\n                          <div className=\"dashboard__progressBar__size\">\n                          {production >= totalPreparationCap ? (\n                            <div className=\"dashboard__progressBar__warningText\">WARNING!</div>\n                          ) : (\n                            <div\n                              style={{\n                                marginTop: \"1rem\",\n                              }}\n                            ></div>\n                          )}\n                          <div className=\"dashboard__progressBar__wrapper\">\n                            <CircularProgressbar\n                              value={productionWastepercentage}\n                              text={\n                                production\n                              }\n                              styles={buildStyles({\n                                textColor: textColor,\n                                pathColor: preparationWasteColor,\n                                trailColor: \"rgb(163, 181, 44)\",\n                                textSize: \"20px\",\n                                strokeLinecap: \"butt\",\n                              })}\n                              strokeWidth={10}\n                            />\n                          </div>\n\n                            <div className=\"dashboard__progressBar__text\">\n                              <div className=\"dashboard__progressBar__textSize\">\n                                <b>P</b>REPARATION\n                              </div>\n                            </div>\n                          </div>\n\n                        </div>\n\n\n                      </div>\n\n                      </>\n\n                  </div>\n\n                </div>\n            </AccordionBody>\n          </>\n        }\n      </div>\n\n    );\n}\n\n\n\n\n\n","import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React, { createContext, useEffect, useState } from 'react'\nimport { roundedUpNumberAndTurnBackToNumber } from \"./../utilities.js\"\n\nexport const DailyWasteContext = createContext()\n\nconst DailyWasteContextProvider = props => {\n\n  const [dailyWasteData, setDailyWasteData] = useState([]);\n  const [coverWaste, setDailyCoverWaste] = useState([]);\n  const [prepWaste, setDailyPrepWaste] = useState([]);\n  const [spoilageWaste, setDailySpoilageWaste] = useState([]);\n\n  useEffect(() => {\n\n    if (props.dailyWaste) {\n      // console.log(\"props.dailyWaste\",props.dailyWaste);\n\n      setDailyCoverWaste(props.dailyWaste.coverWaste)\n      setDailyPrepWaste(props.dailyWaste.prepWaste)\n      setDailySpoilageWaste(props.dailyWaste.spoilageWaste)\n      setDailyWasteData(props.dailyWaste.totalWaste)\n    }\n\n}, [ props.siteName, props.dailyWaste])\n\n  const getIndexesForBackgroundColours =(targets) => {\n\n    let cwTarget = targets.dailyCoverWastes;\n    let prepTarget= targets.dailyPeparationWastes;\n    let spoilageTarget = targets.dailySpoliageWastes;\n\n    let coverWasteOverTargetIndexArray = []\n    let spoilageWasteOverTargetIndexArray = []\n    let prepWasteOverTargetIndexArray = []\n\n    // console.log(\"coverWaste coverWaste\", coverWaste)\n    if (coverWaste !== undefined) {\n\n      coverWaste.map((data, i) => {\n\n        const formatedNumber = roundedUpNumberAndTurnBackToNumber(data)\n\n        if (formatedNumber >= cwTarget) {\n          coverWasteOverTargetIndexArray.push(i)\n        }\n        return \"\"\n      })\n\n      prepWaste.map((data, i) => {\n\n        const formatedNumber = roundedUpNumberAndTurnBackToNumber(data)\n\n        if (formatedNumber >= prepTarget) {\n          prepWasteOverTargetIndexArray.push(i)\n        }\n        return \"\"\n      })\n\n      spoilageWaste.map((data, i) => {\n\n        const formatedNumber = roundedUpNumberAndTurnBackToNumber(data)\n\n        if (formatedNumber >= spoilageTarget) {\n          spoilageWasteOverTargetIndexArray.push(i)\n        }\n        return \"\"\n      })\n\n    }\n\n\n    return {\n      coverWasteOverTargetIndexArray: coverWasteOverTargetIndexArray,\n      spoilageWasteOverTargetIndexArray: spoilageWasteOverTargetIndexArray,\n      prepWasteOverTargetIndexArray: prepWasteOverTargetIndexArray\n    }\n\n  }\n\n\n\n  return (\n    <DailyWasteContext.Provider\n      value={{\n        coverWaste,\n        prepWaste,\n        spoilageWaste,\n        getIndexesForBackgroundColours,\n        dailyWasteData,\n      }}\n    >\n      {props.children}\n    </DailyWasteContext.Provider>\n  )\n}\n\nexport default DailyWasteContextProvider\n","import React, { createContext, useEffect, useState } from 'react'\n\nimport { roundedUpNumberAndTurnBackToString, roundedUpNumberAndTurnBackToNumber } from \"./../utilities.js\"\n\nexport const HourlyFoodWasteContext = createContext()\n\nconst HourlyFoodWasteContextProvider = props => {\n\n  const [hourlyWasteDate, setHourlyWasteDate] = useState(false);\n  const [index, setIndex] = useState(0);\n\n  const [hourlyWasteSelector, setHourlyWasteSelector] = React.useState(\"production\");\n  const [hourlyWasteValues, setHourlyWasteValues] = React.useState([]);\n\n  const [clickOnHourlyBarChart, setClickOnHourlyChart] = React.useState(false);\n\n  const [hourlyCoverWasteData, setHourlyCoverWaste] = React.useState([]);\n  const [hourlyPreparationWasteData, setHourlyPrepWaste] = React.useState([]);\n  const [hourlySpoilageWasteData, setHourlySpoilageWaste] = React.useState([]);\n\n  const [allHourlyWasteData, setAllHourlyWasteData] = React.useState([]);\n\n  const [showTooltip, setTooltip] = React.useState(true);\n\n  useEffect(() => {\n\n    if(props.hourlyWaste) {\n      // console.log(\"props.hourlyWaste\",props.hourlyWaste)\n      setAllHourlyWasteData(props.hourlyWaste)\n      handleHourlyWaste(props.hourlyWaste)\n      // console.log(\"hourlyWasteValues\",hourlyWasteValues)\n    }\n\n  }, [ props.siteName, props.hourlyWaste])\n\n  const handleHourlyWaste = (item) => {\n    if (item) {\n      const index = item.index;\n      setIndex(index);\n\n      let date = item.date;\n      setHourlyWasteDate(date);\n\n      // console.log(\"item\",item)\n      // console.log(\"item.index\",item.index)\n      // console.log(\"index\",index)\n      // console.log(\"date\",date)\n\n\n      const hourlyWaste = item.hourlyWaste ? item.hourlyWaste: []\n      // console.log(\"hourlyWaste\",hourlyWaste)\n      if (hourlyWaste.length > 0) {\n        const selectedHourlyWaste = hourlyWaste[index];\n        // console.log(\"selectedHourlyWaste\",selectedHourlyWaste)\n        if (selectedHourlyWaste) {\n          setHourlyCoverWaste(selectedHourlyWaste.data.coverWaste)\n          setHourlyPrepWaste(selectedHourlyWaste.data.preparationWaste)\n          setHourlySpoilageWaste(selectedHourlyWaste.data.spoilageWaste)\n\n          let hourlyWasteDataFormated = []\n          selectedHourlyWaste.data.preparationWaste.map((data) => {\n            const formatedData = roundedUpNumberAndTurnBackToNumber(data)\n            hourlyWasteDataFormated.push(formatedData);\n            return \"\"\n          })\n          setHourlyWasteValues(hourlyWasteDataFormated)\n\n          setClickOnHourlyChart(true);\n\n          setHourlyWasteSelector(\"production\");\n        }\n\n      }\n\n    }\n  }\n\n  const showCoverWasteLabelRed = (cap, values, showPounds, capInPounds) => {\n    // console.log(\"cap\",cap)\n    // console.log(\"values\",values)\n    // console.log(\"showPounds\",showPounds)\n    // console.log(\"converterValue\",converterValue)\n    // console.log(\"capInPounds\",capInPounds)\n\n    const converterValue = 2.775\n\n    if (showPounds) {\n      const convertedValues = []\n\n      values.map((data) => {\n        convertedValues.push(data * converterValue)\n        return \"\"\n      })\n\n      let showRed;\n\n      let check = convertedValues.map((item) => {\n        let value = roundedUpNumberAndTurnBackToString(item)\n\n        if (value >= capInPounds) {\n          return true;\n        } else {\n          return false;\n        }\n      })\n\n      if (check.includes(true)) {\n        showRed = true;\n      } else {\n        showRed = false;\n      }\n\n      return showRed;\n\n    } else {\n\n      let showRed;\n\n      let check = values.map((item) => {\n        let value = roundedUpNumberAndTurnBackToString(item)\n        if (value >= cap) {\n          return true;\n        } else {\n          return false;\n        }\n      })\n\n      if (check.includes(true)) {\n        showRed = true;\n      } else {\n        showRed = false;\n      }\n\n    return showRed;\n\n    }\n  }\n\n  const handleHourlyWasteCategory = (e) => {\n    const value = e.target.id;\n    if (value === \"C\") {\n      // setHourlyWasteValues(hourlyCoverWasteData);\n      reformatData(hourlyCoverWasteData)\n      setHourlyWasteSelector(\"cover\");\n    } else if (value === \"S\") {\n      // setHourlyWasteValues(hourlySpoilageWasteData);\n      reformatData(hourlySpoilageWasteData)\n      setHourlyWasteSelector(\"spoliage\");\n    } else if (value === \"P\") {\n      // setHourlyWasteValues(hourlyPreparationWasteData);\n      reformatData(hourlyPreparationWasteData)\n      setHourlyWasteSelector(\"production\");\n    }\n\n    console.log(\"handleHourlyWasteCategory HERE\")\n    setTooltip(false);\n  };\n\n  const reformatData = (selectedData) => {\n    let hourlyWasteDataFormated = []\n    selectedData.map((data) => {\n      const formatedData = roundedUpNumberAndTurnBackToNumber(data)\n      hourlyWasteDataFormated.push(formatedData);\n      return \"\"\n    })\n    setHourlyWasteValues(hourlyWasteDataFormated)\n  }\n\n  const getIndexesForBackgroundColours =(showPounds, targetsInPounds, allCappings) => {\n\n    let cwTarget = allCappings.hourlyCoverWastesCap\n    let prepTarget =  allCappings.hourlyPeparationWastesCap\n    let spoilageTarget =  allCappings.hourlySpoliageWastesCap\n\n    let coverWasteOverTargetIndexArray = []\n    let spoilageWasteOverTargetIndexArray = []\n    let prepWasteOverTargetIndexArray = []\n\n    if (hourlyCoverWasteData) {\n      hourlyCoverWasteData.map((data, i) => {\n\n          const formatedNumber = roundedUpNumberAndTurnBackToNumber(data)\n\n          if (formatedNumber >= cwTarget) {\n            coverWasteOverTargetIndexArray.push(i)\n          }\n          return \"\"\n\n      })\n\n\n      hourlyPreparationWasteData.map((data, i) => {\n\n          const formatedNumber = roundedUpNumberAndTurnBackToNumber(data)\n\n          if (formatedNumber >= prepTarget) {\n            prepWasteOverTargetIndexArray.push(i)\n          }\n          return \"\"\n\n      })\n\n      hourlySpoilageWasteData.map((data, i) => {\n\n          const formatedNumber = roundedUpNumberAndTurnBackToNumber(data)\n\n          if (formatedNumber >= spoilageTarget) {\n            spoilageWasteOverTargetIndexArray.push(i)\n          }\n          return \"\"\n      })\n\n    }\n\n    return {\n      coverWasteOverTargetIndexArray: coverWasteOverTargetIndexArray,\n      spoilageWasteOverTargetIndexArray: spoilageWasteOverTargetIndexArray,\n      prepWasteOverTargetIndexArray: prepWasteOverTargetIndexArray\n    }\n\n  }\n\n\n  return (\n    <HourlyFoodWasteContext.Provider\n      value={{\n        index,\n        hourlyWasteValues,\n        hourlyWasteDate,\n        clickOnHourlyBarChart,\n        hourlyWasteSelector,\n\n        hourlyCoverWasteData,\n        hourlyPreparationWasteData,\n        hourlySpoilageWasteData,\n\n        showCoverWasteLabelRed,\n        handleHourlyWasteCategory,\n\n        allHourlyWasteData,\n        handleHourlyWaste,\n\n        getIndexesForBackgroundColours,\n\n        showTooltip\n      }}\n    >\n      {props.children}\n    </HourlyFoodWasteContext.Provider>\n  )\n}\n\nexport default HourlyFoodWasteContextProvider","import React, { createContext, useEffect, useState } from 'react'\nimport { addCoverInput, addSalesInput } from \"../api\";\n\nexport const InputsContext = createContext()\n\nconst InputsContextProvider = props => {\n\n  const [thisWeekCoverInputs, setThisWeekCoverInputs] = useState({\n    coversInput: [0, 0, 0, 0, 0, 0, 0],\n    checkBox: [0, 0, 0, 0, 0, 0, 0],\n    Date: \"\",\n    weekOfYear: \"\"\n  });\n\n  const [selectedSiteValueID, setSelectedSiteValueID] = useState(\"\")\n\n  const [thisWeekSalesInputs, setThisWeekSalesInputs] = useState({\n    salesInput: [0, 0, 0, 0, 0, 0, 0],\n    Date: \"\",\n    weekOfYear: \"\"\n  });\n\n  const [companyName, setCompanyName] = useState(\"\")\n  const [companyID, setCompanyID] = useState(\"\")\n  const [allWeekSalesInput, setAllWeekSalesInput] = useState(7);\n  const [allWeekCoverInput, setAllWeekCoverInput] = useState(7);\n\n\n  useEffect(() => {\n    setThisWeekSalesInputs(props.thisWeekSalesInput[0])\n\n    if (props.thisWeekCoverInputs[0] !== undefined) {\n      setThisWeekCoverInputs(props.thisWeekCoverInputs[0])\n    }\n    setSelectedSiteValueID(props.selectedSiteValueID)\n\n    setCompanyName(props.companyName)\n    setCompanyID(props.companyId)\n\n    setAllWeekSalesInput(props.allWeekSalesInput)\n    setAllWeekCoverInput(props.allWeekCoverInput)\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.companyId, props.companyName, props.selectedSiteValueID, props.thisWeekCoverInputs, props.thisWeekSalesInput, props.allWeekSalesInput, props.allWeekCoverInput])\n\n  const sendDataToDatabase = (type, data) => {\n\n    // console.log(\"sendDataToDatabase\",data)\n\n    switch (type) {\n      case \"COVER INPUTS\":\n        addCoverInput(data).then(() => {\n          props.updateValues(\"COVER INPUTS\")\n        })\n        break;\n      case \"SALES INPUTS\":\n        addSalesInput(data).then(() => {\n          props.updateValues(\"SALES INPUTS\")\n        })\n        break;\n      default:\n    }\n  }\n\n  const filterMenuItems = (selectedPage, type) => {\n    const menuItemsForSelectedPage = allWeekSalesInput[selectedPage];\n    const menuItemsForSelectedPageForCoverInputs = allWeekCoverInput[selectedPage];\n\n    // console.log(\"allWeekSalesInput\",allWeekSalesInput)\n    // console.log(\"selectedPage\",selectedPage)\n    // console.log(\"menuItemsForSelectedPage\",menuItemsForSelectedPage)\n\n    if (type === \"sales-inputs\") {\n      setThisWeekSalesInputs(menuItemsForSelectedPage)\n    } else if (type === \"cover-inputs\") {\n      setThisWeekCoverInputs(menuItemsForSelectedPageForCoverInputs)\n    }\n\n  };\n\n\n  return (\n    <InputsContext.Provider\n      value={{\n        thisWeekCoverInputs,\n        selectedSiteValueID,\n        thisWeekSalesInputs,\n        sendDataToDatabase,\n        companyName,\n        companyID,\n        allWeekSalesInput,\n        allWeekCoverInput,\n        filterMenuItems,\n      }}\n    >\n      {props.children}\n    </InputsContext.Provider>\n  )\n}\n\nexport default InputsContextProvider","\nimport React, { useState, useContext, useEffect } from \"react\";\n\nimport { Bar } from \"react-chartjs-2\";\nimport Chart from \"chart.js\";\nimport \"chartjs-plugin-annotation\";\nimport \"chartjs-plugin-datalabels\";\n\nimport {\n  wasteDailyDateRange,\n  roundedUpNumberAndTurnBackToNumber,\n} from \"../../../../utilities\";\n\nimport useWindowDimensions from \"../../libs/use-window-dimensions\";\n\nimport { DailyWasteContext } from \"../../../../contexts/daily-waste-context\";\n// import { HourlyWasteContext } from \"../../../../contexts/hourly-waste-context\";\n\nimport { WasteCapContext } from \"../../../../contexts/waste-cap-context\";\nimport { HourlyFoodWasteContext } from \"../../../../contexts/hourly-food-waste-context\";\n\nimport { AccordionHeading, AccordionBody } from \"../accordion\"\n\nimport { InputsContext } from \"../../../../contexts/inputs-context\";\n\nexport default function DailyWasteChart(props) {\n  Chart.defaults.global.defaultFontFamily = \"CooperHewitt-Book\";\n\n  const {\n    thisWeekCoverInputs,\n   } = useContext(InputsContext);\n\n  const {\n    dailyCoverWastes,\n    dailySpoliageWastes,\n    dailyPeparationWastes\n   } = useContext(WasteCapContext);\n\n  const targets = {\n    dailyCoverWastes,\n    dailySpoliageWastes,\n    dailyPeparationWastes\n  }\n\n  let chartReference = {};\n\n  const {\n    coverWaste,\n    prepWaste,\n    spoilageWaste,\n    getIndexesForBackgroundColours,\n    dailyWasteData,\n  } = useContext(DailyWasteContext);\n\n  const { allHourlyWasteData, handleHourlyWaste, index } = useContext(HourlyFoodWasteContext)\n\n  const [ coverWasteData, setCoverWaste] = useState([])\n  const [ prepWasteData, setPrepWaste ] = useState([])\n  const [ spoilageWasteData, setSpoilageWaste ] = useState([])\n  const [ totalWasteData, setDailyWasteData ] = useState([])\n\n  const [ totalCappingInPounds, setTotalCappingInPounds ] = useState([])\n\n  const [ dailyWasteCappingInPounds, setDailyWasteCappingInPounds ] = useState([])\n  const [ prepWasteCappingInPounds, setPrepWasteCappingInPounds ] = useState([])\n  const [ spoilageWasteCappingInPounds, setSpoilageWasteCappingInPounds ] = useState([])\n\n\n  let dailyCoverWastesCap = dailyCoverWastes ? dailyCoverWastes: 0\n  let dailySpoliageWastesCap = dailySpoliageWastes ? dailySpoliageWastes : 0\n  let dailyPeparationWastesCap = dailyPeparationWastes ? dailyPeparationWastes : 0\n\n  const formatedDate = JSON.parse(localStorage.getItem('formatedXaxis')) || []\n  const dailyChartXaxis = JSON.parse(localStorage.getItem('dailyChartXaxis')) || []\n\n  const [ checkBox, setCheckBox ] = useState([0, 0, 0, 0, 0, 0, 0])\n\n\n  // const initialStateForDailyChartXaxis = JSON.parse(localStorage.getItem('dailyChartXaxis')) || []\n  // const initialStateForFormatedDate = JSON.parse(localStorage.getItem('formatedXaxis')) || []\n\n  // const [dailyChartXaxis, setDateLabels] = useState(initialStateForDailyChartXaxis);\n  // const [formatedDate, setFormatedDate] = useState(initialStateForFormatedDate);\n\n  useEffect(() => {\n\n    // const formatedDate = JSON.parse(localStorage.getItem('formatedXaxis')) || []\n    // const dailyChartXaxis = JSON.parse(localStorage.getItem('dailyChartXaxis')) || []\n    // setDateLabels(props.weeklyDailyRange)\n    // setFormatedDate(props.weeklyDailyLabels)\n\n    console.log(\"thisWeekCoverInputs\",thisWeekCoverInputs);\n    console.log(\"thisWeekCoverInputs\",thisWeekCoverInputs.checkBox);\n\n    if (thisWeekCoverInputs.checkBox !== undefined) {\n      setCheckBox(thisWeekCoverInputs.checkBox)\n    }\n\n    setCoverWaste(coverWaste)\n    setPrepWaste(prepWaste)\n    setSpoilageWaste(spoilageWaste)\n    setDailyWasteData(dailyWasteData)\n\n    const totalCappings = dailyCoverWastesCap + dailyPeparationWastesCap + dailySpoliageWastesCap\n\n    const totalWarningInPounds = roundedUpNumberAndTurnBackToNumber(totalCappings * 2.775)\n    setTotalCappingInPounds(totalWarningInPounds)\n\n    const dailyWasteWarningInPounds = roundedUpNumberAndTurnBackToNumber(dailyCoverWastesCap * 2.775)\n    const prepWasteWarningInPounds = roundedUpNumberAndTurnBackToNumber(dailyPeparationWastesCap * 2.775)\n    const spoilageWasteWarningInPounds = roundedUpNumberAndTurnBackToNumber(dailySpoliageWastesCap * 2.775)\n\n    setDailyWasteCappingInPounds(dailyWasteWarningInPounds)\n    setPrepWasteCappingInPounds(prepWasteWarningInPounds)\n    setSpoilageWasteCappingInPounds(spoilageWasteWarningInPounds)\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [prepWaste, coverWaste, spoilageWaste, dailyWasteData, props])\n\n  // console.log(\"dailyCoverWastesCap\",dailyCoverWastesCap)\n  // console.log(\"dailySpoliageWastesCap\",dailySpoliageWastesCap)\n  // console.log(\"dailyPeparationWastesCap\",dailyPeparationWastesCap)\n\n  // console.log(\"dailyWasteWarningInPounds\",dailyWasteCappingInPounds)\n  // console.log(\"prepWasteWarningInPounds\",prepWasteCappingInPounds)\n  // console.log(\"spoilageWasteWarningInPounds\",spoilageWasteCappingInPounds)\n\n  // console.log(\"props.showPounds\", props.showPounds)\n\n  let background = [\n    \"rgba(255, 255, 255, 0.4)\",\n    \"rgba(255, 255, 255, 0.4)\",\n    \"rgba(255, 255, 255, 0.4)\",\n    \"rgba(255, 255, 255, 0.4)\",\n    \"rgba(255, 255, 255, 0.4)\",\n    \"rgba(255, 255, 255, 0.4)\",\n    \"rgba(255, 255, 255, 0.4)\",\n  ];\n\n  // if (thisWeekCoverInputs.checkBox !== undefined) {\n    console.log(\"checkbox\",checkBox)\n    checkBox.map((data, index) => {\n      if (data === 1) {\n        background[index] = \"rgba(242, 240, 196, 0.4)\"\n      }\n      return;\n    })\n  // }\n\n  if(index > 0) {\n    background[index] = \"rgba(106, 217, 123, 0.2)\";\n  } else if (index === 0) {\n    background[index] = \"rgba(106, 217, 123, 0.2)\";\n  }\n\n  let coverWasteBackgroundColours = [\n    \"rgb(140, 112, 140)\",\n    \"rgb(140, 112, 140)\",\n    \"rgb(140, 112, 140)\",\n    \"rgb(140, 112, 140)\",\n    \"rgb(140, 112, 140)\",\n    \"rgb(140, 112, 140)\",\n    \"rgb(140, 112, 140)\",\n  ];\n\n  let spoilageWasteBackgroundColours = [\n    \"#ff8c00\",\n    \"#ff8c00\",\n    \"#ff8c00\",\n    \"#ff8c00\",\n    \"#ff8c00\",\n    \"#ff8c00\",\n    \"#ff8c00\",\n  ];\n\n  let prepWasteBackgroundColours = [\n    \"rgb(133, 165, 101)\",\n    \"rgb(133, 165, 101)\",\n    \"rgb(133, 165, 101)\",\n    \"rgb(133, 165, 101)\",\n    \"rgb(133, 165, 101)\",\n    \"rgb(133, 165, 101)\",\n    \"rgb(133, 165, 101)\"\n  ];\n\n  let indexes;\n\n  if (targets) {\n    indexes = getIndexesForBackgroundColours(targets)\n  }\n\n  if (indexes) {\n    indexes.coverWasteOverTargetIndexArray.map((data) => {\n      coverWasteBackgroundColours[data] = \"rgba(255, 0, 0, 0.9)\";\n      return \"\"\n    })\n\n    indexes.spoilageWasteOverTargetIndexArray.map((data) => {\n      spoilageWasteBackgroundColours[data] = \"rgba(255, 0, 0, 0.9)\";\n      return \"\"\n    })\n\n    indexes.prepWasteOverTargetIndexArray.map((data) => {\n      prepWasteBackgroundColours[data] = \"rgba(255, 0, 0, 0.9)\";\n      return \"\"\n    })\n  }\n\n  // console.log(\"dailyChartXaxis\",dailyChartXaxis)\n  let dateRangeLable = wasteDailyDateRange(dailyChartXaxis);\n  // console.log(\"dateRangeLable\",dateRangeLable)\n\n  const { width } = useWindowDimensions();\n\n  let dailyWasteHeight = 120;\n  let dailyWasteWidth = 400;\n\n  let CSPlabelFont = 10;\n  let totalLabelFont = 12\n\n  if (width <= 700) {\n    dailyWasteWidth = 260;\n    dailyWasteHeight = 179;\n    totalLabelFont = 8\n    CSPlabelFont = 8 * 0.6;\n  }\n\n  return (\n    <div className={props.hideReport ? \"dailyWasteChart displayNone\":\"dailyWasteChart\"}>\n\n      <AccordionHeading>\n        <div className=\"section-title\">DAILY WASTE</div>\n        <div className=\"container\">\n            <span onClick={() => props.handleChangeForCheckedAndAccordion(!props.showDailyChart, \"dailyChartSwitch\")}>\n              {props.showDailyChart ? (\"X\"):\"| | | \"}\n            </span>\n        </div>\n      </AccordionHeading>\n\n      <AccordionBody open={props.showDailyChart}>\n        <div className= { props.showDarkTheme ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem addHeightOfFithyVh\": \"originalTheme__reportBackgroundColor addPaddingOfHalveRem dailyWasteChart__height\"}>\n\n          <div className=\"report-subtitle\">{props.siteName}</div>\n          <div className=\"dailyWasteChart__title--style\">\n          <div className=\"dailyWasteChart--dateStyling\">{dateRangeLable}</div>\n            <div className=\"dailyWasteChart--titleWrapper\">\n              <div>\n                <div className=\"section-title\">\n                  DAILY WASTE\n                  <div className=\"applyMarginRightAndLeft\">{props.showPounds? \"(£)\" : \"(Kg)\" }</div>\n                </div>\n\n                <div className=\"dailyWasteChart__instructions\">\n                  Click on the bars for waste in 24hrs\n                </div>\n\n              </div>\n            </div>\n\n              <div className=\"dailyWasteChart__cappingWrapper\">\n                <div className=\"capping__text applyPurpleColor cooperHewittBold capping__flex\">\n                  Total\n                  <div className=\"applyMarginRightAndLeft\">\n                    {props.showPounds ?\n                      roundedUpNumberAndTurnBackToNumber(dailyWasteCappingInPounds + spoilageWasteCappingInPounds + prepWasteCappingInPounds)\n                     : roundedUpNumberAndTurnBackToNumber(dailyCoverWastesCap + dailySpoliageWastesCap + dailyPeparationWastesCap)}\n                    <div className=\"cooperHewittBold capping__headingCappingStyling\">\n                      Capping =\n                    </div>\n                  </div>\n                </div>\n                <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\">\n                    C\n                </div>\n                <div\n                  id={1}\n                  key={0}\n                >\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                    {props.showPounds ? roundedUpNumberAndTurnBackToNumber(dailyWasteCappingInPounds) : roundedUpNumberAndTurnBackToNumber(dailyCoverWastesCap)}\n                  </div>\n                </div>\n                <div>+</div>\n                <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\">\n                    S\n                 </div>\n                <div\n                  id={2}\n                  key={1}\n                >\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                    {props.showPounds ? roundedUpNumberAndTurnBackToNumber(spoilageWasteCappingInPounds) : roundedUpNumberAndTurnBackToNumber(dailySpoliageWastesCap)}\n                  </div>\n                </div>\n                <div>+</div>\n                <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\">\n                  P\n                </div>\n                <div\n                  id={3}\n                  key={2}\n                >\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                    {props.showPounds ? roundedUpNumberAndTurnBackToNumber(prepWasteCappingInPounds) : roundedUpNumberAndTurnBackToNumber(dailyPeparationWastesCap)}\n                  </div>\n                </div>\n              </div>\n\n          </div>\n\n          <div className=\"dailyWasteChart__wrapperPosition\">\n          <div className=\"dailyWasteChart__chartPosition1\">\n              <Bar\n                data={{\n                  labels: [\n                    \"C  S  P\",\n                    \"C  S  P\",\n                    \"C  S  P\",\n                    \"C  S  P\",\n                    \"C  S  P\",\n                    \"C  S  P\",\n                    \"C  S  P\",\n                  ],\n                  datasets: [\n                    {\n                      label: \"cover waste\",\n                      data: props.showPounds\n                        ? coverWasteData.map((item) => {\n                            return (item * 2.775).toFixed(0);\n                          }) :\n                          coverWasteData,\n                      fill: false,\n                      backgroundColor: coverWasteBackgroundColours.slice(),\n                      minBarLength: 0.3,\n                      barPercentage: 0.3,\n                      categoryPercentage: 0.7,\n                    },\n                    {\n                      label: \"spoliage waste\",\n                      data: props.showPounds\n                        ? spoilageWasteData.map((item) => {\n                            return (item * 2.775).toFixed(0);\n                          }) :\n                          spoilageWasteData,\n                      fill: false,\n                      backgroundColor: spoilageWasteBackgroundColours.slice(),\n                      minBarLength: 0.3,\n                      barPercentage: 0.3,\n                      categoryPercentage: 0.7,\n                    },\n                    {\n                      label: \"preparation waste\",\n                      data: props.showPounds\n                        ?  prepWasteData.map((item) => {\n                            return (item * 2.775).toFixed(0);\n                          }) :\n                          prepWasteData,\n                      fill: false,\n                      backgroundColor: prepWasteBackgroundColours,\n                      minBarLength: 0.3,\n                      barPercentage: 0.3,\n                      categoryPercentage: 0.7,\n                    },\n                  ],\n                }}\n                width={dailyWasteWidth}\n                height={dailyWasteHeight}\n                options={{\n                  responsive: true,\n                  maintainAspectRatio: true,\n                  legend: {\n                    display: false,\n                  },\n                  scales: {\n                    xAxes: [\n                      {\n                        gridLines: {\n                          display: false,\n                        },\n                        ticks: {\n                          fontColor: \"rgb(133, 165, 101, 0)\",\n                        },\n                      },\n                    ],\n                    yAxes: [\n                      {\n                        gridLines: {\n                          display: false,\n                        },\n                        display: false,\n                        ticks: {\n                          beginAtZero: true,\n                        },\n                      },\n                    ],\n                  },\n\n                  plugins: {\n                    datalabels: {\n                      anchor: \"start\",\n                      align: \"bottom\",\n                      display: true,\n                      backgroundColor: null,\n                      borderColor: null,\n                      borderRadius: 4,\n                      borderWidth: 1,\n                      font: {\n                        size: CSPlabelFont,\n                        weight: 600,\n                      },\n                      offset: 4,\n                      padding: 0,\n                      color: function (context) {\n                        var index = context.dataIndex;\n                        var value = parseInt(context.dataset.data[index]);\n\n                        let warningNum;\n\n                        if (context.dataset.label === \"cover waste\") {\n\n                          let warningForCoverWasteCap = dailyCoverWastesCap;\n\n                          if (props.showPounds) {\n                            // warningNum = Math.round(warningForCoverWasteCap * 2.775);\n                            warningNum = dailyWasteCappingInPounds;\n                          } else {\n                            warningNum = warningForCoverWasteCap;\n                          }\n\n                          if (value >= warningNum) {\n                            return \"rgba(255, 0, 0, 0.9)\";\n                          } else if (value === 0) {\n                            return \"rgba(255, 255, 255, 0)\";\n                          } else {\n                            // return \"rgba(133, 165, 101, 1)\";\n\n                            if (props.showDarkTheme) {\n                            return \"rgb(255, 231, 227)\";\n                            } else {\n                              return \"rgba(133, 165, 101, 1)\";\n                            }\n\n                          }\n\n                        }\n\n                        if (context.dataset.label === \"preparation waste\") {\n\n                          let warningForPreparationWasteCap = dailyPeparationWastesCap;\n\n                          if (props.showPounds) {\n                            // warningNum = Math.round(warningForPreparationWasteCap * 2.775);\n                            warningNum = prepWasteCappingInPounds\n                          } else {\n                            warningNum = warningForPreparationWasteCap;\n                          }\n\n\n                          if (value >= warningNum) {\n                            return \"rgba(255, 0, 0, 0.9)\";\n                          } else if (value === 0) {\n                            return \"rgba(255, 255, 255, 0)\";\n                          } else {\n\n                            // return \"rgba(133, 165, 101, 1)\";\n\n                            if (props.showDarkTheme) {\n                            return \"rgb(255, 231, 227)\";\n                            } else {\n                              return \"rgba(133, 165, 101, 1)\";\n                            }\n\n                          }\n\n\n                        }\n\n                        if (context.dataset.label === \"spoliage waste\") {\n\n                          let warningForSpoilageWasteCap = dailySpoliageWastesCap;\n\n\n                          if (props.showPounds) {\n                            // warningNum = Math.round(warningForSpoilageWasteCap * 2.775);\n                            warningNum = spoilageWasteCappingInPounds\n                          } else {\n                            warningNum = warningForSpoilageWasteCap;\n                          }\n\n                          if (value >= warningNum) {\n                            return \"rgba(255, 0, 0, 0.9)\";\n                          } else if (value === 0) {\n                            return \"rgba(255, 255, 255, 0)\";\n                          } else {\n                            // return \"rgba(133, 165, 101, 1)\";\n\n                            if (props.showDarkTheme) {\n                            return \"rgb(255, 231, 227)\";\n                            } else {\n                              return \"rgba(133, 165, 101, 1)\";\n                            }\n\n                          }\n\n\n                        }\n\n                      },\n                      formatter: function (value, context) {\n                        // var index = context.dataIndex;\n                        // var value = parseInt(context.dataset.data[index]);\n\n                        let warningNum;\n\n                        if (context.dataset.label === \"cover waste\") {\n\n                          let warningForCoverWasteCap = dailyCoverWastesCap;\n\n                          if (props.showPounds) {\n                            // warningNum = Math.round(warningForCoverWasteCap * 2.775);\n                            warningNum = dailyWasteCappingInPounds;\n                          } else {\n                            warningNum = warningForCoverWasteCap;\n                          }\n\n                        if (value >= warningNum) {\n                            return `${value}`;\n\n                          }\n\n                        } else if (context.dataset.label === \"preparation waste\") {\n\n                          let warningForPreparationWasteCap = dailyPeparationWastesCap;\n\n\n                          if (props.showPounds) {\n                            // warningNum = Math.round(warningForPreparationWasteCap * 2.775);\n                            warningNum = prepWasteCappingInPounds\n                          } else {\n                            warningNum = warningForPreparationWasteCap;\n                          }\n\n                          if (value >= warningNum) {\n                            return `${value}`;\n\n                          }\n\n                        } else if (context.dataset.label === \"spoliage waste\") {\n\n                          let warningForSpoilageWasteCap = dailySpoliageWastesCap;\n\n                          if (props.showPounds) {\n                            // warningNum = Math.round(warningForSpoilageWasteCap * 2.775);\n                            warningNum = spoilageWasteCappingInPounds\n                          } else {\n                            warningNum = warningForSpoilageWasteCap;\n                          }\n\n                          if (value >= warningNum) {\n                            return `${value}`;\n\n                          }\n\n                        }\n\n                      },\n                    },\n                  },\n                }}\n              />\n\n          </div>\n\n          <div className=\"dailyWasteChart__chartPosition\">\n              <Bar\n                ref={(reference) => (chartReference = reference)}\n                data={{\n                  labels: [\"mon\",\"tues\",\"wed\",\"thurs\",\"fri\",\"sat\",\"sun\"],\n                  datasets: [\n                    {\n                      label: \"Total wastes\",\n                      siteName: props.siteName,\n                      dates: dailyChartXaxis,\n                    data: props.showPounds\n                      ? totalWasteData.map((waste) => {\n                        return (waste * 2.775).toFixed(0);\n                      }) : totalWasteData,\n                      fill: true,\n                      backgroundColor: background.slice(),\n                      barPercentage: 0.9,\n                      categoryPercentage: 1,\n                      ticks: {\n                        fontColor: \"rgba(255,255,255, 0.1)\",\n                      },\n                      hoverBackgroundColor: [\n                        'rgba(56, 166, 126, 0.5)',\n                        'rgba(56, 166, 126, 0.5)',\n                        'rgba(56, 166, 126, 0.5)',\n                        'rgba(56, 166, 126, 0.5)',\n                        'rgba(56, 166, 126, 0.5)',\n                        'rgba(56, 166, 126, 0.5)',\n                        'rgba(56, 166, 126, 0.5)',\n                      ]\n                    },\n                  ],\n                }}\n                width={dailyWasteWidth}\n                height={dailyWasteHeight}\n                options={{\n                  responsive: true,\n                  maintainAspectRatio: true,\n                  tooltips: {\n                    enabled: false,\n                  },\n                  legend: {\n                    display: false,\n                  },\n\n                  onClick: (event, array) => {\n                    let index;\n\n                    if (array.length) {\n                      array[0]._chart.config.data.datasets[0].data.forEach(\n                        (value, i) => {\n                          if (i === array[0]._index) {\n                            index = i\n                          }\n                        }\n                      );\n                    }\n\n                    let barChart = chartReference.chartInstance;\n                    barChart.update()\n\n                      // let item = {\n                      //   siteName: array[0]._chart.config.data.datasets[0].siteName,\n                      //   index,\n                      //   date:\n                      //     array[0]._chart.config.data.datasets[0].dates[\n                      //       array[0]._index\n                      //     ],\n                      // };\n\n                      // handleChangeHourlyWaste(item);\n\n                      let item = {\n                        hourlyWaste: allHourlyWasteData.hourlyWaste,\n                        index: index,\n                        date:\n                        array[0]._chart.config.data.datasets[0].dates[\n                          array[0]._index\n                        ],\n                      }\n\n                      // console.log(\"item\",item)\n                      // console.log(\"allHourlyWasteData\",allHourlyWasteData)\n\n                      handleHourlyWaste(item)\n\n                  },\n                  scales: {\n                    xAxes: [\n                      {\n                        gridLines: {\n                          display: false,\n                        },\n                        display: false,\n                        ticks: {\n                          fontColor: \"rgba(255,255,255, 0.1)\",\n                        },\n                      },\n                    ],\n                    yAxes: [\n                      {\n                        display: false,\n                        gridLines: {\n                          display: false,\n                        },\n                        ticks: {\n                          maxTicksLimit: 1,\n                          max: 1\n                        },\n                      },\n                    ],\n                  },\n\n                  plugins: {\n                    datalabels: {\n                      color: function (context) {\n                        var index = context.dataIndex;\n                        var value = context.dataset.data[index];\n\n                        let warning = dailyCoverWastesCap + dailyPeparationWastesCap + dailySpoliageWastesCap\n\n                        let warningNum;\n                        if (props.showPounds) {\n                          warningNum = totalCappingInPounds;\n                        } else {\n                          warningNum = warning;\n                        }\n\n                        if (value >= warningNum) {\n                          return \"rgba(255, 0, 0, 0.9)\";\n                        } else {\n                          // return \"rgba(133, 165, 101, 1)\";\n\n                          if (props.showDarkTheme) {\n                            return \"rgb(255, 231, 227)\";\n                          } else {\n                            return \"rgba(133, 165, 101, 1)\";\n                          }\n\n                        }\n                      },\n                      anchor: \"end\",\n                      align: \"start\",\n                      clamp: true,\n                      display: true,\n                      borderColor: null,\n                      borderRadius: 4,\n                      borderWidth: 1,\n                      font: {\n                        size: totalLabelFont,\n                        weight: 600,\n                      },\n                      offset: 4,\n                      padding: 0,\n                      formatter: function (value, context) {\n\n                        let warning = dailyCoverWastesCap + dailyPeparationWastesCap + dailySpoliageWastesCap\n\n                        let warningNum;\n                        if (props.showPounds) {\n                          warningNum = totalCappingInPounds;\n                        } else {\n                          warningNum = warning;\n                        }\n\n                        if (value >= warningNum) {\n\n                          let formatedData = roundedUpNumberAndTurnBackToNumber(value)\n\n                          var text = \"WARNING\";\n                          return `${text} \\n      ${formatedData} `;\n                        } else {\n                          return value;\n                        }\n                      },\n                    },\n                  },\n                }}\n              />\n\n            <div className=\"dailyWasteChart__dateLabel\">\n              {formatedDate.map((data, i) => (\n                <div className={i === index ? \"applyCooperHewittBold applyGoldColor\" : \"\"} key={i}>{data}</div>\n              ))}\n            </div>\n\n              <div>\n                <div className=\"dailyWasteChart__dateLabel__CSP\">\n                  <div className=\"dailyWasteChart__dateLabel__CSP__coverwastesSquare\"></div>\n                  COVER\n                  <div className=\"dailyWasteChart__dateLabel__CSP__spoliageSquare\"></div>\n                  SPOILAGE\n                  <div className=\"dailyWasteChart__dateLabel__CSP__preparationSquare\"></div>\n                  PREPARATION\n                </div>\n              </div>\n\n              <div className=\"applyGoldColor\" style={{\n                    display: \"flex\",\n                    justifyContent: \"center\"\n              }}>\n                The yellow bar represents a special event on the day\n              </div>\n\n          </div>\n        </div>\n\n        </div>\n      </AccordionBody>\n\n    </div>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Chart from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"chartjs-plugin-annotation\";\nimport useWindowDimensions from \"../../libs/use-window-dimensions\";\n\nimport { WasteCapContext } from \"../../../../contexts/waste-cap-context\";\nimport { HourlyFoodWasteContext } from \"../../../../contexts/hourly-food-waste-context\";\n\nimport { AccordionHeading, AccordionBody } from \"../accordion\"\n\nimport { hourlyWasteDateConverter, maxNumForHourlyChartFunction, roundedUpNumberAndTurnBackToNumber } from \"../../../../utilities\";\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nChart.defaults.global.defaultFontFamily = \"CooperHewitt-Book\";\nChart.defaults.global.legend.display = false;\nChart.defaults.global.hover.intersect = false;\nChart.defaults.global.tooltips.enabled = false;\n\nexport default function HourlyWasteChart(props) {\n\n  const [tooltipIsOpen, setTooltipIsOpen] = React.useState(true);\n\n  const {\n    hourlyWasteValues,\n    hourlyWasteSelector,\n\n    hourlyCoverWasteData,\n    hourlyPreparationWasteData,\n    hourlySpoilageWasteData,\n\n    showCoverWasteLabelRed,\n    handleHourlyWasteCategory,\n\n    hourlyWasteDate,\n    clickOnHourlyBarChart,\n\n    getIndexesForBackgroundColours,\n\n    showTooltip\n   } = useContext(HourlyFoodWasteContext);\n\n\n  const {\n    hourlyCoverWastes,\n    hourlySpoliageWastes,\n    hourlyPeparationWastes\n   } = useContext(WasteCapContext);\n\n  //  console.log(\"hourlyCoverWaste\",hourlyCoverWaste)\n  //  console.log(\"hourlyPreparationWaste\",hourlyPreparationWaste)\n  //  console.log(\"hourlySpoilageWaste\",hourlySpoilageWaste)\n\n  //  console.log(\"hourlyCoverWasteData\",hourlyCoverWasteData)\n  //  console.log(\"hourlyPreparationWasteData\",hourlyPreparationWasteData)\n  //  console.log(\"hourlySpoilageWasteData\",hourlySpoilageWasteData)\n\n  const { width } = useWindowDimensions();\n  let hourlyWasteHeight = 129;\n  let hourlyWasteWidth = 400;\n  let fontSize = 12\n\n  const [activeState, changeActiveState] = useState({\n    coverWaste: false,\n    spoliageWaste: false,\n    productionWaste: true,\n  });\n\n\n  const [ dailyWasteCappingInPounds, setDailyWasteCappingInPounds ] = useState([])\n  const [ prepWasteCappingInPounds, setPrepWasteCappingInPounds ] = useState([])\n  const [ spoilageWasteCappingInPounds, setSpoilageWasteCappingInPounds ] = useState([])\n\n  // let hourlyWasteDataFormated = hourlyWasteValues ? hourlyWasteValues : []\n\n  let hourlyCoverWastesCap = hourlyCoverWastes ? hourlyCoverWastes : 0\n  let hourlySpoliageWastesCap = hourlySpoliageWastes ? hourlySpoliageWastes : 0\n  let hourlyPeparationWastesCap = hourlyPeparationWastes ? hourlyPeparationWastes : 0\n\n  const [warning, setWarning] = useState(hourlyPeparationWastesCap);\n\n  const [ displayValues, setDisplayValues ] = useState([])\n\n  // let barColors = \"rgb(178, 191, 80)\";\n\n  const [appState, changeState] = useState({\n    activeObject: {\n      id: 2,\n      val: hourlyWasteSelector,\n      name: \"PREPARATION WASTE\",\n    },\n    objects: [\n      { id: 0, val: \"C\", name: \"COVER WASTE\" },\n      { id: 1, val: \"S\", name: \"SPOILAGE WASTE\" },\n      { id: 2, val: \"P\", name: \"PREPARATION WASTE\" },\n    ],\n  });\n\n  let barColors = [\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n  ];\n\n\n  let indexes;\n\n  const targetsInPounds = {\n    dailyWasteCappingInPounds,\n    prepWasteCappingInPounds,\n    spoilageWasteCappingInPounds\n  }\n\n  const allCappings = {\n    hourlyCoverWastesCap,\n    hourlySpoliageWastesCap,\n    hourlyPeparationWastesCap\n  }\n\n  // if (targets) {\n  //   indexes = getIndexesForBackgroundColours(props.showPounds, targetsInPounds, allCappings)\n  // }\n  indexes = getIndexesForBackgroundColours(props.showPounds, targetsInPounds, allCappings)\n\n\n  if (indexes) {\n    if (appState.activeObject.name === \"PREPARATION WASTE\") {\n      indexes.prepWasteOverTargetIndexArray.map((data) => {\n        barColors[data] = \"rgba(255, 0, 0, 0.9)\";\n        return \"\"\n      })\n    } else if (appState.activeObject.name === \"COVER WASTE\") {\n      indexes.coverWasteOverTargetIndexArray.map((data) => {\n        barColors[data] = \"rgba(255, 0, 0, 0.9)\";\n        return \"\"\n      })\n    } else if (appState.activeObject.name === \"SPOILAGE WASTE\") {\n      indexes.spoilageWasteOverTargetIndexArray.map((data) => {\n        barColors[data] = \"rgba(255, 0, 0, 0.9)\";\n        return \"\"\n      })\n    }\n  }\n\n\n\n\n  useEffect(() => {\n\n    const dailyWasteWarningInPounds = roundedUpNumberAndTurnBackToNumber(hourlyCoverWastes * 2.775)\n    const prepWasteWarningInPounds = roundedUpNumberAndTurnBackToNumber(hourlyPeparationWastes * 2.775)\n    const spoilageWasteWarningInPounds = roundedUpNumberAndTurnBackToNumber(hourlySpoliageWastes * 2.775)\n\n    setDailyWasteCappingInPounds(dailyWasteWarningInPounds)\n    setPrepWasteCappingInPounds(prepWasteWarningInPounds)\n    setSpoilageWasteCappingInPounds(spoilageWasteWarningInPounds)\n\n\n    toggleActive(hourlyWasteSelector)\n\n    setDisplayValues(hourlyWasteValues)\n\n    if (props.showHourlyChart && showTooltip){\n      setTooltipIsOpen(true)\n    } else {\n      setTooltipIsOpen(false)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n}, [ hourlyPeparationWastesCap, hourlyCoverWastesCap, hourlySpoliageWastesCap, hourlyWasteSelector, hourlyWasteValues, props]);\n\n\n  if (width <= 700) {\n    hourlyWasteWidth = 400;\n    hourlyWasteHeight = 200;\n    fontSize = 12 * 0.60\n  }\n\n  let maxNumForHourlyChart = maxNumForHourlyChartFunction(\n    displayValues\n  );\n\n  let maxNumForHourlyChartInPounds = maxNumForHourlyChart * 2.775;\n\n  function toggleActive(type) {\n    switch (type) {\n      case \"cover\":\n        changeActiveState({\n          coverWaste: true,\n          spoliageWaste: false,\n          productionWaste: false,\n        });\n        changeState({ ...appState, activeObject: appState.objects[0] });\n          setWarning(hourlyCoverWastesCap)\n\n        break;\n      case \"production\":\n        changeActiveState({\n          coverWaste: false,\n          spoliageWaste: false,\n          productionWaste: true,\n        });\n        changeState({ ...appState, activeObject: appState.objects[2] });\n\n          setWarning(hourlyPeparationWastesCap)\n\n        break;\n      case \"spoliage\":\n        changeActiveState({\n          coverWaste: false,\n          spoliageWaste: true,\n          productionWaste: false,\n        });\n        changeState({ ...appState, activeObject: appState.objects[1] });\n\n        setWarning(hourlySpoliageWastesCap)\n\n        break;\n      default:\n    }\n  }\n\n  // const coverWasteLableRed = showCoverWasteLabelRed(hourlyCoverWastesCap,hourlyCoverWaste, props.showPounds, converterValue, dailyWasteCappingInPounds)\n  // const prepWasteLableRed = showCoverWasteLabelRed(hourlyPeparationWastesCap,hourlyPreparationWaste, props.showPounds, converterValue, prepWasteCappingInPounds)\n  // const spoilageWasteLableRed = showCoverWasteLabelRed(hourlySpoliageWastesCap,hourlySpoilageWaste, props.showPounds, converterValue, spoilageWasteCappingInPounds)\n\n\n  const coverWasteLableRed = showCoverWasteLabelRed(hourlyCoverWastesCap,hourlyCoverWasteData, props.showPounds, dailyWasteCappingInPounds)\n  const prepWasteLableRed = showCoverWasteLabelRed(hourlyPeparationWastesCap,hourlyPreparationWasteData, props.showPounds, prepWasteCappingInPounds)\n  const spoilageWasteLableRed = showCoverWasteLabelRed(hourlySpoliageWastesCap,hourlySpoilageWasteData, props.showPounds, spoilageWasteCappingInPounds)\n\n\n  let hourlyWasteXaxisColors;\n\n  if (props.showDarkTheme) {\n    hourlyWasteXaxisColors =   \"rgb(255, 231, 227)\";\n  } else {\n    hourlyWasteXaxisColors =   \"rgb(133, 165, 101)\";\n  }\n\n  return (\n    <div className={props.hideReport ? \"HourWasteChart displayNone\":\"HourWasteChart\"}>\n\n      <AccordionHeading>\n\n        <div className=\"section-title\">HOURLY WASTE</div>\n        <div className=\"container\">\n            <span onClick={() => props.handleChangeForCheckedAndAccordion(!props.showHourlyChart, \"hourlyChartSwitch\")}>\n              {props.showHourlyChart ? (\"X\"):\"| | | \"}\n            </span>\n        </div>\n\n      </AccordionHeading>\n\n      <AccordionBody open={props.showHourlyChart}>\n\n        <div className= { props.showDarkTheme ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem\": \"originalTheme__reportBackgroundColor addPaddingOfHalveRem\"}>\n\n          <div className=\"HourWasteChart--spacing\">\n            <div className=\"report-subtitle\">{props.siteName}</div>\n            <p>\n                {\" \"}\n                <b className=\"HourWasteChart--dateStyling\"> {hourlyWasteDateConverter(hourlyWasteDate)} </b>\n              </p>\n          </div>\n\n          <div className=\"HourWasteChart__headingWrapper\">\n            <div className=\"section-title center\">WASTE BY TIME OF DAY<div className=\"applyMarginRightAndLeft\">{props.showPounds? \"(£)\" : \"(Kg)\" }</div></div>\n          </div>\n\n          <div className=\"HourWasteChart--spacing--secondRow\">\n            <div className=\"HourWasteChart--spacing--secondRow--csp\">\n              {clickOnHourlyBarChart && (\n                <>\n                  <div\n                    className={activeState.coverWaste ? \"active\" : \"inactive\"}\n                    id={0}\n                    onClick={() => {\n                      toggleActive(\"cover\");\n                    }}\n                  >\n\n                  <Tooltip\n                    open={tooltipIsOpen}\n                    onClose={() => setTooltipIsOpen(false)}\n                    title=\"click on C, S or P waste stream\"\n                    arrow\n                  >\n\n                    <h2\n                      id={\"C\"}\n                      onClick={handleHourlyWasteCategory}\n                      className=\"HourWasteChart--CSPlabel\"\n                      className={activeState.coverWaste ? \"reduceOpacity\" : \"\"}\n                      className={coverWasteLableRed? \"showRedColor\": \"\"}\n                    >\n                      C\n                    </h2>\n\n                    </Tooltip>\n\n                  </div>\n                  <div\n                    className={activeState.spoliageWaste ? \"active\" : \"inactive\"}\n                    id={1}\n                    onClick={() => {\n                      toggleActive(\"spoliage\");\n                    }}\n                  >\n\n                    <Tooltip\n                    open={tooltipIsOpen}\n                    onClose={() => setTooltipIsOpen(false)}\n                    // title=\"click on C, S or P waste stream\"\n                    arrow\n                  >\n\n                    <h2\n                      id={\"S\"}\n                      onClick={handleHourlyWasteCategory}\n                      className=\"HourWasteChart--CSPlabel\"\n                      className={activeState.spoliageWaste ? \"reduceOpacity\" : \"\"}\n                      className={spoilageWasteLableRed ? \"showRedColor\": \"\"}\n                    >\n                      S\n                    </h2>\n\n                    </Tooltip>\n\n\n                  </div>\n                  <div\n                    className={activeState.productionWaste ? \"active\" : \"inactive\"}\n                    id={2}\n                    onClick={() => {\n                      toggleActive(\"production\");\n                    }}\n                  >\n\n                    <Tooltip\n                    open={tooltipIsOpen}\n                    onClose={() => setTooltipIsOpen(false)}\n                    // title=\"click on C, S or P waste stream\"\n                    arrow\n                  >\n\n<h2\n                      id={\"P\"}\n                      onClick={handleHourlyWasteCategory}\n                      className=\"HourWasteChart--CSPlabel\"\n                      className={activeState.productionWaste ? \"reduceOpacity\" : \"\"}\n                      className={prepWasteLableRed ? \"showRedColor\": \"\"}\n                    >\n                      P\n                    </h2>\n\n\n                    </Tooltip>\n\n\n                  </div>\n                </>\n              )}\n            </div>\n            <p className=\"HourWasteChart--CSPheadingSize\">{appState.activeObject.name}</p>\n\n            <div className=\"capping__hourWasteChartWrapper\">\n              <b className=\"capping\">\n                <div className=\"applyPurpleColor cooperHewittBold\">Cap</div>\n                <div className=\"capping__text applyMarginRightAndLeft\">\n                  <div className={props.showDarkTheme? \"darkTheme__selectedLabelColor cooperHewittBold\" : \"applyPurpleColor cooperHewittBold\"}> C</div>\n                </div>\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                    {props.showPounds ? dailyWasteCappingInPounds : roundedUpNumberAndTurnBackToNumber(hourlyCoverWastesCap)}\n                  </div>\n                <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor\">\n                  <div className={props.showDarkTheme? \"darkTheme__selectedLabelColor cooperHewittBold\" : \"applyPurpleColor cooperHewittBold\"}> S</div>\n                </div>\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                    {props.showPounds ? spoilageWasteCappingInPounds : roundedUpNumberAndTurnBackToNumber(hourlySpoliageWastesCap)}\n                  </div>\n                <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\">\n                  <div className={props.showDarkTheme? \"darkTheme__selectedLabelColor cooperHewittBold\" : \"applyPurpleColor cooperHewittBold\"}> P</div>\n                </div>\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                    {props.showPounds ? prepWasteCappingInPounds : roundedUpNumberAndTurnBackToNumber(hourlyPeparationWastesCap)}\n                  </div>\n                </b>\n              </div>\n\n          </div>\n\n          <div>\n            <div>\n              <Bar\n                data={{\n                  labels: [\n                    0,\n                    1,\n                    2,\n                    3,\n                    4,\n                    5,\n                    6,\n                    7,\n                    8,\n                    9,\n                    10,\n                    11,\n                    12,\n                    13,\n                    14,\n                    15,\n                    16,\n                    17,\n                    18,\n                    19,\n                    20,\n                    21,\n                    22,\n                    23,\n                  ],\n                  datasets: [\n                    {\n                      data: props.showPounds\n                        ? displayValues.map((data) => {\n                            return roundedUpNumberAndTurnBackToNumber(data * 2.775);\n                        }) : displayValues,\n                      fill: false,\n                      backgroundColor: barColors,\n                      minBarLength: 0.3,\n                      barPercentage: 0.3,\n                      categoryPercentage: 0.7,\n                    },\n                  ],\n                }}\n                width={hourlyWasteWidth}\n                height={hourlyWasteHeight}\n                options={{\n                  responsive: true,\n                  maintainAspectRatio: true,\n                  scales: {\n                    xAxes: [\n                      {\n                        gridLines: {\n                          display: false,\n                        },\n                        ticks: {\n                          fontColor: hourlyWasteXaxisColors,\n                          fontSize\n                        },\n                      },\n                    ],\n                    yAxes: [\n                      {\n                        gridLines: {\n                          display: false,\n                        },\n                        ticks: {\n                          maxTicksLimit: 4,\n                          display: false,\n                          beginAtZero: true,\n                          max: props.showPounds\n                          ? maxNumForHourlyChartInPounds: Math.round(maxNumForHourlyChart)\n                        },\n                      },\n                    ],\n                  },\n\n                  plugins: {\n                    datalabels: {\n                      display: true,\n                      // color: \"rgb(47, 64, 30)\",\n                      anchor: \"end\",\n                      align: \"end\",\n                      clamp: true,\n                      backgroundColor: null,\n                      borderColor: null,\n                      borderRadius: 4,\n                      borderWidth: 1,\n                      font: {\n                        size: fontSize,\n                        weight: 900,\n                      },\n                      offset: 4,\n                      padding: 0,\n                      color: function (context) {\n                          var index = context.dataIndex;\n                          var value = context.dataset.data[index];\n                          let warningKGConverted;\n\n                            if (props.showPounds) {\n\n                              warningKGConverted = parseInt(warning * 2.775);\n\n                              let numberValue = parseInt(value)\n\n                              if (numberValue >= warningKGConverted) {\n                                return \"rgba(255, 0, 0, 0.9)\";\n                              } else {\n                                return \"rgba(133, 165, 101, 1)\";\n                              }\n\n                            } else {\n\n                              let numberValue = parseInt(value)\n\n                              if (numberValue >= parseInt(warning)) {\n                                return \"rgba(255, 0, 0, 0.9)\";\n                              } else {\n\n                                  if (props.showDarkTheme) {\n                                    return \"rgb(255, 231, 227)\";\n                                  } else {\n                                    return \"rgba(133, 165, 101, 1)\";\n                                  }\n\n                              }\n\n                            }\n                        },\n                    },\n                  },\n                }}\n              />\n            </div>\n          </div>\n\n          <div className=\"weeklyWaste__message\">\n              (summer and winter time are not change on the day but on the month)\n          </div>\n\n        </div>\n\n      </AccordionBody>\n\n\n    </div>\n  );\n}\n","import React, { createContext, useEffect, useState } from 'react'\n\nexport const WeeklyWasteContext = createContext()\n\nconst WeeklyWasteContextProvider = props => {\n\n  const [coverWaste, setCoverWaste] = useState(0)\n  const [productionWaste, setPreparationWaste] = useState(0)\n  const [spoliageWaste, setSpoilageWaste] = useState(0)\n  const [siteName, setSiteName] = useState(\"\")\n\n\n  useEffect(() => {\n\n    if (props.siteName) {\n      setSiteName(props.siteName)\n    }\n\n    if (props.weeklyWaste) {\n\n      setCoverWaste(props.weeklyWaste[0][0].coverWaste[0])\n      setPreparationWaste(props.weeklyWaste[0][0].preparationWaste[0])\n      setSpoilageWaste(props.weeklyWaste[0][0].spoilageWaste[0])\n    }\n\n  },[props.weeklyWaste, props.siteName])\n\n  return (\n    <WeeklyWasteContext.Provider\n       value={{\n        coverWaste,\n        productionWaste,\n        spoliageWaste,\n        siteName\n      }}\n    >\n      {props.children}\n    </WeeklyWasteContext.Provider>\n  )\n}\n\nexport default WeeklyWasteContextProvider\n","import React, { useContext } from \"react\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport { WasteCapContext } from \"../../../../contexts/waste-cap-context\";\nimport { WeeklyWasteContext } from \"../../../../contexts/weekly-waste-context\";\n\nimport { AccordionHeading, AccordionBody } from \"../accordion\"\n\nimport {\n  wasteDailyDateRange,\n  getLocalStorageData,\n  roundedUpNumberAndTurnBackToNumber\n} from \"../../../../utilities\";\n\nfunction ReportOne({\n  showDarkTheme,\n  showWeeklyChart,\n  handleChangeForCheckedAndAccordion,\n  hideReport\n}) {\n\n  const {\n    weeklyCoverWastes,\n    weeklySpoliageWastes,\n    weeklyPeparationWastes,\n    showPounds\n  } = useContext(WasteCapContext);\n\n  const {\n    // cover,\n    // production,\n    // spoliage,\n    coverWaste,\n    productionWaste,\n    spoliageWaste,\n    siteName\n  } = useContext(WeeklyWasteContext);\n\n  let cover = 0\n  let production = 0\n  let spoliage = 0\n\n  if (showPounds) {\n    cover = roundedUpNumberAndTurnBackToNumber(coverWaste * 2.775)\n    spoliage = roundedUpNumberAndTurnBackToNumber(spoliageWaste * 2.775)\n    production = roundedUpNumberAndTurnBackToNumber(productionWaste * 2.775)\n  } else {\n    cover = coverWaste\n    spoliage = spoliageWaste\n    production = productionWaste\n  }\n\n  const totalWaste = parseInt(cover) + parseInt(spoliage) + parseInt(production);\n\n  let weeklyCoverCap = 0\n  let weeklySpoliageCap = 0\n  let weeklyPreparationCap = 0\n\n  if (showPounds) {\n    weeklyCoverCap = weeklyCoverWastes * 2.775\n    weeklySpoliageCap = weeklySpoliageWastes * 2.775\n    weeklyPreparationCap = weeklyPeparationWastes * 2.775\n  } else {\n    weeklyCoverCap = weeklyCoverWastes\n    weeklySpoliageCap = weeklySpoliageWastes\n    weeklyPreparationCap = weeklyPeparationWastes\n  }\n\nlet coverWastepercentage;\nlet spoliageWastepercentage;\nlet productionWastepercentage;\n\nif (isNaN((cover / weeklyCoverCap) * 100)) {\n  coverWastepercentage = 100\n} else {\n  coverWastepercentage = (cover / weeklyCoverCap) * 100\n}\n\nif (isNaN((spoliage / weeklySpoliageCap) * 100)) {\n  spoliageWastepercentage = 100\n} else {\n  spoliageWastepercentage = (spoliage / weeklySpoliageCap) * 100\n}\n\nif (isNaN((production / weeklyPreparationCap) * 100)) {\n  productionWastepercentage = 100\n} else {\n  productionWastepercentage = (production / weeklyPreparationCap) * 100\n}\n\nlet totalWastepercentage;\n\nconst totalCapping = roundedUpNumberAndTurnBackToNumber(weeklyCoverCap + weeklySpoliageCap + weeklyPreparationCap)\n\nif (isNaN((totalWaste / totalCapping) * 100)) {\n  totalWastepercentage = 100\n} else {\n  totalWastepercentage = (totalWaste / totalCapping) * 100\n}\n\n  let totalWasteColor;\n  if (totalWaste >= totalCapping) {\n    totalWasteColor = \"rgba(255, 0, 0, 0.9)\";\n  } else if (totalWaste === 0) {\n    totalWasteColor = \"rgb(163, 181, 44)\"\n  } else {\n    totalWasteColor = \"rgb(47, 67, 30)\";\n  }\n\n  let coverWasteColor;\n  if (cover >= weeklyCoverCap) {\n    coverWasteColor = \"rgba(255, 0, 0, 0.9)\";\n  } else if (cover === 0) {\n    coverWasteColor = \"rgb(163, 181, 44)\"\n  } else {\n    coverWasteColor = \"rgb(47, 67, 30)\";\n  }\n\n  let spoliageWasteColor;\n  if (spoliage >= weeklySpoliageCap) {\n    spoliageWasteColor = \"rgba(255, 0, 0, 0.9)\";\n  } else if (spoliage === 0) {\n    spoliageWasteColor = \"rgb(163, 181, 44)\"\n  } else {\n    spoliageWasteColor = \"rgb(47, 67, 30)\";\n  }\n\n  let preparationWasteColor;\n  if (production >= weeklyPreparationCap) {\n    preparationWasteColor = \"rgba(255, 0, 0, 0.9)\";\n  } else if (production === 0) {\n    preparationWasteColor = \"rgb(163, 181, 44)\"\n  } else {\n    preparationWasteColor = \"rgb(47, 67, 30)\";\n  }\n\n  const xAxis = getLocalStorageData(\"dailyChartXaxis\");\n  let dateRangeLable = wasteDailyDateRange(xAxis);\n\n  let textColor;\n\n  if (showDarkTheme) {\n    textColor = \"rgb(255, 231, 227)\";\n    } else {\n    textColor = \"rgb(140, 112, 140)\";\n  }\n\n  return (\n    <div className={hideReport ? \"dashboard__weeklyWaste displayNone\":\"dashboard__weeklyWaste\"}>\n\n      {/* <div className= { showDarkTheme ? \"dashboard__weeklyWaste__accordionHeading darkTheme__accordionHeading\":\"dashboard__weeklyWaste__accordionHeading originalTheme__accordionHeading\"}> */}\n\n          <AccordionHeading>\n\n            <div className=\"section-title\">WEEKLY WASTE</div>\n            <div className=\"container\">\n\n              <span onClick={() => handleChangeForCheckedAndAccordion(!showWeeklyChart, \"weeklyChartSwitch\")}>\n                {showWeeklyChart ? (\"X\"):\"| | | \"}\n              </span>\n\n            </div>\n\n          </AccordionHeading>\n\n       {/* </div> */}\n\n       {/* <div className={(showWeeklyChart ? \"dashboard__weeklyWaste__accordionContent\"  + \" dashboard__weeklyWaste__accordionContentOpening\" : \"displayNone\" + \" dashboard__weeklyWaste__accordionContentClosing\")}> */}\n\n       <AccordionBody open={showWeeklyChart}>\n\n          <div className= { showDarkTheme ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem\": \"addPaddingOfHalveRem\"}>\n\n            <div className=\"dashboard__overviewSitesReportHeading\">\n              <div className=\"report-subtitle\">{siteName}</div>\n            </div>\n\n            <div className=\"weeklyWaste__headingWrapper\">\n              <div className=\"section-title center\">WEEKLY WASTE<div className=\"applyMarginRightAndLeft\">{showPounds? \"(£)\" : \"(Kg)\" }</div></div>\n            </div>\n\n            <div\n              className=\"dashboard__overviewSitesReport__capping\"\n              style={{ justifyContent: \"space-evenly\" }}\n            >\n              <div className=\"capping__weeklyWasteChart leftPadding\">\n\n                  <div className=\"capping__text applyPurpleColor cooperHewittBold capping__flex\">\n                    Total\n                    <div className={showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                      {roundedUpNumberAndTurnBackToNumber(weeklyCoverCap + weeklySpoliageCap + weeklyPreparationCap)}\n                    </div>\n                  </div>\n\n                  <>\n                  <div className=\"capping__text applyPurpleColor cooperHewittBold\">=</div>\n\n                    <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\">C</div>\n\n                    <div className={showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                      {roundedUpNumberAndTurnBackToNumber(weeklyCoverCap)}\n                    </div>\n\n                    <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\">S</div>\n\n                    <div className={showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                      {roundedUpNumberAndTurnBackToNumber(weeklySpoliageCap)}\n                    </div>\n\n                    <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\">P</div>\n\n                    <div className={showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                      {roundedUpNumberAndTurnBackToNumber(weeklyPreparationCap)}\n                    </div>\n\n                  </>\n              </div>\n            </div>\n\n            <div className=\"dashboard__overviewSitesReportProgressBarWrapper\">\n\n\n            <div className=\"dashboard__progressBar\">\n\n\n              <div className=\"dashboard__weeklyWaste__progressBarWrapper\">\n\n\n              <div className=\"dashboard__progressBar__size\">\n\n              {totalWaste >= totalCapping ? (\n                <div className=\"dashboard__progressBar__warningText\">WARNING!</div>\n              ) : (\n                <div\n                  style={{\n                    marginTop: \"1rem\",\n                  }}\n                ></div>\n              )}\n\n\n              <div className=\"dashboard__progressBar__wrapper\">\n                <CircularProgressbar\n                  value={totalWastepercentage}\n                  text={\n                    // showPounds ?  (`${totalWaste}` * 2.775).toFixed(0) : `${totalWaste}`\n                    `${totalWaste}`\n                  }\n                  styles={buildStyles({\n                    textColor: textColor,\n                    pathColor: totalWasteColor,\n                    trailColor: \"rgb(163, 181, 44)\",\n                    textSize: \"20px\",\n                    strokeLinecap: \"butt\",\n                  })}\n                  strokeWidth={10}\n                />\n                <div className=\"dashboard__progressBar__text\">\n                  <div className=\"dashboard__progressBar__textSize\">\n                    <div className=\"foodWasteTrackingProgress__date\">{dateRangeLable}</div>\n                  </div>\n                </div>\n              </div>\n\n              </div>\n\n              <div className=\"dashboard__progressBar__totalWasteValue--icon\">=</div>\n\n\n\n                <div className=\"dashboard__progressBar__size\">\n\n                {cover >= weeklyCoverCap ? (\n                  <div className=\"dashboard__progressBar__warningText\">WARNING!</div>\n                ) : (\n                  <div\n                    style={{\n                      marginTop: \"1rem\",\n                    }}\n                  ></div>\n                )}\n\n                <div className=\"dashboard__progressBar__wrapper\">\n                  <CircularProgressbar\n                    value={coverWastepercentage}\n                    text={\n                      // showPounds ?  (`${cover}` * 2.775).toFixed(0) : `${cover}`\n                      `${cover}`\n                    }\n                    styles={buildStyles({\n                      textColor: textColor,\n                      pathColor: coverWasteColor,\n                      trailColor: \"rgb(163, 181, 44)\",\n                      textSize: \"20px\",\n                      strokeLinecap: \"butt\",\n                    })}\n                    strokeWidth={10}\n                  />\n                  <div className=\"dashboard__progressBar__text\">\n                    <div className=\"dashboard__progressBar__textSize\">\n                      <b>C</b>OVER WASTE\n                    </div>\n                  </div>\n                </div>\n\n                </div>\n\n                <div className=\"dashboard__progressBar__totalWasteValue--icon\">+</div>\n\n                <div className=\"dashboard__progressBar__size\">\n\n                {spoliage >= weeklySpoliageCap ? (\n                  <div className=\"dashboard__progressBar__warningText\">WARNING!</div>\n                ) : (\n                  <div\n                    style={{\n                      marginTop: \"1rem\",\n                    }}\n                  ></div>\n                )}\n\n                  <CircularProgressbar\n                    value={spoliageWastepercentage}\n                    text={\n                      // showPounds ?  (`${spoliage}` * 2.775).toFixed(0) : `${spoliage}`\n                       `${spoliage}`\n                    }\n                    styles={buildStyles({\n                      textColor: textColor,\n                      pathColor: spoliageWasteColor,\n                      trailColor: \"rgb(163, 181, 44)\",\n                      textSize: \"20px\",\n                      strokeLinecap: \"butt\",\n                    })}\n                    strokeWidth={10}\n                  />\n                    <div className=\"dashboard__progressBar__text\">\n                      <div className=\"dashboard__progressBar__textSize\">\n                        <b>S</b>POILAGE\n                      </div>\n                    </div>\n                </div>\n\n                <div className=\"dashboard__progressBar__totalWasteValue--icon\">+</div>\n\n                <div className=\"dashboard__progressBar__size\">\n\n                {production >= weeklyPreparationCap ? (\n                <div className=\"dashboard__progressBar__warningText\">WARNING!</div>\n                ) : (\n                  <div\n                    style={{\n                      marginTop: \"1rem\",\n                    }}\n                  ></div>\n                )}\n\n\n                <CircularProgressbar\n                  value={productionWastepercentage}\n                  text={\n                    // showPounds ?  (`${production}` * 2.775).toFixed(0) : `${production}`\n                    `${production}`\n                  }\n                  styles={buildStyles({\n                    textColor: textColor,\n                    pathColor: preparationWasteColor,\n                    trailColor: \"rgb(163, 181, 44)\",\n                    textSize: \"20px\",\n                    strokeLinecap: \"butt\",\n                  })}\n                  strokeWidth={10}\n                />\n\n                <div className=\"dashboard__progressBar__text\">\n                  <div className=\"dashboard__progressBar__textSize\">\n                    <b>P</b>REPARATION\n                  </div>\n                </div>\n\n\n              </div>\n              </div>\n\n            </div>\n\n            <div className=\"weeklyWaste__message\">\n                (Weekly waste is updated 11pm everyday)\n            </div>\n\n            </div>\n\n          </div>\n\n        </AccordionBody>\n\n        {/* </div> */}\n\n      </div>\n  );\n}\n\nexport default ReportOne;\n","import React, { createContext, useEffect, useState } from 'react'\n\nexport const WeeklyWasteTrendContext = createContext()\n\nconst WeeklyWasteTrendProvider = props => {\n\n  // const [selectedSiteWeeklyValues, setSelectedSiteWeeklyValues] = useState([])\n  // const [previousSelectedSiteWeeklyValues, setPreviousSelectedSiteWeeklyValues] = useState([])\n  const selectedSiteWeeklyValues = []\n  const previousSelectedSiteWeeklyValues = []\n\n  const [coverWaste, setCoverWaste] = useState(0)\n  const [preparationWaste, setPreparationWaste] = useState(0)\n  const [spoilageWaste, setSpoilageWaste] = useState(0)\n  const [totalWaste, setTotalWaste] = useState(0)\n\n  const [lastWeekCoverWaste, setlastWeekCoverWaste] = useState(0)\n  const [lastWeekPreparationWaste, setLastWeekPreparationWaste] = useState(0)\n  const [lastWeekSpoilageWaste, setLastWeekSpoilageWaste] = useState(0)\n  const [lastWeekTotalWaste, setLastWeekTotalWaste] = useState(0)\n\n  const [currentWeekCoverWaste, setCurrentWeekCoverWaste] = useState(0)\n  const [currentWeekPreparationWaste, setCurrentWeekPreparationWaste] = useState(0)\n  const [currentWeekSpoilageWaste, setCurrentWeekSpoilageWaste] = useState(0)\n  const [currentWeekTotalWaste, setCurrentWeekTotalWaste] = useState(0)\n\n  const [displayCurrentWasteValue, setDisplayCurrentWasteValue] = useState(0)\n  const [displayPreviousWasteValue, setDisplayPreviousWasteValue] = useState(0)\n\n  const [color, setColor] = useState(0)\n\n  const [showTooltip, setTooltip] = React.useState(true);\n\n  const weeklyWasteValuesForCurrentWeekAndLastWeek = [\n  {\n    value: displayCurrentWasteValue,\n    colors: [color, \"rgb(15, 128, 140)\"]\n  },\n  {\n    value: displayPreviousWasteValue,\n    colors: [color, \"rgb(15, 128, 140)\"]\n  }\n];\n\n  useEffect(() => {\n\n    if (props.weeklyTrend) {\n\n      setCoverWaste(props.weeklyTrend[0].coverWaste)\n      setPreparationWaste(props.weeklyTrend[0].prepWaste)\n      setSpoilageWaste(props.weeklyTrend[0].spoilageWaste)\n      setTotalWaste(props.weeklyTrend[0].totalWaste)\n\n      reformatForWeeklyWasteBar(props.weeklyWasteValuesForCurrentWeekAndLastWeek)\n\n    }\n\n}, [ props.siteName, props.weeklyWasteTrend, props.weeklyTrend, props.weeklyWasteValuesForCurrentWeekAndLastWeek])\n\n\n\n  const reformatForWeeklyWasteBar = (weeklyWaste) => {\n\n    console.log(\"weeklyWaste\",weeklyWaste);\n\n    if (weeklyWaste) {\n\n      setlastWeekCoverWaste(weeklyWaste.lastWeek[0].data.coverWaste[0]);\n      setLastWeekPreparationWaste(weeklyWaste.lastWeek[0].data.preparationWaste[0])\n      setLastWeekSpoilageWaste(weeklyWaste.lastWeek[0].data.spoilageWaste[0])\n      setLastWeekTotalWaste(weeklyWaste.lastWeek[0].data.coverWaste[0] + weeklyWaste.lastWeek[0].data.preparationWaste[0] + weeklyWaste.lastWeek[0].data.spoilageWaste[0])\n\n      let totalCurrentWeekWaste = weeklyWaste.lastWeek[0].data.coverWaste[0] + weeklyWaste.lastWeek[0].data.preparationWaste[0] + weeklyWaste.lastWeek[0].data.spoilageWaste[0];\n      let totalPreviousWeekWaste = weeklyWaste.currentWeek[0][0].coverWaste[0] + weeklyWaste.currentWeek[0][0].preparationWaste[0] + weeklyWaste.currentWeek[0][0].spoilageWaste[0];\n\n      setDisplayPreviousWasteValue(totalCurrentWeekWaste)\n      setDisplayCurrentWasteValue(totalPreviousWeekWaste)\n\n      setCurrentWeekCoverWaste(weeklyWaste.currentWeek[0][0].coverWaste[0])\n      setCurrentWeekPreparationWaste(weeklyWaste.currentWeek[0][0].preparationWaste[0])\n      setCurrentWeekSpoilageWaste(weeklyWaste.currentWeek[0][0].spoilageWaste[0])\n      setCurrentWeekTotalWaste(weeklyWaste.currentWeek[0][0].coverWaste[0] + weeklyWaste.currentWeek[0][0].preparationWaste[0] + weeklyWaste.currentWeek[0][0].spoilageWaste[0])\n\n      // console.log(\"totalCurrentWeekWaste\",totalCurrentWeekWaste);\n      // console.log(\"totalPreviousWeekWaste\",totalPreviousWeekWaste);\n\n      const differenceBetweenCurrentAndPreviousFoodWaste = totalCurrentWeekWaste - totalPreviousWeekWaste;\n      let colour = differenceBetweenCurrentAndPreviousFoodWaste > 0 ? \"rgb(188, 242, 107)\" : \"rgba(255, 0, 0, 0.9)\";\n      setColor(colour)\n\n    }\n  }\n\n  const setDateRange = () => {\n    if (selectedSiteWeeklyValues.length > 0 && previousSelectedSiteWeeklyValues.length > 0) {\n        let weeklyWasteTrendDateRange = {\n          lastWeek: previousSelectedSiteWeeklyValues[0].data.Date,\n          thisWeek: selectedSiteWeeklyValues[0].data.Date\n        }\n        return weeklyWasteTrendDateRange;\n    }\n  }\n\n  const handleWeeklyTrendValues= (e) => {\n    const selector = e.target.id;\n\n    if (selector === \"C\") {\n      setDisplayPreviousWasteValue(lastWeekCoverWaste)\n      setDisplayCurrentWasteValue(currentWeekCoverWaste)\n\n    } else if (selector === \"S\") {\n      setDisplayPreviousWasteValue(lastWeekSpoilageWaste)\n      setDisplayCurrentWasteValue(currentWeekSpoilageWaste)\n\n    } else if (selector === \"P\") {\n      setDisplayPreviousWasteValue(lastWeekPreparationWaste)\n      setDisplayCurrentWasteValue(currentWeekPreparationWaste)\n\n    } else if (selector === \"A\") {\n      setDisplayPreviousWasteValue(lastWeekTotalWaste)\n      setDisplayCurrentWasteValue(currentWeekTotalWaste)\n\n    }\n\n    setTooltip(false)\n  }\n\n  // console.log(\"coverWaste\",coverWaste)\n  // console.log(\"preparationWaste\",preparationWaste)\n  // console.log(\"spoilageWaste\",spoilageWaste)\n  // console.log(\"totalWaste\",totalWaste)\n\n  return (\n    <WeeklyWasteTrendContext.Provider\n       value={{\n        // selectedSiteWeeklyValues,\n        // previousSelectedSiteWeeklyValues,\n        // selectCurrentYearlyWeeklyWasteValues,\n        coverWaste,\n        preparationWaste,\n        spoilageWaste,\n        totalWaste,\n        ///\n        setDateRange,\n        weeklyWasteValuesForCurrentWeekAndLastWeek,\n        handleWeeklyTrendValues,\n\n        showTooltip\n      }}\n    >\n      {props.children}\n    </WeeklyWasteTrendContext.Provider>\n  )\n}\n\nexport default WeeklyWasteTrendProvider\n","import styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n  margin: 0px auto;\n  max-width: 500px;\n  height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n`;\n\nexport const MainContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 1000%;\n`;\n\nexport const BarChartContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nexport const Chart = css`\n  margin-top: 10px;\n  width: 56px;\n  &:hover {\n    opacity: 0.8;\n  }\n  @media (max-width: 420px) {\n    width: 34px;\n  }\n`;\n\nexport const Number = styled.span`\n  font-size: 1.5rem;\n  text-align: center;\n  color: ${(props) => props.color};\n`;\n\nexport const MakeBar = styled.div`\n  height: ${(props) => props.height}%;\n  background-image: linear-gradient(\n    to bottom,\n    ${(props) => props.colors[0]},\n    ${(props) => props.colors[0]}\n  );\n  ${Chart};\n`;\n\nexport const BlackLine = styled.div`\n  width: 100%;\n  height: 5px;\n  background-color: grey;\n`;","import React from \"react\";\nimport {\n  MainContainer,\n  Container,\n  BarChartContainer,\n  Number,\n  BlackLine,\n  MakeBar\n} from \"./style\";\n\nexport default function BarChart(props) {\n\n\n    // console.log(\"props\",props)\n\n  return (\n    <Container>\n      <MainContainer>\n        {props.data.map(({ value, colors }, i) => {\n\n          const formatNum = ( value / 1000 ) * 100;\n          {/* console.log(\"formatNum\",formatNum) */}\n\n          return (\n            <BarChartContainer key={i}>\n              <Number color={colors[1]}>{props.showPounds ? \"£\" + (value * 2.5).toFixed(0) : value.toFixed(2) + \"kg\"}</Number>\n              <MakeBar height={formatNum} colors={colors} />\n            </BarChartContainer>\n          );\n        })}\n      </MainContainer>\n      <BlackLine />\n    </Container>\n  );\n}","import React, { useContext, useState, useEffect } from \"react\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport {\n  weeklyWasteDateRange,\n  setItemInLocalStorage\n} from \"../../../../utilities\";\n\nimport { WeeklyWasteTrendContext } from \"../../../../contexts/weekly-trends-context\";\n\nimport BarChart from \"./../reuseable-components/charts/bar-chart/bar-chart\"\n\nimport { AccordionHeading, AccordionBody } from \"../accordion\"\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nfunction ReportOne({\n  siteName,\n  showPounds,\n  setShowWeeklyTrendChart,\n  showWeeklyTrendChart,\n  showDarkTheme,\n  hideReport,\n}) {\n\n  const { setDateRange, coverWaste, preparationWaste, spoilageWaste, totalWaste, weeklyWasteValuesForCurrentWeekAndLastWeek, handleWeeklyTrendValues, showTooltip } = useContext(WeeklyWasteTrendContext);\n\n  const [tooltipIsOpen, setTooltipIsOpen] = React.useState(true);\n\n  // selectCurrentYearlyWeeklyWasteValues()\n\n  const dateRange = setDateRange();\n  const formatedDateRange  = weeklyWasteDateRange(dateRange)\n\n  let cover = coverWaste\n  let production = preparationWaste\n  let spoliage = spoilageWaste\n\n  let coverWastepercentage = 0\n  let spoliageWastepercentage = 0\n  let productionWastepercentage = 0\n\n  let coverWasteColor;\n  let spoliageWasteColor;\n  let preparationWasteColor;\n\n\n  if (cover > 0) {\n    coverWasteColor = \"rgba(255, 0, 0, 0.9)\"\n  } else if (cover === 0) {\n    coverWasteColor = \"rgb(237, 242, 99)\"\n  } else {\n    coverWasteColor = \"rgb(47, 67, 30)\"\n  }\n\n  if (production > 0) {\n    preparationWasteColor = \"rgba(255, 0, 0, 0.9)\"\n  } else if (production === 0) {\n    preparationWasteColor = \"rgb(237, 242, 99)\"\n  } else {\n    preparationWasteColor = \"rgb(47, 67, 30)\"\n  }\n\n  if (spoliage > 0) {\n    spoliageWasteColor = \"rgba(255, 0, 0, 0.9)\"\n  } else if (spoliage === 0) {\n    spoliageWasteColor = \"rgb(237, 242, 99)\"\n  } else {\n    spoliageWasteColor = \"rgb(47, 67, 30)\"\n  }\n\n  let textColor;\n\n  if (showDarkTheme) {\n    textColor = \"rgb(255, 231, 227)\";\n    } else {\n    textColor = \"rgb(140, 112, 140)\";\n  }\n\n  const [appState, changeState] = useState({\n    activeObject: {\n      id: 3,\n      name: \"TOTAL WASTE\",\n    },\n    objects: [\n      { id: 0, val: \"C\", name: \"COVER WASTE\" },\n      { id: 1, val: \"S\", name: \"SPOILAGE WASTE\" },\n      { id: 2, val: \"P\", name: \"PREPARATION WASTE\" },\n      { id: 3, val: \"A\", name: \"TOTAL WASTE\" },\n    ],\n  });\n\n  const [activeState, changeActiveState] = useState({\n    coverWaste: false,\n    spoliageWaste: false,\n    productionWaste: false,\n    allWaste: true,\n  });\n\n  function toggleActive(type) {\n    switch (type) {\n      case \"cover\":\n        changeActiveState({\n          coverWaste: true,\n          spoliageWaste: false,\n          productionWaste: false,\n          allWaste: false,\n        });\n        changeState({ ...appState, activeObject: appState.objects[0] });\n        break;\n      case \"production\":\n        changeActiveState({\n          coverWaste: false,\n          spoliageWaste: false,\n          productionWaste: true,\n          allWaste: false,\n        });\n        changeState({ ...appState, activeObject: appState.objects[2] });\n        break;\n      case \"spoliage\":\n        changeActiveState({\n          coverWaste: false,\n          spoliageWaste: true,\n          productionWaste: false,\n          allWaste: false,\n        });\n        changeState({ ...appState, activeObject: appState.objects[1] });\n        break;\n      case \"all\":\n        changeActiveState({\n          coverWaste: false,\n          spoliageWaste: false,\n          productionWaste: false,\n          allWaste: true,\n        });\n        changeState({ ...appState, activeObject: appState.objects[3] });\n        break;\n      default:\n    }\n  }\n\n  useEffect(() => {\n    if (showWeeklyTrendChart && showTooltip) {\n      setTooltipIsOpen(true)\n    } else {\n      setTooltipIsOpen(false)\n    }\n  },[showWeeklyTrendChart, showTooltip])\n\n  // console.log(\"weeklyWasteValuesForCurrentWeekAndLastWeek\",weeklyWasteValuesForCurrentWeekAndLastWeek)\n\n\n  return (\n\n\n    <div className=\"weeklyWasteTrend\">\n      {!hideReport &&\n        <>\n          <AccordionHeading>\n            <div className=\"section-title\">WEEKLY WASTE TREND</div>\n            <div className=\"container\">\n              {showWeeklyTrendChart ? (\n                <span onClick={() =>\n                {\n                  setShowWeeklyTrendChart(!showWeeklyTrendChart)\n                  setItemInLocalStorage(\"showWeeklyTrendChart\", !showWeeklyTrendChart)\n                }\n                }>X</span>\n              ) : (\n                <span onClick={() =>\n                {\n                  setShowWeeklyTrendChart(!showWeeklyTrendChart)\n                  setItemInLocalStorage(\"showWeeklyTrendChart\", !showWeeklyTrendChart)\n                }\n                }> | | | </span>\n                )}\n            </div>\n          </AccordionHeading>\n\n          <AccordionBody open={showWeeklyTrendChart}>\n            <div className= { showDarkTheme ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem\": \"originalTheme__reportBackgroundColor addPaddingOfHalveRem\"}>\n\n            <div className=\"dashboard__overviewSitesReportHeading\">\n              <div className=\"report-subtitle\">{siteName}</div>\n            </div>\n\n            <div\n              className=\"dashboard__overviewSitesReport__capping\"\n              style={{ justifyContent: \"space-evenly\" }}\n            >\n\n            </div>\n\n            <div className=\"dashboard__overviewSitesReportProgressBarWrapper\">\n\n            <div className=\"dashboard__progressBar\">\n\n\n              <div className=\"dashboard__progressBar__one\">\n\n              <div className=\"dashboard__progressBar__totalWasteValue__wrapper\">\n\n              <div className=\"dashboard__progressBar__totalWasteValue\">\n\n              <div className=\"weeklyWasteTrend--poundsKgsAndDateWrapper\">\n                <div className=\"weeklyWasteTrend--totalWasteAndKgAndPounds\">\n\n                  <div className={showDarkTheme? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor cooperHewittBold\" :\"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor cooperHewittBold\"}>\n                    {showPounds ? \"£\": \"\"}\n                  </div>\n\n                  <div className={showDarkTheme? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor\" :\"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor\"}>\n                    {showPounds ? (totalWaste * 2.775).toFixed(0) : totalWaste}\n                  </div>\n\n                  <div className={showDarkTheme? \"dashboard__progressBar__totalWasteValue--fontSize darkTheme__numberColor cooperHewittBold\" :\"dashboard__progressBar__totalWasteValue--fontSize applyPurpleColor cooperHewittBold\"}>\n                    {showPounds ? \"\": \"Kg\"}\n                  </div>\n\n\n                </div>\n                <div className=\"weeklyWasteTrend--dataRangeStyle applyCooperHewittBold\">{formatedDateRange}</div>\n              </div>\n\n              </div>\n              <div className=\"dashboard__progressBar__dataRange\">\n              </div>\n          </div>\n\n          <div className=\"dashboard__progressBar__totalWasteValue--icon\">=</div>\n\n          </div>\n\n\n              <div className=\"dashboard__progressBar__two\">\n\n                  <div className=\"dashboard__progressBar__size\">\n\n                    <div className=\"dashboard__progressBar__wrapper\">\n                      <CircularProgressbar\n                        value={coverWastepercentage}\n                        text={\n                          showPounds ?  (`${cover}` * 2.775).toFixed(0) : `${cover}`\n                        }\n                        styles={buildStyles({\n                          textColor: textColor,\n                          pathColor: coverWasteColor,\n                          trailColor: coverWasteColor,\n                          textSize: \"20px\",\n                          strokeLinecap: \"butt\",\n                        })}\n                        strokeWidth={10}\n                      />\n                      <div className=\"dashboard__progressBar__text\">\n                        <div className=\"dashboard__progressBar__textSize\">\n                          <b>C</b>OVER WASTE\n                        </div>\n                      </div>\n                    </div>\n\n                  </div>\n\n                  <div className=\"dashboard__progressBar__totalWasteValue--icon\">+</div>\n\n                  <div className=\"dashboard__progressBar__size\">\n\n                    <CircularProgressbar\n                      value={spoliageWastepercentage}\n                      text={\n                        showPounds ?  (`${spoliage}` * 2.775).toFixed(0) : `${spoliage}`\n                      }\n                      styles={buildStyles({\n                        textColor: textColor,\n                        pathColor: spoliageWasteColor,\n                        trailColor: spoliageWasteColor,\n                        textSize: \"20px\",\n                        strokeLinecap: \"butt\",\n                      })}\n                      strokeWidth={10}\n                    />\n                      <div className=\"dashboard__progressBar__text\">\n                        <div className=\"dashboard__progressBar__textSize\">\n                          <b>S</b>POILAGE\n                        </div>\n                      </div>\n                  </div>\n\n                  <div className=\"dashboard__progressBar__totalWasteValue--icon\">+</div>\n\n                  <div className=\"dashboard__progressBar__size\">\n\n                  <CircularProgressbar\n                    value={productionWastepercentage}\n                    text={\n                      showPounds ?  (`${production}` * 2.775).toFixed(0) : `${production}`\n                    }\n                    styles={buildStyles({\n                      textColor: textColor,\n                      pathColor: preparationWasteColor,\n                      trailColor: preparationWasteColor,\n                      textSize: \"20px\",\n                      strokeLinecap: \"butt\",\n                    })}\n                    strokeWidth={10}\n                  />\n\n                    <div className=\"dashboard__progressBar__text\">\n                      <div className=\"dashboard__progressBar__textSize\">\n                        <b>P</b>REPARATION\n                      </div>\n                    </div>\n\n\n                </div>\n\n                </div>\n\n\n\n                </div>\n\n                <div className=\"weeklyWaste__message\">\n                  (The difference between this and last week)\n                </div>\n\n                <div className=\"weeklyWaste__message cooperHewittBold\" style={{\n                  fontSize: \"20px\"\n                }}>\n                  THIS WEEK{'   '}VS{'   '}LAST WEEK\n                </div>\n\n                <BarChart data={weeklyWasteValuesForCurrentWeekAndLastWeek} showPounds={showPounds} />\n\n                <div\n                  style={{ marginTop: \"1rem\"}}\n                >\n                  <div className=\"monthlyWasteChart__CspLabel\" style={{\n                    width: \"100%\"\n                  }}>\n                  <div\n                    className={activeState.coverWaste ? \"active\" : \"inactive\"}\n                    id={1}\n                    onClick={() => {\n                      toggleActive(\"cover\");\n                    }}\n                  >\n\n                  <Tooltip\n                    open={tooltipIsOpen}\n                    // onOpen={() => setTooltipIsOpen(true)}\n                    onClose={() => setTooltipIsOpen(false)}\n                    title=\"click on C, S, P or All waste stream\"\n                    arrow\n                  >\n\n                    <h2 id={\"C\"}\n                    onClick={handleWeeklyTrendValues}\n                        className={activeState.coverWaste ? \"reduceOpacity\" : \"\"}\n                    >\n                      C +\n                    </h2>\n\n                    </Tooltip>\n\n                  </div>\n                  <div\n                    className={activeState.spoliageWaste ? \"active\" : \"inactive\"}\n                    id={1}\n                    onClick={() => {\n                      toggleActive(\"spoliage\");\n                    }}\n                  >\n\n                  <Tooltip\n                    open={tooltipIsOpen}\n                    // onOpen={() => setTooltipIsOpen(true)}\n                    onClose={() => setTooltipIsOpen(false)}\n                    // title=\"click on C, S, P or All waste stream\"\n                    arrow\n                  >\n\n                    <h2 id={\"S\"}\n                    onClick={handleWeeklyTrendValues}\n                        className={activeState.spoliageWaste ? \"reduceOpacity\" : \"\"}\n                    >\n                      S +\n                    </h2>\n\n                  </Tooltip>\n\n                  </div>\n                  <div\n                    className={activeState.productionWaste ? \"active\" : \"inactive\"}\n                    id={1}\n                    onClick={() => {\n                      toggleActive(\"production\");\n                    }}\n                  >\n\n                  <Tooltip\n                    open={tooltipIsOpen}\n                    // onOpen={() => setTooltipIsOpen(true)}\n                    onClose={() => setTooltipIsOpen(false)}\n                    // title=\"click on C, S, P or All waste stream\"\n                    arrow\n                  >\n\n                    <h2 id={\"P\"}\n                    onClick={handleWeeklyTrendValues}\n                        className={activeState.productionWaste ? \"reduceOpacity\" : \"\"}\n                    >\n                      P =\n                    </h2>\n\n                  </Tooltip>\n\n                  </div>\n                  <div\n                    className={activeState.allWaste ? \"active\" : \"inactive\"}\n                    id={1}\n                    onClick={() => {\n                      toggleActive(\"all\");\n                    }}\n                  >\n                    <h2 id={\"A\"}\n                    onClick={handleWeeklyTrendValues}\n                      className={activeState.allWaste ? \"reduceOpacity\" : \"\"}\n                    >\n                      ALL\n                    </h2>\n                  </div>\n                </div>\n                </div>\n\n                {/* <div className=\"weeklyWaste__message cooperHewittBold\">\n                  Current Week Waste VS Previous Week Waste\n                </div> */}\n\n            </div>\n\n          </div>\n          </AccordionBody>\n        </>\n      }\n    </div>\n\n  );\n}\n\nexport default ReportOne;\n\n","import React, { createContext, useEffect } from 'react'\n\nexport const MonthlyWasteContext = createContext()\n\nconst MonthlyTargetContextProvider = props => {\n\n  const [coverWasteInCurrentMonth, setCoverWasteInCurrentMonth] = React.useState(0);\n  const [preparationWasteInCurrentMonth, setPreparationWasteInCurrentMonth] = React.useState(0);\n  const [spoilageWasteInCurrentMonth, setSpoilageWasteInCurrentMonth] = React.useState(0);\n\n  const [currentMonthCoverWasteArray, setCurrentMonthCoverWasteArray] = React.useState([0]);\n  const [currentMonthPrepWasteArray, setCurrentMonthPrepWasteArray] = React.useState([0]);\n  const [currentMonthSpoilageWasteArray, setCurrentMonthSpoilageWasteArray] = React.useState([0]);\n\n  const [coverMonthlyChanges, setCoverMonthlyChanges] = React.useState([0]);\n  const [prepMonthlyChanges, setPrepMonthlyChanges] = React.useState([0]);\n  const [spoilageMonthlyChanges, setSpoilageMonthlyChanges] = React.useState([0]);\n  const [monthlyChanges, setMonthlyChanges] = React.useState([0]);\n\n  const [displayMonthlyTrends, setDisplayMonthlyTrends] = React.useState([0]);\n  const [monthlySelectedValue, setMonthlySelectedValue] = React.useState(\"A\");\n\n  const [showTooltip, setTooltip] = React.useState(true);\n\n  useEffect(() => {\n\n    setCoverWasteInCurrentMonth(props.coverWasteInCurrentMonth)\n    setPreparationWasteInCurrentMonth(props.preparationWasteInCurrentMonth)\n    setSpoilageWasteInCurrentMonth(props.spoilageWasteInCurrentMonth)\n\n    setCurrentMonthCoverWasteArray(props.currentMonthCoverWasteArray)\n    setCurrentMonthPrepWasteArray(props.currentMonthPrepWasteArray)\n    setCurrentMonthSpoilageWasteArray(props.currentMonthSpoilageWasteArray)\n\n    setCoverMonthlyChanges(props.coverMonthlyChanges)\n    setPrepMonthlyChanges(props.prepMonthlyChanges)\n    setSpoilageMonthlyChanges(props.spoilageMonthlyChanges)\n    setMonthlyChanges(props.monthlyChanges)\n\n    setDisplayMonthlyTrends(props.monthlyChanges)\n}, [\n  props.siteName,\n  props.coverWasteInCurrentMonth,\n  props.preparationWasteInCurrentMonth,\n  props.spoilageWasteInCurrentMonth,\n  props.currentMonthCoverWasteArray,\n  props.currentMonthPrepWasteArray,\n  props.currentMonthSpoilageWasteArray,\n  props.coverMonthlyChanges,\n  props.prepMonthlyChanges,\n  props.spoilageMonthlyChanges,\n  props.monthlyChanges\n])\n\n  const handleMonthlyValues = (e) => {\n    const selector = e.target.id;\n\n    if (selector === \"C\") {\n      setDisplayMonthlyTrends(coverMonthlyChanges)\n      setMonthlySelectedValue(\"C\");\n\n    } else if (selector === \"S\") {\n      setDisplayMonthlyTrends(spoilageMonthlyChanges)\n      setMonthlySelectedValue(\"S\");\n\n    } else if (selector === \"P\") {\n      setDisplayMonthlyTrends(prepMonthlyChanges)\n      setMonthlySelectedValue(\"P\");\n\n    } else if (selector === \"A\") {\n      setDisplayMonthlyTrends(monthlyChanges)\n      setMonthlySelectedValue(\"A\");\n    }\n\n    setTooltip(false)\n  }\n\n  return (\n    <MonthlyWasteContext.Provider\n        value={{\n\n            coverWasteInCurrentMonth,\n            preparationWasteInCurrentMonth,\n            spoilageWasteInCurrentMonth,\n\n            currentMonthCoverWasteArray,\n            currentMonthPrepWasteArray,\n            currentMonthSpoilageWasteArray,\n\n            coverMonthlyChanges,\n            prepMonthlyChanges,\n            spoilageMonthlyChanges,\n            monthlyChanges,\n\n            handleMonthlyValues,\n            displayMonthlyTrends,\n            monthlySelectedValue,\n\n            showTooltip\n        }}\n    >\n      {props.children}\n    </MonthlyWasteContext.Provider>\n  )\n}\n\nexport default MonthlyTargetContextProvider","\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport Chart from \"chart.js\";\nimport \"chartjs-plugin-annotation\";\nimport \"chartjs-plugin-datalabels\";\nimport useWindowDimensions from \"../../libs/use-window-dimensions\";\nimport { getEndDate, reducer, roundedUpNumberAndTurnBackToNumber } from \"../../../../utilities\";\n\nimport { MonthlyWasteContext } from \"../../../../contexts/monthly-waste-context\";\n\nimport { AccordionHeading, AccordionBody } from \"../accordion\"\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nexport default function MonthlyWasteChart(props) {\n  Chart.defaults.global.defaultFontFamily = \"CooperHewitt-Book\";\n\n  const [tooltipIsOpen, setTooltipIsOpen] = React.useState(true);\n\n  const {\n    coverWasteInCurrentMonth,\n    preparationWasteInCurrentMonth,\n    spoilageWasteInCurrentMonth,\n\n    currentMonthCoverWasteArray,\n    currentMonthPrepWasteArray,\n    currentMonthSpoilageWasteArray,\n\n    monthlyChanges,\n\n    handleMonthlyValues,\n    displayMonthlyTrends,\n    monthlySelectedValue,\n\n    showTooltip\n  } = useContext(MonthlyWasteContext);\n\n  const [monthlyCoverWaste, setCurrentMonthCoverWasteArray] = React.useState([0]);\n  const [monthlyPreparationWaste, setCurrentMonthPrepWasteArray] = React.useState([0]);\n  const [monthlySpoilageWaste, setCurrentMonthSpoilageWasteArray] = React.useState([0]);\n\n  let graphHeight = 130;\n  let graphWidth = 400;\n\n  const { width } = useWindowDimensions();\n\n  let siteId;\n\n  let totalMonthlyValueFontSize = \"13\"\n  let xAxisLabel = \"13\"\n\n  if (width <= 700) {\n    graphWidth = 260;\n    graphHeight = 279;\n    totalMonthlyValueFontSize=\"8\"\n    xAxisLabel = \"8\"\n  }\n\n  let barColors;\n\n  const [appState, changeState] = useState({\n    activeObject: {\n      id: 3,\n      val: props.monthlySelectedValue,\n      name: \"TOTAL WASTE\",\n    },\n    objects: [\n      { id: 0, val: \"C\", name: \"COVER WASTE\" },\n      { id: 1, val: \"S\", name: \"SPOILAGE WASTE\" },\n      { id: 2, val: \"P\", name: \"PREPARATION WASTE\" },\n      { id: 3, val: \"A\", name: \"TOTAL WASTE\" },\n    ],\n  });\n\n  const [activeState, changeActiveState] = useState({\n    coverWaste: false,\n    spoliageWaste: false,\n    productionWaste: false,\n    allWaste: true,\n  });\n\n\n  function toggleActive(type) {\n    switch (type) {\n      case \"cover\":\n        changeActiveState({\n          coverWaste: true,\n          spoliageWaste: false,\n          productionWaste: false,\n          allWaste: false,\n        });\n        changeState({ ...appState, activeObject: appState.objects[0] });\n        break;\n      case \"production\":\n        changeActiveState({\n          coverWaste: false,\n          spoliageWaste: false,\n          productionWaste: true,\n          allWaste: false,\n        });\n        changeState({ ...appState, activeObject: appState.objects[2] });\n        break;\n      case \"spoliage\":\n        changeActiveState({\n          coverWaste: false,\n          spoliageWaste: true,\n          productionWaste: false,\n          allWaste: false,\n        });\n        changeState({ ...appState, activeObject: appState.objects[1] });\n        break;\n      case \"all\":\n        changeActiveState({\n          coverWaste: false,\n          spoliageWaste: false,\n          productionWaste: false,\n          allWaste: true,\n        });\n        changeState({ ...appState, activeObject: appState.objects[3] });\n        break;\n      default:\n    }\n  }\n\n\n  useEffect(() => {\n\n    setCurrentMonthCoverWasteArray(currentMonthCoverWasteArray)\n    setCurrentMonthPrepWasteArray(currentMonthPrepWasteArray)\n    setCurrentMonthSpoilageWasteArray(currentMonthSpoilageWasteArray)\n\n    // console.log(\"currentMonthCoverWasteArray\",currentMonthCoverWasteArray)\n    // console.log(\"currentMonthPrepWasteArray\",currentMonthPrepWasteArray)\n    // console.log(\"currentMonthSpoilageWasteArray\",currentMonthSpoilageWasteArray)\n\n    if (props.showMonthlyChart && showTooltip) {\n      setTooltipIsOpen(true)\n    } else {\n      setTooltipIsOpen(false)\n    }\n\n\n    if (monthlySelectedValue === \"C\") {\n      changeActiveState({\n        coverWaste: true,\n        spoliageWaste: false,\n        productionWaste: false,\n        allWaste: false,\n      });\n      changeState({ ...appState, activeObject: appState.objects[0] });\n    } else if (monthlySelectedValue === \"S\") {\n      changeActiveState({\n        coverWaste: false,\n        spoliageWaste: true,\n        productionWaste: false,\n        allWaste: false,\n      });\n      changeState({ ...appState, activeObject: appState.objects[1] });\n    } else if (monthlySelectedValue === \"P\") {\n      changeActiveState({\n        coverWaste: false,\n        spoliageWaste: false,\n        productionWaste: true,\n        allWaste: false,\n      });\n      changeState({ ...appState, activeObject: appState.objects[2] });\n    } else if (monthlySelectedValue === \"A\") {\n      changeActiveState({\n        coverWaste: false,\n        spoliageWaste: false,\n        productionWaste: false,\n        allWaste: true,\n      });\n    }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n},[currentMonthCoverWasteArray, currentMonthPrepWasteArray, currentMonthSpoilageWasteArray, monthlySelectedValue, props.showMonthlyChart]);\n\n\n  if (props.siteID !== undefined) {\n    siteId = props.siteID;\n  }\n\n  const getChartData = (canvas) => {\n    const data = {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUNE\",\n        \"JULY\",\n        \"AUG\",\n        \"SEPT\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\",\n      ],\n      datasets: [\n        {\n          label: \"Total wastes\",\n          siteId: siteId,\n          data: props.showPounds\n          ? displayMonthlyTrends.map((data) => {\n            return (data * 2.775).toFixed(0);\n          })\n          : displayMonthlyTrends.map((data) => {\n            return data.toFixed(0);\n          }),\n          backgroundColor: barColors,\n          barPercentage: 0.7,\n          categoryPercentage: 0.9,\n          lineTension: 0,\n        }\n      ],\n    };\n    return data;\n  };\n\n  let months = [\n    \"JAN\",\n    \"FEB\",\n    \"MAR\",\n    \"APR\",\n    \"MAY\",\n    \"JUNE\",\n    \"JULY\",\n    \"AUG\",\n    \"SEP\",\n    \"OCT\",\n    \"NOV\",\n    \"DEC\",\n  ];\n\n  let monthlyWasteTextColor;\n\n  if (props.showDarkTheme) {\n    monthlyWasteTextColor = \"rgb(255, 231, 227)\"\n  } else {\n    monthlyWasteTextColor = \"rgb(15, 128, 140)\"\n  }\n\n  return (\n    <div className={props.hideReport ? \"monthlyWasteChart displayNone\":\"monthlyWasteChart\"}>\n\n    {/* <div className= { props.showDarkTheme ? \"monthlyWasteChart__accordionHeading darkTheme__accordionHeading\":\"monthlyWasteChart__accordionHeading originalTheme__accordionHeading\"}> */}\n\n      <AccordionHeading>\n        <div className=\"section-title\">MONTHLY WASTE & MONTHLY TREND</div>\n        <div className=\"container\">\n          <span onClick={() => props.handleChangeForCheckedAndAccordion(!props.showMonthlyChart, \"monthlyChartSwitch\")}>\n            {props.showMonthlyChart ? (\"X\"):\"| | | \"}\n          </span>\n        </div>\n      </AccordionHeading>\n    {/* </div> */}\n\n      {/* <div className={(props.showMonthlyChart ? \"monthlyWasteChart__accordionContent\"  + \" monthlyWasteChart__accordionContentOpening\" : \"displayNone\" + \" monthlyWasteChart__accordionContentClosing\")}> */}\n\n      <AccordionBody open={props.showMonthlyChart}>\n\n        <div className= { props.showDarkTheme ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem\": \"originalTheme__reportBackgroundColor addPaddingOfHalveRem\"}>\n\n          <div className=\"report-subtitle\">{props.siteName} </div>\n\n          <div\n            className=\"monthlyWasteChart__titleWrapper\"\n          >\n            <div className=\"section-title\">MONTHLY WASTE <div className=\"applyMarginRightAndLeft\">{props.showPounds? \"(£)\" : \"(Kg)\" }</div></div>\n          </div>\n\n          <div className=\"MonthlyWasteChart--spacing--secondRow\">\n\n\n            <div className=\"MonthlyWasteChart--spacing--secondRow--csp\">\n                <>\n              <div\n                style={{\n                  display: \"flex\",\n                  width: \"13%\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <div\n                  className={activeState.coverWaste ? \"active\" : \"inactive\"}\n                  id={1}\n                  onClick={() => {\n                    toggleActive(\"cover\");\n                  }}\n                >\n                </div>\n                <div\n                  className={activeState.spoliageWaste ? \"active\" : \"inactive\"}\n                  id={1}\n                  onClick={() => {\n                    toggleActive(\"spoliage\");\n                  }}\n                >\n                </div>\n                <div\n                  className={activeState.productionWaste ? \"active\" : \"inactive\"}\n                  id={1}\n                  onClick={() => {\n                    toggleActive(\"production\");\n                  }}\n                >\n                </div>\n                <div\n                  className={activeState.allWaste ? \"active\" : \"inactive\"}\n                  id={1}\n                  onClick={() => {\n                    toggleActive(\"all\");\n                  }}\n                >\n                </div>\n              </div>\n\n              <div>\n                <div className=\"monthlyWasteChart__dateLabel__CSP\">\n                  <div className=\"monthlyWasteChart__dateLabel__CSP__coverwastesSquare\"></div>\n                  COVER\n                  <div className=\"monthlyWasteChart__dateLabel__CSP__spoliageSquare\"></div>\n                  SPOILAGE\n                  <div className=\"monthlyWasteChart__dateLabel__CSP__preparationSquare\"></div>\n                  PREPARATION\n                </div>\n              </div>\n\n              </>\n\n            </div>\n            </div>\n\n\n          <div className=\"monthlyWasteChart--labelTrends--title\">\n            <div>\n              <div className=\"cooperHewittBold applyBlueTuckGreen\">Monthly Trend: {(appState.activeObject.name).toLowerCase()}</div>\n            </div>\n          </div>\n\n\n          <div className=\"monthlyWasteChart--labelTrends\">\n            {props.showPounds?\n              displayMonthlyTrends.map((data, i) => (\n                <div className=\"monthlyWasteChart--labelTrends__spacing\" key={i}>\n                  {data > 0 ? <div className=\"applyCooperHewittBold monthlyWasteChart--labelTrends__spacing\">{\"+\"}{(data * 2.775).toFixed(0)}</div>:\n\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor cooperHewittBold monthlyWasteChart--labelTrends__spacing\" :\"applyPurpleColor monthlyWasteChart--labelTrends__spacing\"}>\n                    {(data * 2.775).toFixed(0)}\n                  </div>}\n\n                </div>\n              )) :\n              displayMonthlyTrends.map((data, i) => (\n                <div className=\"monthlyWasteChart--labelTrends__spacing\" key={i}>\n                  {data > 0 ? <div className=\"applyCooperHewittBold monthlyWasteChart--labelTrends__spacing\">{\"+\"}{data}</div>:\n\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor cooperHewittBold monthlyWasteChart--labelTrends__spacing\" :\"applyPurpleColor monthlyWasteChart--labelTrends__spacing\"}>\n                    {data}\n                  </div>}\n                </div>\n              ))\n\n            }\n          </div>\n\n          <div className=\"monthlyWasteChart--labelTrends--title\">\n            <div>\n              <div className=\"cooperHewittBold applyBlueTuckGreen\">Monthly Waste:</div>\n            </div>\n          </div>\n\n          <Bar\n            data={{\n              labels: [\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n      ],\n              datasets: [\n                {\n                  label: \"coverWaste\",\n                  data: props.showPounds\n                  ? monthlyCoverWaste.map((data) => {\n                    return (data * 2.775).toFixed(0);\n                  }) : monthlyCoverWaste,\n                  fill: false,\n                  backgroundColor: \"rgba(140, 112, 140, 0.5)\",\n                  minBarLength: 0.3,\n                  barPercentage: 0.7,\n                  categoryPercentage: 0.7,\n                },\n                {\n                  label: \"spoilage\",\n                  data: props.showPounds\n                  ? monthlySpoilageWaste.map((data) => {\n                    return (data * 2.775).toFixed(0);\n                  }) : monthlySpoilageWaste,\n                  fill: false,\n                  backgroundColor: \"rgb(212, 190, 0)\",\n                  minBarLength: 0.3,\n                  barPercentage: 0.7,\n                  categoryPercentage: 0.7,\n                },\n                {\n                  label: \"preparation\",\n                  data: props.showPounds\n                  ? monthlyPreparationWaste.map((data) => {\n                    return (data * 2.775).toFixed(0);\n                  }) : monthlyPreparationWaste,\n                  fill: false,\n                  backgroundColor: \"rgba(133, 165, 101, 0.5)\",\n                  minBarLength: 0.3,\n                  barPercentage: 0.7,\n                  categoryPercentage: 0.7,\n                },\n              ],\n            }}\n            width={graphWidth}\n            height={graphHeight}\n            options={{\n              responsive: true,\n              maintainAspectRatio: true,\n              scales: {\n\n                xAxes: [\n                  {\n                    stacked: true,\n                    gridLines: {\n                      display: false,\n                    },\n                    ticks: {\n                      fontColor: \"rgb(15, 128, 140)\",\n                    },\n                    display: false,\n                  },\n                ],\n                yAxes: [\n                  {\n                    stacked: true,\n                    display: false,\n                    gridLines: {\n                      display: false,\n                    }\n                  },\n                ],\n              },\n\n              plugins: {\n                datalabels: {\n                  display: true,\n                  anchor: \"top\",\n                  align: \"middle\",\n                  color: monthlyWasteTextColor,\n                  font: {\n                          size: 9,\n                          weight: \"bold\",\n                        }\n                },\n              },\n            }}\n          />\n\n          <div\n            className=\"monthlyWasteChart--axisLabel\"\n          >\n            {months.map((data, i) => (\n              <div key={i}>{data}</div>\n            ))}\n          </div>\n\n          <div className=\"monthlyWasteChart__currentMonth applyBlueTuckGreen CSPFullLabelNameFontsize cooperHewittBold\">\n                <div className=\"applyMarginRightAndLeft cooperHewittBold applyGoldColor\">{\"(\" + (getEndDate()) + \")\"}</div>\n\n                  <div className=\"applyMarginRightAndLeft cooperHewittBold\">Current Month Food Waste</div>\n                  C\n\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor applyMarginRightAndLeft cooperHewittBold\" :\"applyPurpleColor applyMarginRightAndLeft cooperHewittBold\"}>\n                    {props.showPounds ? (coverWasteInCurrentMonth * 2.755).toFixed(0)  : roundedUpNumberAndTurnBackToNumber(coverWasteInCurrentMonth) }\n                  </div>\n\n                  <div className=\"applyMarginRightAndLeft cooperHewittBold\">+</div>\n\n                  S\n\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor applyMarginRightAndLeft cooperHewittBold\" :\"applyPurpleColor applyMarginRightAndLeft cooperHewittBold\"}>\n                    {props.showPounds ? (spoilageWasteInCurrentMonth * 2.755).toFixed(0)  : roundedUpNumberAndTurnBackToNumber(spoilageWasteInCurrentMonth) }\n                  </div>\n\n                  <div className=\"applyMarginRightAndLeft cooperHewittBold\">+</div>\n\n                  P\n\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor applyMarginRightAndLeft cooperHewittBold\" :\"applyPurpleColor applyMarginRightAndLeft cooperHewittBold\"}>\n                    {props.showPounds ? (preparationWasteInCurrentMonth * 2.755).toFixed(0)  : roundedUpNumberAndTurnBackToNumber(preparationWasteInCurrentMonth) }\n                  </div>\n\n                  <div className=\"applyMarginRightAndLeft cooperHewittBold\">=</div>\n\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor applyMarginRightAndLeft cooperHewittBold\" :\"applyPurpleColor applyMarginRightAndLeft cooperHewittBold\"}>\n                    {\" \"}\n                    {props.showPounds\n                    ? \"£\" + ((roundedUpNumberAndTurnBackToNumber(coverWasteInCurrentMonth) + roundedUpNumberAndTurnBackToNumber(spoilageWasteInCurrentMonth) + roundedUpNumberAndTurnBackToNumber(preparationWasteInCurrentMonth)) * 2.775).toFixed(0)\n                    : (roundedUpNumberAndTurnBackToNumber(coverWasteInCurrentMonth) + roundedUpNumberAndTurnBackToNumber(spoilageWasteInCurrentMonth) + roundedUpNumberAndTurnBackToNumber(preparationWasteInCurrentMonth)) + \"Kg\"}\n                  </div>\n\n              </div>\n\n          <div\n            className=\"monthlyWasteChart__headingSection--spacing\"\n          >\n\n          <div className=\"monthlyWasteChart__CspLabel\">\n            <div\n              className={activeState.coverWaste ? \"active\" : \"inactive\"}\n              id={1}\n              onClick={() => {\n                toggleActive(\"cover\");\n              }}\n            >\n\n              <Tooltip\n                open={tooltipIsOpen}\n                // onOpen={() => setTooltipIsOpen(true)}\n                onClose={() => setTooltipIsOpen(false)}\n                title=\"click on C, S or P waste stream\"\n                arrow\n              >\n\n              <h2 id={\"C\"}\n              onClick={handleMonthlyValues}\n                  className={activeState.coverWaste ? \"reduceOpacity\" : \"\"}\n              >\n                C\n              </h2>\n\n              </Tooltip>\n\n            </div>\n            <div\n              className={activeState.spoliageWaste ? \"active\" : \"inactive\"}\n              id={1}\n              onClick={() => {\n                toggleActive(\"spoliage\");\n              }}\n            >\n\n              <Tooltip\n                open={tooltipIsOpen}\n                // onOpen={() => setTooltipIsOpen(true)}\n                onClose={() => setTooltipIsOpen(false)}\n                // title=\"click on C, S or P waste stream\"\n                arrow\n              >\n\n              <h2 id={\"S\"}\n              onClick={handleMonthlyValues}\n                  className={activeState.spoliageWaste ? \"reduceOpacity\" : \"\"}\n              >\n                S\n              </h2>\n\n              </Tooltip>\n\n            </div>\n            <div\n              className={activeState.productionWaste ? \"active\" : \"inactive\"}\n              id={1}\n              onClick={() => {\n                toggleActive(\"production\");\n              }}\n            >\n\n              <Tooltip\n                open={tooltipIsOpen}\n                // onOpen={() => setTooltipIsOpen(true)}\n                onClose={() => setTooltipIsOpen(false)}\n                // title=\"click on C, S or P waste stream\"\n                arrow\n              >\n\n                <h2 id={\"P\"}\n                onClick={handleMonthlyValues}\n                    className={activeState.productionWaste ? \"reduceOpacity\" : \"\"}\n                >\n                  P\n                </h2>\n\n              </Tooltip>\n\n            </div>\n            <div\n              className={activeState.allWaste ? \"active\" : \"inactive\"}\n              id={1}\n              onClick={() => {\n                toggleActive(\"all\");\n              }}\n            >\n\n              <Tooltip\n                open={tooltipIsOpen}\n                // onOpen={() => setTooltipIsOpen(true)}\n                onClose={() => setTooltipIsOpen(false)}\n                // title=\"click on C, S or P waste stream\"\n                arrow\n              >\n\n                <h2 id={\"A\"}\n                onClick={handleMonthlyValues}\n                  className={activeState.allWaste ? \"reduceOpacity\" : \"\"}\n                >\n                  ALL\n                </h2>\n\n              </Tooltip>\n\n            </div>\n          </div>\n\n          <div className=\"section-title\">MONTHLY TREND</div>\n\n\n            <div className=\"section-title\">\n            </div>\n            <div className=\"section-title\">\n              <div className=\"applyMarginRightAndLeft\">Total Change</div>\n              <div className=\"applyPurpleColor\">\n                {props.showPounds ? (monthlyChanges.reduce(reducer) * 2.775).toFixed(0) : (monthlyChanges.reduce(reducer)).toFixed(0) }\n              </div>\n            </div>\n\n\n\n\n          </div>\n\n          <div\n          className=\"monthlyWasteChart__lineChart\"\n          style={{ position: \"relative\" }}>\n            <Bar\n              data={getChartData}\n              width={graphWidth}\n              height={graphHeight}\n              options={{\n                responsive: true,\n                maintainAspectRatio: true,\n                tooltips: {\n                  enabled: false,\n                },\n                legend: {\n                  display: false,\n                },\n                scales: {\n                  xAxes: [\n                    {\n                      display: true,\n                      gridLines: {\n                        display: false,\n                      },\n                      ticks: {\n                        fontColor: \"rgb(15, 128, 140)\",\n                        fontSize: xAxisLabel\n                      },\n                    },\n                  ],\n                  yAxes: [\n                    {\n                      display: false,\n                      gridLines: {},\n                    },\n                  ],\n                },\n                plugins: {\n                  datalabels: {\n                    display: true,\n                    anchor: \"bottom\",\n                    align: \"bottom\",\n                    color: function (context) {\n                          var index = context.dataIndex;\n                          var value = context.dataset.data[index];\n\n                          if (value > 0) {\n                            return \"rgba(255, 0, 0, 0.9)\";\n                          } else {\n                            if (props.showDarkTheme) {\n                              return \"rgb(255, 231, 227)\";\n                            } else {\n                              return \"rgba(133, 165, 101, 1)\";\n                            }\n\n                          }\n                    },\n                    font: {\n                          size: totalMonthlyValueFontSize,\n                          weight: 900,\n                        },\n                    formatter: function (value, context) {\n\n                      if (value > 0) {\n\n                      return `+ ${value}`\n                      } else {\n                      return value;\n                      }\n                    },\n                  },\n                },\n              }}\n            />\n          </div>\n\n        </div>\n\n      </AccordionBody>\n\n      {/* </div> */}\n\n    </div>\n  );\n}\n\n","import React, { createContext, useEffect, useState } from 'react'\n\nimport { getMonthsWord } from \"./../utilities.js\"\n\n\nexport const AiPredictionDataContext = createContext()\n\nconst AiPredictionDataContextProvider = props => {\n\n  const [ month, setMonthWaste ] = React.useState(\"\")\n\n  const [ aiPredictionsYearlyCoverWaste, setAiPredictionsYearlyCoverWaste ] = React.useState([])\n  const [ aiPredictionsYearlyPrepWaste, setAiPredictionsYearlyPrepWaste ] = React.useState([])\n  const [ aiPredictionsYearlySpoilageWaste, setAiPredictionsYearlySpoilageWaste ] = React.useState([])\n\n  const [ aiPredictionsMonthlyCoverWaste, setAiPredictionsMonthlyCoverWaste ] = React.useState([])\n  const [ aiPredictionsMonthlyPrepWaste, setAiPredictionsMonthlyPrepWaste ] = React.useState([])\n  const [ aiPredictionsMonthlySpoilageWaste, setAiPredictionsMonthlySpoilageWaste ] = React.useState([])\n\n  const [ aiPredictionsWeeklyCoverWaste, setAiPredictionsWeeklyCoverWaste ] = React.useState([])\n  const [ aiPredictionsWeeklyPrepWaste, setAiPredictionsWeeklyPrepWaste ] = React.useState([])\n  const [ aiPredictionsWeeklySpoilageWaste, setAiPredictionsWeeklySpoilageWaste ] = React.useState([])\n\n  const [ aiPredictionsDailyCoverWaste, setAiPredictionsDailyCoverWaste ] = React.useState([])\n  const [ aiPredictionsDailyPrepWaste, setAiPredictionsDailyPrepWaste ] = React.useState([])\n  const [ aiPredictionsDailySpoilageWaste, setAiPredictionsDailySpoilageWaste ] = React.useState([])\n\n  const [ aiPredictionsDisplayValueForCoverWaste, setAiPredictionsDisplayValueForCoverWaste ] = React.useState([])\n  const [ aiPredictionsDisplayValueForPrepWaste, setAiPredictionsDisplayValueForPrepWaste ] = React.useState([])\n  const [ aiPredictionsDisplayValueForSpoilageWaste, setAiPredictionsDisplayValueForSpoilageWaste ] = React.useState([])\n\n  const [aiPredictionsActiveState, aiPredictionsChangeActiveState] = useState({\n    monthlyForcasts: true,\n    weeklyForcasts: false,\n    dailyForcasts: false,\n    yearlyForcasts: false,\n  });\n\n  const [aiPredictionsAppState, aiPredictionsChangeState] = useState({\n    activeObject: {\n      id: 0,\n      val: \"monthlyFrocasts\",\n      name: \"Monthly\",\n    },\n    objects: [\n      { id: 0, val: \"monthlyFrocasts\", name: \"Monthly\" },\n      { id: 1, val: \"weeklyFrocasts\", name: \"Weekly\" },\n      { id: 2, val: \"dailyFrocasts\", name: \"Daily\" },\n      { id: 3, val: \"yearlyFrocasts\", name: \"Yearly\" },\n    ],\n  });\n\n\n  useEffect(() => {\n    // console.log(\"aiPredictionsData\", props.aiPredictionsData)\n    filterAiPredictionsData(props.aiPredictionsData)\n  },[props.aiPredictionsData])\n\n  function aiPredictionsToggleActive(type) {\n\n    switch (type) {\n      case \"monthlyForcasts\":\n\n        aiPredictionsChangeActiveState({\n          monthlyForcasts: true,\n          weeklyForcasts: false,\n          dailyForcasts: false,\n          yearlyForcasts: false,\n        });\n        aiPredictionsChangeState({ ...aiPredictionsAppState, activeObject: aiPredictionsAppState.objects[0] });\n\n        setAiPredictionsDisplayValueForCoverWaste(aiPredictionsMonthlyCoverWaste)\n        setAiPredictionsDisplayValueForPrepWaste(aiPredictionsMonthlyPrepWaste)\n        setAiPredictionsDisplayValueForSpoilageWaste(aiPredictionsMonthlySpoilageWaste)\n\n        break;\n      case \"weeklyForcasts\":\n\n        aiPredictionsChangeActiveState({\n          monthlyForcasts: false,\n          weeklyForcasts: true,\n          dailyForcasts: false,\n          yearlyForcasts: false,\n        });\n        aiPredictionsChangeState({ ...aiPredictionsAppState, activeObject: aiPredictionsAppState.objects[1] });\n\n        setAiPredictionsDisplayValueForCoverWaste(aiPredictionsWeeklyCoverWaste)\n        setAiPredictionsDisplayValueForPrepWaste(aiPredictionsWeeklyPrepWaste)\n        setAiPredictionsDisplayValueForSpoilageWaste(aiPredictionsWeeklySpoilageWaste)\n\n        break;\n      case \"dailyForcasts\":\n\n        aiPredictionsChangeActiveState({\n          monthlyForcasts: false,\n          weeklyForcasts: false,\n          dailyForcasts: true,\n          yearlyForcasts: false,\n        });\n        aiPredictionsChangeState({ ...aiPredictionsAppState, activeObject: aiPredictionsAppState.objects[2] });\n\n        setAiPredictionsDisplayValueForCoverWaste(aiPredictionsDailyCoverWaste)\n        setAiPredictionsDisplayValueForPrepWaste(aiPredictionsDailyPrepWaste)\n        setAiPredictionsDisplayValueForSpoilageWaste(aiPredictionsDailySpoilageWaste)\n\n        break;\n      case \"yearlyForcasts\":\n\n        aiPredictionsChangeActiveState({\n          monthlyForcasts: false,\n          weeklyForcasts: false,\n          dailyForcasts: false,\n          yearlyForcasts: true,\n        });\n        aiPredictionsChangeState({ ...aiPredictionsAppState, activeObject: aiPredictionsAppState.objects[3] });\n\n        setAiPredictionsDisplayValueForCoverWaste(aiPredictionsYearlyCoverWaste)\n        setAiPredictionsDisplayValueForPrepWaste(aiPredictionsYearlyPrepWaste)\n        setAiPredictionsDisplayValueForSpoilageWaste(aiPredictionsYearlySpoilageWaste)\n\n        break;\n      default:\n    }\n  }\n\n  const filterAiPredictionsData = (data) => {\n\n    aiPredictionsChangeActiveState({\n      monthlyForcasts: true,\n      weeklyForcasts: false,\n      dailyForcasts: false,\n      yearlyForcasts: false,\n    });\n\n    data.map((item) => {\n      setAiPredictionsYearlyCoverWaste(item.aiPrediction.yearlyForcastsBasedOnCurrentMonth.coverWaste)\n      setAiPredictionsYearlyPrepWaste(item.aiPrediction.yearlyForcastsBasedOnCurrentMonth.preparationWaste)\n      setAiPredictionsYearlySpoilageWaste(item.aiPrediction.yearlyForcastsBasedOnCurrentMonth.spoilageWaste)\n\n      setAiPredictionsMonthlyCoverWaste(item.aiPrediction.monthlyForcastsBasedOnCurrentMonth.coverWaste)\n      setAiPredictionsMonthlyPrepWaste(item.aiPrediction.monthlyForcastsBasedOnCurrentMonth.preparationWaste)\n      setAiPredictionsMonthlySpoilageWaste(item.aiPrediction.monthlyForcastsBasedOnCurrentMonth.spoilageWaste)\n\n      setAiPredictionsWeeklyCoverWaste(item.aiPrediction.weeklylyForcastsBasedOnCurrentMonth.coverWaste)\n      setAiPredictionsWeeklyPrepWaste(item.aiPrediction.weeklylyForcastsBasedOnCurrentMonth.preparationWaste)\n      setAiPredictionsWeeklySpoilageWaste(item.aiPrediction.weeklylyForcastsBasedOnCurrentMonth.spoilageWaste)\n\n      setAiPredictionsDailyCoverWaste(item.aiPrediction.dailyForcastsBasedOnCurrentMonth.coverWaste)\n      setAiPredictionsDailyPrepWaste(item.aiPrediction.dailyForcastsBasedOnCurrentMonth.preparationWaste)\n      setAiPredictionsDailySpoilageWaste(item.aiPrediction.dailyForcastsBasedOnCurrentMonth.spoilageWaste)\n\n      setAiPredictionsDisplayValueForCoverWaste(item.aiPrediction.monthlyForcastsBasedOnCurrentMonth.coverWaste)\n      setAiPredictionsDisplayValueForPrepWaste(item.aiPrediction.monthlyForcastsBasedOnCurrentMonth.preparationWaste)\n      setAiPredictionsDisplayValueForSpoilageWaste(item.aiPrediction.monthlyForcastsBasedOnCurrentMonth.spoilageWaste)\n      return \"\"\n    })\n\n    const month = getMonthsWord()\n    const monthInUpperCase = month.toUpperCase()\n    setMonthWaste(monthInUpperCase);\n  }\n\n  return (\n    <AiPredictionDataContext.Provider\n      value={{\n        aiPredictionsDisplayValueForCoverWaste,\n        aiPredictionsDisplayValueForPrepWaste,\n        aiPredictionsDisplayValueForSpoilageWaste,\n        aiPredictionsActiveState,\n        aiPredictionsToggleActive,\n        month,\n      }}\n    >\n      {props.children}\n    </AiPredictionDataContext.Provider>\n  )\n}\n\nexport default AiPredictionDataContextProvider","import React, { useContext, useEffect} from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chartjs-plugin-annotation\";\nimport \"chartjs-plugin-datalabels\";\n\nimport {\n  setItemInLocalStorage,\n} from \"../../../../utilities.js\";\n\nimport useWindowDimensions from \"../../libs/use-window-dimensions\";\n\nimport { AiPredictionDataContext } from \"../../../../contexts/ai-prediction-data-context\";\nimport { AccordionHeading, AccordionBody } from \"../accordion\"\n\nlet months = [\n  \"JAN\",\n  \"FEB\",\n  \"MAR\",\n  \"APR\",\n  \"MAY\",\n  \"JUNE\",\n  \"JULY\",\n  \"AUG\",\n  \"SEP\",\n  \"OCT\",\n  \"NOV\",\n  \"DEC\",\n];\n\nlet graphHeight = 65;\nlet graphWidth = 400;\nlet labelFont = 10;\nlet pointRadius = 5;\nlet layoutPadding = 20;\n\nconst getCoverData = (values, props) => {\n  const data = {\n    labels: months,\n    datasets: [\n      {\n        label: \"Ai Prediction\",\n        data: props.showPounds\n        ? values.map((item) => {\n            return (item * 2.775).toFixed(0);\n          }) :\n          values,\n        backgroundColor: \"rgba(153, 177, 165, 0)\",\n        barPercentage: 0.7,\n        categoryPercentage: 0.9,\n        lineTension: 0,\n        borderColor: 'rgba(140, 112, 140, 0.5)',\n        pointRadius: pointRadius,\n        pointBackgroundColor: 'rgba(140, 112, 140, 0.5)',\n      }\n    ],\n  };\n  return data;\n};\n\nconst getSpoilageData = (values, props) => {\n  const data = {\n    labels: months,\n    datasets: [\n      {\n        label: \"Ai Prediction\",\n        data: props.showPounds\n        ? values.map((item) => {\n            return (item * 2.775).toFixed(0);\n          }) :\n          values,\n        backgroundColor: \"rgba(153, 177, 165, 0)\",\n        barPercentage: 0.7,\n        categoryPercentage: 0.9,\n        lineTension: 0,\n        borderColor: '#ff8c00',\n        pointRadius: pointRadius,\n        pointBackgroundColor: '#ff8c00',\n      }\n    ],\n  };\n  return data;\n};\n\nconst getPreparationData = (values, props) => {\n  const data = {\n    labels: months,\n    datasets: [\n      {\n        label: \"Ai Prediction\",\n        data: props.showPounds\n        ? values.map((item) => {\n            return (item * 2.775).toFixed(0);\n          }) :\n          values,\n        backgroundColor: \"rgba(153, 177, 165, 0)\",\n        barPercentage: 0.7,\n        categoryPercentage: 0.9,\n        lineTension: 0,\n        borderColor: 'rgba(133, 165, 101, 0.5)',\n        pointRadius: pointRadius,\n        pointBackgroundColor: 'rgba(133, 165, 101, 0.5)',\n      }\n    ],\n  };\n  return data;\n};\n\nexport default function ProgressBar(props) {\n\n  const {\n    aiPredictionsDisplayValueForCoverWaste,\n    aiPredictionsDisplayValueForPrepWaste,\n    aiPredictionsDisplayValueForSpoilageWaste,\n    aiPredictionsActiveState,\n    aiPredictionsToggleActive,\n    month,\n  } = useContext(AiPredictionDataContext);\n\n\n  const [ coverWaste, setCoverWaste] = React.useState([])\n  const [ prepWaste, setPrepWaste ] = React.useState([])\n  const [ spoilageWaste, setSpoilageWaste ] = React.useState([])\n\n  useEffect(() => {\n\n    //the code breaks when switch to FOXCAFE and to pounds because it is changing from array to 0 only. expects array.\n    const coverWaste = aiPredictionsDisplayValueForCoverWaste === 0 ? [] : aiPredictionsDisplayValueForCoverWaste;\n    const prepWaste = aiPredictionsDisplayValueForPrepWaste === 0 ? [] : aiPredictionsDisplayValueForPrepWaste;\n    const spoilageWaste = aiPredictionsDisplayValueForSpoilageWaste === 0 ? [] : aiPredictionsDisplayValueForSpoilageWaste;\n\n    setCoverWaste(coverWaste)\n    setPrepWaste(prepWaste)\n    setSpoilageWaste(spoilageWaste)\n\n  }, [\n    aiPredictionsDisplayValueForCoverWaste,\n    aiPredictionsDisplayValueForPrepWaste,\n    aiPredictionsDisplayValueForSpoilageWaste,\n  ])\n\n  const { width } = useWindowDimensions();\n\n  if (width <= 700) {\n    graphWidth = 260;\n    graphHeight = 65;\n    labelFont = 8;\n    pointRadius = 3;\n    layoutPadding = 20;\n  }\n\n  return (\n    <>\n    {!props.hideReport &&\n    <>\n\n      <AccordionHeading>\n        <div className=\"section-title\">AI PREDICTIONS</div>\n        <div className=\"container\">\n          {props.aiPredictions ? (\n            <span onClick={() =>\n            {\n              props.setAiPredictions(!props.aiPredictions)\n              setItemInLocalStorage(\"showAiPredictions\", !props.aiPredictions)\n            }\n            }>X</span>\n          ) : (\n            <span onClick={() =>\n            {\n              props.setAiPredictions(!props.aiPredictions)\n              setItemInLocalStorage(\"showAiPredictions\", !props.aiPredictions)\n            }\n            }> | | | </span>\n          )}\n        </div>\n      </AccordionHeading>\n\n      <AccordionBody open={props.aiPredictions}>\n        <div className= { props.showDarkTheme ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem\": \"originalTheme__reportBackgroundColor addPaddingOfHalveRem\"}>\n\n          <div className=\"dashboard__aiPredictionsReportHeading\">\n            <div className=\"section-title\">AI PREDICTIONS\n              <div className=\"applyMarginRightAndLeft\">{props.showPounds? \"(£)\" : \"(Kg)\" }</div>\n            </div>\n          </div>\n\n            <div className=\"dashboard__aiPredictionsReport__headingWrapper\">\n              <div className=\"dashboard__aiPredictionsReport__subHeading marginRight\">WASTE PREDICTION FOR</div>\n              <div className=\"dashboard__aiPredictionsReport__timePeriodMenu\">\n                <h2\n                  className={aiPredictionsActiveState.yearlyForcasts ? \"active\" : \"inactive\"}\n                  id={0}\n                  onClick={() => {\n                    aiPredictionsToggleActive(\"yearlyForcasts\");\n                  }}\n                  >Yr</h2>\n                <h2\n                  className={aiPredictionsActiveState.monthlyForcasts ? \"active\" : \"inactive\"}\n                  id={1}\n                  onClick={() => {\n                    aiPredictionsToggleActive(\"monthlyForcasts\");\n                  }}\n                  >Mth</h2>\n                <h2\n                  className={aiPredictionsActiveState.weeklyForcasts ? \"active\" : \"inactive\"}\n                  id={2}\n                  onClick={() => {\n                    aiPredictionsToggleActive(\"weeklyForcasts\");\n                  }}\n                  >Wk</h2>\n                <h2\n                  className={aiPredictionsActiveState.dailyForcasts ? \"active\" : \"inactive\"}\n                  id={3}\n                  onClick={() => {\n                    aiPredictionsToggleActive(\"dailyForcasts\");\n                  }}\n                  >Dy</h2>\n              </div>\n              <div className=\"marginRight applyPurpleColor cooperHewittBold\">IN {month}</div>\n            </div>\n\n            <div className=\"dashboard__aiPredictionsReportWrapper\">\n\n              <div className=\"dashboard__aiPredictionsReport__height\">\n              <Line\n                data={getCoverData(coverWaste, props)}\n                width={graphWidth}\n                height={graphHeight}\n                options={{\n                  layout: {\n                      padding: {\n                          left: layoutPadding,\n                          right: layoutPadding,\n                          top: 30,\n                          bottom: 30\n                      }\n                  },\n                  responsive: true,\n                  maintainAspectRatio: true,\n                  tooltips: {\n                    enabled: false,\n                  },\n                  legend: {\n                    display: false,\n                  },\n                  scales: {\n                    xAxes: [\n                      {\n                        display: false,\n                        gridLines: {\n                          display: false,\n                        },\n                        ticks: {\n                          fontColor: \"rgb(15, 128, 140)\",\n                        },\n                      },\n                    ],\n                    yAxes: [\n                      {\n                        display: false,\n                        gridLines: {},\n                        ticks: {\n                          maxTicksLimit: 1,\n                          beginAtZero: true,\n                        },\n                      },\n                    ],\n                  },\n                  plugins: {\n                    datalabels: {\n                      display: true,\n                      anchor: \"top\",\n                      align: \"top\",\n                      font: {\n                        size: labelFont,\n                        weight: 600,\n                      },\n                      color: function (context) {\n                          var index = context.dataIndex;\n                          var value = context.dataset.data[index];\n\n                            if (props.showPounds) {\n\n                              let prevValue = coverWaste[index - 1] * 2.775\n                              if (value > prevValue) {\n                                return \"rgba(255, 0, 0, 0.9)\"\n                              } else {\n                                // return \"rgba(140, 112, 140, 1)\"\n\n                                if (props.showDarkTheme) {\n                                  return \"rgb(255, 231, 227)\";\n                                } else {\n                                  return \"rgba(133, 165, 101, 1)\";\n                                }\n\n                              }\n\n                            } else {\n                                if (value > coverWaste[index - 1]) {\n                                  return \"rgba(255, 0, 0, 0.9)\"\n                                } else {\n                                  // return \"rgba(140, 112, 140, 1)\"\n\n                                  if (props.showDarkTheme) {\n                                  return \"rgb(255, 231, 227)\";\n                                  } else {\n                                    return \"rgba(133, 165, 101, 1)\";\n                                  }\n\n                                }\n                            }\n\n                      },\n                    },\n                  },\n                }}\n              />\n            </div>\n\n            <div className=\"dashboard__aiPredictionsReport__height\">\n              <Line\n                data={getSpoilageData(spoilageWaste, props)}\n                width={graphWidth}\n                height={graphHeight}\n                options={{\n                  layout: {\n                      padding: {\n                          left: layoutPadding,\n                          right: layoutPadding,\n                          top: 30,\n                          bottom: 30\n                      }\n                  },\n                  responsive: true,\n                  maintainAspectRatio: true,\n                  tooltips: {\n                    enabled: false,\n                  },\n                  legend: {\n                    display: false,\n                  },\n                  scales: {\n                    xAxes: [\n                      {\n                        display: false,\n                        gridLines: {\n                          display: false,\n                        },\n                        ticks: {\n                          fontColor: \"rgb(15, 128, 140)\",\n                        },\n                      },\n                    ],\n                    yAxes: [\n                      {\n                        display: false,\n                        gridLines: {},\n                        ticks: {\n                          maxTicksLimit: 1,\n                          beginAtZero: true,\n                        },\n                      },\n                    ],\n                  },\n                  plugins: {\n                    datalabels: {\n                      display: true,\n                      anchor: \"top\",\n                      align: \"top\",\n                      font: {\n                        size: labelFont,\n                        weight: 600,\n                      },\n                      color: function (context) {\n                            var index = context.dataIndex;\n                            var value = context.dataset.data[index];\n\n                            if (props.showPounds) {\n\n                              let prevValue = spoilageWaste[index - 1] * 2.775\n                              if (value > prevValue) {\n                                return \"rgba(255, 0, 0, 0.9)\"\n                              } else {\n\n                                // return \"rgba(140, 112, 140, 1)\"\n\n                                if (props.showDarkTheme) {\n                                return \"rgb(255, 231, 227)\";\n                                } else {\n                                  return \"rgba(133, 165, 101, 1)\";\n                                }\n\n\n                              }\n\n                            } else {\n                              if (value > spoilageWaste[index - 1]) {\n                                return \"rgba(255, 0, 0, 0.9)\"\n                              } else {\n\n                                // return \"rgba(140, 112, 140, 1)\"\n\n\n                                if (props.showDarkTheme) {\n                                return \"rgb(255, 231, 227)\";\n                                } else {\n                                  return \"rgba(133, 165, 101, 1)\";\n                                }\n\n                              }\n                            }\n                      },\n                    },\n                  },\n                }}\n              />\n            </div>\n\n            <div className=\"dashboard__aiPredictionsReport__height\">\n              <Line\n                data={getPreparationData(prepWaste, props)}\n                width={graphWidth}\n                height={graphHeight}\n                options={{\n                  layout: {\n                      padding: {\n                          left: layoutPadding,\n                          right: layoutPadding,\n                          top: 30,\n                          bottom: 30\n                      }\n                  },\n                  responsive: true,\n                  maintainAspectRatio: true,\n                  tooltips: {\n                    enabled: false,\n                  },\n                  legend: {\n                    display: false,\n                  },\n                  scales: {\n                    xAxes: [\n                      {\n                        display: false,\n                        gridLines: {\n                          display: false,\n                        },\n                        ticks: {\n                          fontColor: \"rgb(15, 128, 140)\",\n                        },\n                      },\n                    ],\n                    yAxes: [\n                      {\n                        display: false,\n                        gridLines: {},\n                        ticks: {\n                          maxTicksLimit: 1,\n                          beginAtZero: true,\n                        },\n                      },\n                    ],\n                  },\n                  plugins: {\n                    datalabels: {\n                      display: true,\n                      anchor: \"top\",\n                      align: \"top\",\n                      font: {\n                        size: labelFont,\n                        weight: 600,\n                      },\n                      color: function (context) {\n                            var index = context.dataIndex;\n                            var value = context.dataset.data[index];\n\n                            if (props.showPounds) {\n\n                              let prevValue = prepWaste[index - 1] * 2.775\n                              if (value > prevValue) {\n                                return \"rgba(255, 0, 0, 0.9)\"\n                              } else {\n                                // return \"rgba(140, 112, 140, 1)\"\n\n\n                                if (props.showDarkTheme) {\n                                return \"rgb(255, 231, 227)\";\n                                } else {\n                                  return \"rgba(133, 165, 101, 1)\";\n                                }\n\n                              }\n\n                              } else {\n                              if (value > prepWaste[index - 1]) {\n                                return \"rgba(255, 0, 0, 0.9)\"\n                              } else {\n                                // return \"rgba(140, 112, 140, 1)\"\n\n\n                                if (props.showDarkTheme) {\n                                return \"rgb(255, 231, 227)\";\n                                } else {\n                                  return \"rgba(133, 165, 101, 1)\";\n                                }\n\n                              }\n                            }\n\n\n                      },\n                    },\n                  },\n                }}\n              />\n            </div>\n\n\n            <div className=\"dashboard__aiPredictionsReport__axisLabel\">\n              {months.map((data, i) => (\n                <div key={i}>{data}</div>\n              ))}\n            </div>\n\n            <div>\n              <div className=\"dashboard__aiPredictionsReport__dateLabel__CSP\">\n                <div className=\"dashboard__aiPredictionsReport__dateLabel__CSP__coverwastesSquare\"></div>\n                COVER\n                <div className=\"dashboard__aiPredictionsReport__dateLabel__CSP__spoliageSquare\"></div>\n                SPOILAGE\n                <div className=\"dashboard__aiPredictionsReport__dateLabel__CSP__preparationSquare\"></div>\n                PREPARATION\n              </div>\n\n              <div className=\"graph__row\">\n              <div className=\"graph__message\">\n                (Updated every Sunday)\n              </div>\n              </div>\n\n            </div>\n\n\n\n\n            </div>\n\n        </div>\n      </AccordionBody>\n\n    </>\n    }\n    </>\n\n\n  );\n}\n","import React, { createContext, useEffect, useState } from 'react'\nimport {\n  getMonths,\n  roundedUpNumberAndTurnBackToNumber\n} from \"../utilities.js\"\n\nexport const TargetContext = createContext()\n\n\nconst TargetContextProvider = props => {\n\n    const [ targetsAndImpact, setTargetsAndImpact ] = React.useState({\n        targets: 0,\n        monthlyCoverWasteTarget: 0,\n        monthlyPrepWasteTarget: 0,\n        monthlySpoilageWasteTarget: 0,\n        mealsSavings: 0,\n        co2Reduction: 0,\n        moneySavings: 0,\n        totalMonthlyForecasts: 0,\n        totalShortFall: 0,\n        coverWasteShortFall: 0,\n        prepWasteShortFall: 0,\n        spoilageWasteShortFall: 0,\n        targetIsRealistic: 0,\n        percentaged: 0\n    })\n\n    const [ prevMonthWaste, setPrevMonthWaste ] = React.useState(0)\n\n    const [ showPercentagedWarning , setShowPercentagedWarning] = React.useState(false)\n\n    const labels = [\"Yearly\", \"Weekly\", \"Daily\", \"Monthly\"]\n    const [ label, setLabel] = React.useState(null)\n\n    const [ percent, setPercent] = React.useState(0)\n\n    const [activeState, changeActiveState] = useState({\n        monthlyTargets: true,\n        weeklyTargets: false,\n        dailyTargets: false,\n        yearlyTargets: false,\n    });\n\n    const [ dailyCoverWaste, setDailyCoverWaste] = React.useState([0])\n    const [ dailyPrepWaste, setDailyPrepWaste] = React.useState([0])\n    const [ dailySpoilageWaste, setDailySpoilageWaste] = React.useState([0])\n\n    const [ monthlyCoverWaste, setMonthlyCoverWaste] = React.useState([0])\n    const [ monthlyPrepWaste, setMonthlyPrepWaste] = React.useState([0])\n    const [ monthlySpoilageWaste, setMonthlySpoilageWaste] = React.useState([0])\n\n    const [ weeklyCoverWaste, setWeeklyCoverWaste] = React.useState([0])\n    const [ weeklyPrepWaste, setWeeklyPrepWaste] = React.useState([0])\n    const [ weeklySpoilageWaste, setWeeklySpoilageWaste] = React.useState([0])\n\n    const [ yearlyCoverWaste, setYearlyCoverWaste] = React.useState([0])\n    const [ yearlyPrepWaste, setYearlyPrepWaste] = React.useState([0])\n    const [ yearlySpoilageWaste, setYearlySpoilageWaste] = React.useState([0])\n\n\n    useEffect(() => {\n\n          changeActiveState({\n            monthlyTargets: true,\n            weeklyTargets: false,\n            dailyTargets: false,\n            yearlyTargets: false,\n          });\n\n          // console.log(\"props.recommendedTargets\",props.recommendedTargets)\n\n          if (props.recommendedTargets.length > 0 && props.aiPredictionsData.length > 0) {\n            let percentaged;\n            let cw;\n            let pw;\n            let sw;\n\n            props.recommendedTargets.map((data) => {\n                const percentagedAsString = data.recommendedTargets.targets.percents\n                percentaged = parseInt(percentagedAsString) / 100\n                return \"\"\n            });\n\n            setPercent(percentaged)\n\n            // console.log(\"percentaged\",percentaged)\n            // console.log(\"aiPredictionsData\", props.aiPredictionsData)\n\n            props.aiPredictionsData.map((data) => {\n\n                cw = data.aiPrediction.monthlyForcastsBasedOnCurrentMonth.coverWaste\n                pw = data.aiPrediction.monthlyForcastsBasedOnCurrentMonth.preparationWaste\n                sw = data.aiPrediction.monthlyForcastsBasedOnCurrentMonth.spoilageWaste\n\n                setDailyCoverWaste(data.aiPrediction.dailyForcastsBasedOnCurrentMonth.coverWaste)\n                setDailyPrepWaste(data.aiPrediction.dailyForcastsBasedOnCurrentMonth.preparationWaste)\n                setDailySpoilageWaste(data.aiPrediction.dailyForcastsBasedOnCurrentMonth.spoilageWaste)\n\n                setMonthlyCoverWaste(data.aiPrediction.monthlyForcastsBasedOnCurrentMonth.coverWaste)\n                setMonthlyPrepWaste(data.aiPrediction.monthlyForcastsBasedOnCurrentMonth.preparationWaste)\n                setMonthlySpoilageWaste(data.aiPrediction.monthlyForcastsBasedOnCurrentMonth.spoilageWaste)\n\n                setWeeklyCoverWaste(data.aiPrediction.weeklylyForcastsBasedOnCurrentMonth.coverWaste)\n                setWeeklyPrepWaste(data.aiPrediction.weeklylyForcastsBasedOnCurrentMonth.preparationWaste)\n                setWeeklySpoilageWaste(data.aiPrediction.weeklylyForcastsBasedOnCurrentMonth.spoilageWaste)\n\n                setYearlyCoverWaste(data.aiPrediction.yearlyForcastsBasedOnCurrentMonth.coverWaste)\n                setYearlyPrepWaste(data.aiPrediction.yearlyForcastsBasedOnCurrentMonth.preparationWaste)\n                setYearlySpoilageWaste(data.aiPrediction.yearlyForcastsBasedOnCurrentMonth.spoilageWaste)\n                return \"\"\n            });\n\n            const getTargetsAndImpact = calculateTargetsAndImpact(cw, pw, sw, percentaged);\n            setTargetsAndImpact(getTargetsAndImpact)\n\n            const monthNumber = getMonths();\n            const prevMonthIndex = monthNumber - 1;\n\n            const previousMonthCoverWaste =  props.currentMonthCoverWasteArray[prevMonthIndex]\n            const previousMonthPrepWaste =  props.currentMonthPrepWasteArray[prevMonthIndex]\n            const previousMonthSpoilageWaste =  props.currentMonthSpoilageWasteArray[prevMonthIndex]\n            const totalPreviousMonthsWaste = previousMonthCoverWaste + previousMonthPrepWaste + previousMonthSpoilageWaste\n            setPrevMonthWaste(totalPreviousMonthsWaste)\n\n            if (percentaged > 0.3) {\n                setShowPercentagedWarning(true)\n            } else {\n                setShowPercentagedWarning(false)\n            }\n\n            setLabel(labels[3])\n        }\n                // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[\n        props.aiPredictionsData,\n        props.recommendedTargets,\n        props.currentMonthCoverWasteArray,\n        props.currentMonthPrepWasteArray,\n        props.currentMonthSpoilageWasteArray\n    ])\n\n    const calculateTargetsAndImpact = (cover, prep, spoilage, percent) => {\n\n        // console.log(\"ai cover array\",cover)\n        // console.log(\"ai prep array\",prep)\n        // console.log(\"ai spoilage array\",spoilage)\n        // console.log(\"percent from recommendedTargets\",percent)\n\n        const monthIndex = cover.length - 1;\n\n        let percentaged = isNaN(percent) ? 0 : percent;\n\n        const coverWaste = cover[monthIndex] ? cover[monthIndex] : 0;\n        const prepWaste = prep[monthIndex] ? prep[monthIndex] : 0;\n        const spoilageWaste = spoilage[monthIndex] ? spoilage[monthIndex] : 0;\n\n        // console.log(\"current month ai prediction cover\",cover[monthIndex])\n        // console.log(\"current month ai prediction prep\",prep[monthIndex])\n        // console.log(\"current month ai prediction spoilage\",spoilage[monthIndex])\n\n        const totalMonthlyForecasts = coverWaste + prepWaste + spoilageWaste\n        // console.log(\"current month ai prediction spoilage for ALL\",totalMonthlyForecasts)\n\n        const savings = parseInt(totalMonthlyForecasts * percentaged)\n        // console.log(\"percentaged savings from ai prediction for all\",savings)\n\n        const targets = totalMonthlyForecasts - savings;\n        // console.log(\"targets for this month to achieve the percentaged savings\", targets)\n\n        // console.log(\"totalMonthlyForecasts\",totalMonthlyForecasts)\n        // console.log(\"savings\",savings)\n        // console.log(\"targets\",targets)\n\n        const coverWastePercentagedSavings = coverWaste * percentaged;\n        const prepWastePercentagedSavings = prepWaste * percentaged;\n        const spoilageWastePercentagedSavings = spoilageWaste * percentaged;\n\n        const monthlyCoverWasteTarget = coverWaste- coverWastePercentagedSavings\n        const monthlyPrepWasteTarget = prepWaste - prepWastePercentagedSavings\n        const monthlySpoilageWasteTarget = spoilageWaste - spoilageWastePercentagedSavings\n\n        const totalTarget = roundedUpNumberAndTurnBackToNumber(monthlyCoverWasteTarget + monthlyPrepWasteTarget + monthlySpoilageWasteTarget)\n\n        // console.log(\"totalTarget\",totalTarget)\n\n        const coverWasteShortFall = roundedUpNumberAndTurnBackToNumber(monthlyCoverWasteTarget - coverWaste)\n        const prepWasteShortFall = roundedUpNumberAndTurnBackToNumber(monthlyPrepWasteTarget - prepWaste)\n        const spoilageWasteShortFall = roundedUpNumberAndTurnBackToNumber(monthlySpoilageWasteTarget - spoilageWaste)\n        const totalShortFall = roundedUpNumberAndTurnBackToNumber(coverWasteShortFall + prepWasteShortFall + spoilageWasteShortFall)\n\n        const carbonMunicipalValue = parseFloat(props.carbonMunicipalValue);\n\n        const mealsSavings = roundedUpNumberAndTurnBackToNumber(savings / 0.36)\n        const co2Reduction = roundedUpNumberAndTurnBackToNumber(savings * carbonMunicipalValue)\n        const moneySavings = roundedUpNumberAndTurnBackToNumber(savings * 2.775)\n\n        const differencesBetweenTargetAndForcastedWaste = totalTarget - totalMonthlyForecasts\n\n        let targetIsRealistic;\n\n        if (differencesBetweenTargetAndForcastedWaste < 0) {\n          targetIsRealistic = false\n        } else {\n          targetIsRealistic = true\n        }\n\n        const data = {\n          targets: targets,\n          monthlyCoverWasteTarget: monthlyCoverWasteTarget,\n          monthlyPrepWasteTarget: monthlyPrepWasteTarget,\n          monthlySpoilageWasteTarget: monthlySpoilageWasteTarget,\n          mealsSavings: mealsSavings,\n          co2Reduction: co2Reduction,\n          moneySavings: moneySavings,\n          percentaged: percentaged,\n          totalMonthlyForecasts: totalMonthlyForecasts,\n          totalShortFall: totalShortFall,\n          coverWasteShortFall: coverWasteShortFall,\n          prepWasteShortFall: prepWasteShortFall,\n          spoilageWasteShortFall: spoilageWasteShortFall,\n          targetIsRealistic: targetIsRealistic\n        }\n\n        return data\n    }\n\n    function toggleActive(type) {\n        switch (type) {\n          case \"monthlyTargets\":\n            changeActiveState({\n              monthlyTargets: true,\n              weeklyTargets: false,\n              dailyTargets: false,\n              yearlyTargets: false,\n            });\n\n            let getMonthlyTargetsAndImpact = calculateTargetsAndImpact(monthlyCoverWaste,monthlyPrepWaste, monthlySpoilageWaste, percent)\n            setTargetsAndImpact(getMonthlyTargetsAndImpact)\n\n            setLabel(labels[3])\n\n            break;\n          case \"weeklyTargets\":\n            changeActiveState({\n              monthlyTargets: false,\n              weeklyTargets: true,\n              dailyTargets: false,\n              yearlyTargets: false,\n            });\n\n            let getWeeklyTargetsAndImpact = calculateTargetsAndImpact(weeklyCoverWaste,weeklyPrepWaste, weeklySpoilageWaste, percent)\n            setTargetsAndImpact(getWeeklyTargetsAndImpact)\n\n            setLabel(labels[1])\n\n            break;\n          case \"dailyTargets\":\n            changeActiveState({\n              monthlyTargets: false,\n              weeklyTargets: false,\n              dailyTargets: true,\n              yearlyTargets: false,\n            });\n\n            let getDailyTargetsAndImpact = calculateTargetsAndImpact(dailyCoverWaste,dailyPrepWaste, dailySpoilageWaste, percent)\n            setTargetsAndImpact(getDailyTargetsAndImpact)\n\n            setLabel(labels[2])\n\n            break;\n          case \"yearlyTargets\":\n            changeActiveState({\n              monthlyTargets: false,\n              weeklyTargets: false,\n              dailyTargets: false,\n              yearlyTargets: true,\n            });\n\n            let getYearlyTargetsAndImpact = calculateTargetsAndImpact(yearlyCoverWaste,yearlyPrepWaste, yearlySpoilageWaste, percent)\n            setTargetsAndImpact(getYearlyTargetsAndImpact)\n\n            setLabel(labels[0])\n\n            break;\n          default:\n        }\n      }\n\n    return (\n        <TargetContext.Provider\n        value={{\n            targetsAndImpact,\n            prevMonthWaste,\n            showPercentagedWarning,\n            label,\n            toggleActive,\n            activeState\n        }}\n        >\n        {props.children}\n        </TargetContext.Provider>\n    )\n}\n\nexport default TargetContextProvider\n","import React, {useContext} from \"react\";\nimport {\n  setItemInLocalStorage,\n  roundedUpNumberAndTurnBackToNumber,\n  getCurrentAndPreviousMonths\n} from \"../../../../utilities.js\";\n\nimport meals from \"../../../../image/meals.svg\";\nimport  co2  from \"../../../../image/co2.svg\";\nimport  money  from \"../../../../image/money.svg\";\n\nimport { TargetContext } from \"../../../../contexts/target-context\";\n\nimport { AccordionHeading, AccordionBody } from \"../accordion\"\n\nconst currentAndPreviousMonths = getCurrentAndPreviousMonths()\n\nexport default function ProgressBar({\n  setFoodWasteTargetSavings,\n  foodWasteTargetSavings,\n  showDarkTheme,\n  hideReport\n}) {\n\n   const {\n    targetsAndImpact,\n    prevMonthWaste,\n    showPercentagedWarning,\n    label,\n    activeState,\n    toggleActive,\n   } = useContext(TargetContext);\n\n  //  console.log(\"targetsAndImpact\",targetsAndImpact)\n  //  console.log(\"prevMonthWaste\",prevMonthWaste)\n  //  console.log(\"showPercentagedWarning\",showPercentagedWarning)\n  //  console.log(\"label\",label)\n  //  console.log(\"activeState\",activeState)\n  //  console.log(\"toggleActive\",toggleActive)\n\n\n  return (\n    <>\n      {!hideReport &&\n        <>\n          <AccordionHeading>\n            <div className=\"section-title\">FOOD WASTE TARGET</div>\n            <div className=\"container\">\n              {foodWasteTargetSavings ? (\n                <span onClick={() =>\n                {\n                  setFoodWasteTargetSavings(!foodWasteTargetSavings)\n                  setItemInLocalStorage(\"showFoodWasteTargetSavings\", !foodWasteTargetSavings)\n                }\n                }>X</span>\n              ) : (\n                <span onClick={() =>\n                {\n                  setFoodWasteTargetSavings(!foodWasteTargetSavings)\n                  setItemInLocalStorage(\"showFoodWasteTargetSavings\", !foodWasteTargetSavings)\n                }\n                }> | | | </span>\n              )}\n            </div>\n          </AccordionHeading>\n\n          <AccordionBody open={foodWasteTargetSavings}>\n            <div className= { showDarkTheme ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem\": \"originalTheme__reportBackgroundColor addPaddingOfHalveRem\"}>\n\n              <div className=\"dashboard__targetsMenu\">\n                <div className=\"foodWasteTrackingProgress__timePeriodHeading\">TIME PERIOD</div>\n                <h2\n                  className={activeState.yearlyTargets ? \"active\" : \"inactive\"}\n                  id={0}\n                  onClick={() => {\n                    toggleActive(\"yearlyTargets\");\n                  }}\n                  >Yr</h2>\n                <h2\n                  className={activeState.monthlyTargets ? \"active\" : \"inactive\"}\n                  id={1}\n                  onClick={() => {\n                    toggleActive(\"monthlyTargets\");\n                  }}\n                  >Mth</h2>\n                <h2\n                  className={activeState.weeklyTargets ? \"active\" : \"inactive\"}\n                  id={2}\n                  onClick={() => {\n                    toggleActive(\"weeklyTargets\");\n                  }}\n                  >Wk</h2>\n                <h2\n                  className={activeState.dailyTargets ? \"active\" : \"inactive\"}\n                  id={3}\n                  onClick={() => {\n                    toggleActive(\"dailyTargets\");\n                  }}\n                  >Dy</h2>\n              </div>\n\n              <div className=\"dashboard__foodWasteTrackingProgressBarWrapper\">\n\n                <div className=\"foodWasteTrackingProgress__section\">\n                    <div className=\"foodWasteTrackingProgress__progressBar__wrapper\">\n\n                          <div className=\"foodWasteTrackingProgress__waste foodWasteTrackingProgress__waste--marginBottom\">\n\n                            <div className=\"foodWasteTrackingProgress__subheading foodWasteTrackingProgress__flexBasis__month\">\n                              <div className=\"cooperHewittBold applyPurpleColor\">\n                                {currentAndPreviousMonths.previousMonth}\n                              </div>\n\n                            </div>\n\n                            <div className=\"cooperHewittBold applyBlueTuckGreen foodWasteTrackingProgress__wasteValues foodWasteTrackingProgress__flexBasis__label\">\n                                Total\n                            </div>\n\n                            <div className={showDarkTheme? \"darkTheme__numberColor foodWasteTrackingProgress__wasteValues cooperHewittBold foodWasteTrackingProgress__flexBasis__kgOrPounds\" :\"foodWasteTrackingProgress__wasteValues cooperHewittBold applyBlueTuckGreen foodWasteTrackingProgress__flexBasis__kgOrPounds\"}>\n                              {prevMonthWaste} Kg CSP\n                            </div>\n\n                          </div>\n\n                    </div>\n                  </div>\n\n                  <div className=\"foodWasteTrackingProgress__section\">\n                    <div className=\"foodWasteTrackingProgress__progressBar__wrapper\">\n\n                          <div className=\"foodWasteTrackingProgress__targets\">\n                            <div className=\"foodWasteTrackingProgress__subheading cooperHewittBold applyPurpleColor foodWasteTrackingProgress__flexBasis__month\">\n                              {currentAndPreviousMonths.currentMonth}\n                            </div>\n\n                            <div className=\"foodWasteTrackingProgress__wasteValues cooperHewittBold applyBlueTuckGreen foodWasteTrackingProgress__flexBasis__label\">\n                            Target\n                            </div>\n\n                            <div className={showDarkTheme? \"darkTheme__numberColor foodWasteTrackingProgress__wasteValues cooperHewittBold foodWasteTrackingProgress__flexBasis__kgOrPounds\" :\"foodWasteTrackingProgress__wasteValues cooperHewittBold applyBlueTuckGreen foodWasteTrackingProgress__flexBasis__kgOrPounds\"}>\n                              {targetsAndImpact.targets} kg CSP\n                            </div>\n\n                          </div>\n\n                    </div>\n                  </div>\n\n\n                  <div className=\"foodWasteTrackingProgress__section\">\n                    <div className=\"foodWasteTrackingProgress__progressBar__wrapper\">\n\n                      <div className=\"foodWasteTrackingProgress__flexBasis__month\">\n                      </div>\n\n                      <div className={showDarkTheme? \"darkTheme__numberColor foodWasteTrackingProgress__styling cooperHewittBold foodWasteTrackingProgress__flexBasis__percentaged\" :\"foodWasteTrackingProgress__styling cooperHewittBold applyBlueTuckGreen foodWasteTrackingProgress__flexBasis__percentaged\"}>\n                        {targetsAndImpact.percentaged * 100} % reduction\n                      </div>\n\n                      <div className={showDarkTheme? \"darkTheme__numberColor foodWasteTrackingProgress__styling cooperHewittBold displayFlex\" :\"foodWasteTrackingProgress__styling cooperHewittBold applyBlueTuckGreen displayFlex\"}>\n\n                        <div className=\"applyPurpleColor cooperHewittBold applyMarginRightAndLeft\">(\n                        C</div> {roundedUpNumberAndTurnBackToNumber(targetsAndImpact.monthlyCoverWasteTarget)} kg +\n\n                        <div className=\"applyPurpleColor cooperHewittBold applyMarginRightAndLeft\">\n                        S</div> {roundedUpNumberAndTurnBackToNumber(targetsAndImpact.monthlySpoilageWasteTarget)} kg +\n\n                        <div className=\"applyPurpleColor cooperHewittBold applyMarginRightAndLeft\">\n                        P</div> {roundedUpNumberAndTurnBackToNumber(targetsAndImpact.monthlyPrepWasteTarget)} kg)\n\n                      </div>\n\n\n                    </div>\n                  </div>\n\n                  <div className=\"foodWasteTrackingProgress__section\">\n                    <div className=\"foodWasteTrackingProgress__flexBasis__month\">\n                    </div>\n                    <div className=\"showRedColor foodWasteTrackingProgress__warningFontSize cooperHewittBold\">{showPercentagedWarning ? `Targets may not be achievable as AI predictions are ${targetsAndImpact.percentaged * 100} % than what is expected`: \"\"}</div>\n                  </div>\n\n                  <div className=\"foodWasteTrackingProgress__section\">\n                    <div className=\"foodWasteTrackingProgress__progressBar__wrapper\">\n\n                          <div className=\"foodWasteTrackingProgress__targets\">\n                            <div className=\"foodWasteTrackingProgress__subheading cooperHewittBold applyPurpleColor foodWasteTrackingProgress__flexBasis__month\">\n                              AI predicted\n                            </div>\n\n                            <div className={showDarkTheme? \"darkTheme__numberColor foodWasteTrackingProgress__wasteValues cooperHewittBold foodWasteTrackingProgress__flexBasis__kgOrPounds\" :\"foodWasteTrackingProgress__wasteValues cooperHewittBold applyBlueTuckGreen foodWasteTrackingProgress__flexBasis__kgOrPounds\"}>\n                              {targetsAndImpact.totalMonthlyForecasts} Kg\n                            </div>\n\n                            <div className={showDarkTheme? \"darkTheme__numberColor foodWasteTrackingProgress__styling cooperHewittBold displayFlex\" :\"foodWasteTrackingProgress__styling cooperHewittBold applyBlueTuckGreen displayFlex\"}>\n                              <div className={showDarkTheme? \"darkTheme__numberColor cooperHewittBold\" : \"applyPurpleColor cooperHewittBold applyMarginRightAndLeft\"}>{targetsAndImpact.totalShortFall} kg =</div>\n                              <div className=\"applyPurpleColor cooperHewittBold applyMarginRightAndLeft\">(\n                              C</div> {roundedUpNumberAndTurnBackToNumber(targetsAndImpact.coverWasteShortFall)} kg + <div className=\"applyPurpleColor cooperHewittBold applyMarginRightAndLeft\">\n                              S</div> {roundedUpNumberAndTurnBackToNumber(targetsAndImpact.spoilageWasteShortFall)} kg + <div className=\"applyPurpleColor cooperHewittBold applyMarginRightAndLeft\">\n                              P</div> {roundedUpNumberAndTurnBackToNumber(targetsAndImpact.prepWasteShortFall)} kg)\n                            </div>\n\n\n                          </div>\n\n                    </div>\n                  </div>\n\n                  <div className=\"foodWasteTrackingProgress__section\">\n                    <div className=\"foodWasteTrackingProgress__flexBasis__month\">\n                    </div>\n                    <div className=\"showRedColor foodWasteTrackingProgress__warningFontSize cooperHewittBold\">{targetsAndImpact.targetIsRealistic ? \"\" : \"Targets are not actionable, please reduce waste behaviour!\"}</div>\n                  </div>\n\n\n\n                  <div className=\"foodWasteTrackingProgress__section\">\n                    <div className=\"foodWasteTrackingProgress__impact\">\n\n                          <div className=\"foodWasteTrackingProgress__styling cooperHewittBold applyPurpleColor\">\n                            {label} Target Savings\n                          </div>\n\n                          <div className=\"foodWasteTrackingProgress__savingTargets\">\n\n\n                            <div className=\"foodWasteTrackingProgress__styling cooperHewittBold \">\n                              <div className=\"foodWasteTrackingProgress__impact__wrapper\">\n                                <img className=\"foodWasteTrackingProgress__logo applyMarginRightAndLeft\" src={meals} alt=\"logo\" />\n                                <div className=\"foodWasteTrackingProgress__impact__text cooperHewittBold\">\n                                  <div className={showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                                    {roundedUpNumberAndTurnBackToNumber(targetsAndImpact.mealsSavings)} Meals\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <div className=\"foodWasteTrackingProgress__styling cooperHewittBold \">\n                              <div className=\"foodWasteTrackingProgress__impact__wrapper\">\n                                <img className=\"foodWasteTrackingProgress__logo applyMarginRightAndLeft\" src={co2} alt=\"logo\" />\n                                <div className=\"foodWasteTrackingProgress__impact__text cooperHewittBold\">\n                                  <div className={showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                                    {roundedUpNumberAndTurnBackToNumber(targetsAndImpact.co2Reduction)} Kg of C02\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <div className=\"foodWasteTrackingProgress__styling cooperHewittBold \">\n                              <div className=\"foodWasteTrackingProgress__impact__wrapper\">\n                                <img className=\"foodWasteTrackingProgress__logo applyMarginRightAndLeft\" src={money} alt=\"logo\" />\n                                <div className=\"foodWasteTrackingProgress__impact__text cooperHewittBold\">\n                                  <div className={showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                                    £ {roundedUpNumberAndTurnBackToNumber(targetsAndImpact.moneySavings)}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                          </div>\n\n                    </div>\n                  </div>\n\n\n              </div>\n\n            </div>\n          </AccordionBody>\n        </>\n      }\n    </>\n  );\n}\n","import React, { createContext, useEffect, useState } from 'react'\n// import { getYearsArray, getMonthAsAnumber } from \"./../utilities.js\"\n\nexport const WastePerCoverContext = createContext()\n\nconst WastePerCoverContextProvider = props => {\n\n  const initialStateForyearlyArray = JSON.parse(localStorage.getItem('yearlyArray')) || []\n  const initialStateFormontlyArray = JSON.parse(localStorage.getItem('monthlyArr')) || []\n\n  const [yearlyArray, setYearlyArray] = useState(initialStateForyearlyArray);\n  const [montlyArray, setMonthArray] = useState(initialStateFormontlyArray);\n\n  const [count, setCount ] = useState(0)\n\n  const [activeState, changeActiveState] = useState({\n    coverSelector: false,\n    spoilageSelector: false,\n    preparationSelector: false,\n    allSelector: true,\n  });\n\n  const [totalCW, setTotalCW ] = useState(0)\n  const [totalPW, setTotalPW ] = useState(0)\n  const [totalSW, setTotalSW ] = useState(0)\n  const [totalWaste, setTotalWaste ] = useState(0)\n  const [xAxis, setXaxis ] = useState(0)\n\n  const [wastePerCoverForAllWaste, setForAllWaste ] = useState([])\n  const [wastePerCoverForCoverWaste, setCoverWaste ] = useState([])\n  const [wastePerCoverForPreparationWaste, setPreparationWaste ] = useState([])\n  const [wastePerCoverForSpoilageWaste, setSpoilageWaste ] = useState([])\n\n  const [ totalCoverInputs, setTotalCoverInputs] = useState(0)\n\n  const [ percentageOfInputsAreZeros, setPercentageOfInputsAreZeros] = useState(0)\n\n  const [ monthName, setMonthName] = useState(0)\n\n  const [display, setDisplay ] = useState([])\n\n  const [searchError, setSearchError] = useState(null);\n  const [selectedYear, setSelectedYear] = useState(0);\n\n  const [siteName, setSiteName] = useState();\n\n  // const [weekOneArray, setWeekOneArray ] = useState([])\n  // const [weekTwoArray, setWeekTwoArray ] = useState([])\n  // const [weekThreeArray, setWeekThreeArray ] = useState([])\n  // const [weekFourArray, setWeekFourArray ] = useState([])\n  // const [weekFiveArray, setWeekFiveArray ] = useState([])\n  // const [weekSixArray, setWeekSixArray ] = useState([])\n  // const [weekSevenArray, setWeekSevenArray ] = useState([])\n  const [dates, setDates ] = useState([])\n  const [datesLabel, setDatesLabel ] = useState([])\n  const [datesBeforeFormating, setDatesBeforeFormating ] = useState([])\n\n  const [foodWaste, setFoodWaste] = useState([]);\n  const [foodWasteXaxis, setFoodWasteXaxis] = useState([]);\n\n  const [coverInputDataArray, setCoverInputDataArray] = useState([]);\n  const [coverWasteDataArray, setCoverWasteDataArray] = useState([]);\n  const [preparationWasteDataArray, setPreparationWasteDataArray] = useState([]);\n  const [spoilageWasteDataArray, setSpoilageWasteDataArray] = useState([]);\n  const [totalDailyWasteDataArray, setTotalDailyWasteDataArray] = useState([]);\n  const [wasteSteamValue, setWasteSteamValue] = useState([]);\n\n  const [showTooltip, setTooltip] = React.useState(true);\n\n  useEffect(() => {\n\n    console.log(\"props\",props);\n\n    changeActiveState({\n      coverSelector: false,\n      spoilageSelector: false,\n      preparationSelector: false,\n      allSelector: true,\n    });\n\n    if (props.wastePerCover.totalDailyWasteDataArray) {\n\n      // getCurrentMonthlyAndYear(props.startDate)\n\n      // console.log(\"props.wastePerCover\",props.wastePerCover);\n\n      setCoverInputDataArray(addGap(props.wastePerCover.coverInputDataArray))\n      setCoverWasteDataArray(addGap(props.wastePerCover.coverWasteDataArray))\n      setPreparationWasteDataArray(addGap(props.wastePerCover.preparationWasteDataArray))\n      setSpoilageWasteDataArray(addGap(props.wastePerCover.spoilageWasteDataArray))\n\n      let addGapToTotalDailyWasteDataArray = addGap(props.wastePerCover.totalDailyWasteDataArray);\n\n      setTotalDailyWasteDataArray(addGapToTotalDailyWasteDataArray)\n      setWasteSteamValue(addGapToTotalDailyWasteDataArray)\n\n      // addGap\n\n      setYearlyArray(props.yearlyArray)\n      setMonthArray(props.monthlyArray)\n\n      setTotalCW(props.wastePerCover.totalCW)\n      setTotalPW(props.wastePerCover.totalPW)\n      setTotalSW(props.wastePerCover.totalSW)\n      setTotalWaste(props.wastePerCover.totalWaste)\n      setXaxis(props.wastePerCover.xAxis)\n\n      setMonthName(props.wastePerCover.monthsName)\n\n      setDisplay(props.wastePerCover.wastePerCoverForAllWaste)\n\n      setPercentageOfInputsAreZeros(props.wastePerCover.percentageOfInputsAreZeros)\n\n      //new function\n      const waste = props.wastePerCover.wastePerCoverForAllWaste\n      const foodWaste = addGap(waste);\n      const foodWasteXaxis = addGap(props.wastePerCover.xAxis, \"xaxis\");\n\n      setFoodWaste(foodWaste)\n      setFoodWasteXaxis(foodWasteXaxis)\n\n      // const allfoodWaste = addGap(props.wastePerCover.wastePerCoverForAllWaste);\n      setForAllWaste(foodWaste)\n\n      const prepfoodWaste = addGap(props.wastePerCover.wastePerCoverForPreparationWaste);\n      setPreparationWaste(prepfoodWaste)\n\n      const coverfoodWaste = addGap(props.wastePerCover.wastePerCoverForCoverWaste);\n      setCoverWaste(coverfoodWaste)\n\n      const spoilagefoodWaste = addGap(props.wastePerCover.wastePerCoverForSpoilageWaste);\n      setSpoilageWaste(spoilagefoodWaste)\n\n\n      // separateWastePerCover(waste, props.wastePerCover.xAxis)\n      setDatesBeforeFormating(props.wastePerCover.xAxis)\n\n      // setForAllWaste(props.wastePerCover.wastePerCoverForAllWaste)\n      // setCoverWaste(props.wastePerCover.wastePerCoverForCoverWaste)\n      // setPreparationWaste(props.wastePerCover.wastePerCoverForPreparationWaste)\n      // setSpoilageWaste(props.wastePerCover.wastePerCoverForSpoilageWaste)\n\n      setTotalCoverInputs(props.wastePerCover.totalCoverInputs)\n      setSiteName(props.wastePerCover.siteName)\n    }\n\n    setSearchError(props.searchError)\n    setSelectedYear(props.selectedYear)\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[props.wastePerCover, props.searchError, props.monthlyArray, props.yearlyArray])\n\n  const addGap = (dataSet, type) => {\n\n    Array.prototype.insert = function ( index, item ) {\n      this.splice( index, 0, item );\n    };\n\n    let array = dataSet;\n\n    if (dataSet !== undefined) {\n      // console.log(\"dataSet.lengt\",dataSet.length)\n      for (let i = 7; i <= dataSet.length; i += 8) {\n        // console.log(\"i\",i)\n        const value = type === \"xaxis\" ? \"\" : null;\n        array.insert(i, value);\n      }\n    }\n\n    return array;\n\n  }\n\n  // const separateWastePerCover = (waste, xAxis) => {\n\n  //   if (waste !== undefined) {\n  //     // console.log(\"waste\",waste.wastePerCoverForAllWaste)\n  //     // console.log(\"xAxis\",xAxis);\n  //     // let waste = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31]\n  //     // let dates = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31]\n  //     // let waste = [1, 2, 3, 4, 5]\n  //     // let dates = [1, 2, 3, 4, 5]\n  //     // const formatedCW = filterByWeeks(waste, dates)\n\n  //     const formatedWastesData = filterByWeeks(waste, xAxis)\n  //     // console.log(\"formatedWastesData\",formatedWastesData);\n  //     // console.log(\"formatedWastesData.newArrayForDates\",formatedWastesData.newArrayForDates);\n  //     const dates = spitDatesIntoArray(formatedWastesData.newArrayForDates)\n  //     setDatesLabel(dates);\n\n  //     setWeekOneArray(formatedWastesData.sevenArraysForChart.reformatedArrayOne)\n  //     setWeekTwoArray(formatedWastesData.sevenArraysForChart.reformatedArrayTwo)\n  //     setWeekThreeArray(formatedWastesData.sevenArraysForChart.reformatedArrayThree)\n  //     setWeekFourArray(formatedWastesData.sevenArraysForChart.reformatedArrayFour)\n  //     setWeekFiveArray(formatedWastesData.sevenArraysForChart.reformatedArrayFive)\n  //     setWeekSixArray(formatedWastesData.sevenArraysForChart.reformatedArraySix)\n  //     setWeekSevenArray(formatedWastesData.sevenArraysForChart.reformatedArraySeven)\n\n  //     setDates(formatedWastesData.newArrayForDates)\n  //   }\n  // }\n\n  const spitDatesIntoArray = (data) => {\n    let arrayOfDates = [];\n    data.map((item) => {\n      const splitItem = item.split(\",\");\n      arrayOfDates.push(splitItem)\n    });\n    return arrayOfDates;\n  };\n\n  const filterByWeeks = (wastes, xAxis) => {\n    const numOfCoverPerWaste = wastes.length\n    const dates = xAxis;\n    const howManyWeeksinTheArray = (numOfCoverPerWaste / 7);\n    // console.log(\"howManyWeeksinTheArray\",howManyWeeksinTheArray)\n    // console.log(\"dates\",dates)\n    // console.log(\"numOfCoverPerWaste\",numOfCoverPerWaste)\n    let newArray;\n    let newArrayForDates = []\n\n    if (howManyWeeksinTheArray <= 1) {\n\n      // console.log(\"1 week only\")\n      const datesInWeekOne = []\n\n      let num\n      for (num = 0; num <= 6; ++num) {\n        datesInWeekOne.push(dates[num])\n      }\n\n      const turnDatesToString = datesInWeekOne.join()\n      newArrayForDates.push(turnDatesToString)\n\n      const sevenArraysForChart = reformatDataToShowWastePerWeek(wastes, numOfCoverPerWaste)\n\n      newArray = {\n        newArrayForDates,\n        sevenArraysForChart\n      }\n\n    } else if (howManyWeeksinTheArray > 1 && howManyWeeksinTheArray <= 2) {\n      // console.log(\"2 weeks only\")\n\n      const datesInWeekOne = []\n      const datesInWeekTwo = []\n\n      let num;\n      for (num = 0; num <= 6; ++num) {\n        datesInWeekOne.push(dates[num])\n      }\n\n      let numTwo;\n      for (numTwo = 7; numTwo <= dates.length - 1; ++numTwo) {\n        datesInWeekTwo.push(dates[numTwo])\n      }\n\n      let turnDatesToString;\n\n      turnDatesToString = datesInWeekOne.join()\n      newArrayForDates.push(turnDatesToString)\n\n      turnDatesToString = datesInWeekTwo.join()\n      newArrayForDates.push(turnDatesToString)\n\n      const sevenArraysForChart = reformatDataToShowWastePerWeek(wastes, numOfCoverPerWaste)\n\n      newArray = {\n        newArrayForDates,\n        sevenArraysForChart\n      }\n\n    } else if (howManyWeeksinTheArray > 2 && howManyWeeksinTheArray <= 3) {\n    // console.log(\"3 weeks only\")\n\n      const datesInWeekOne = []\n      const datesInWeekTwo = []\n      const datesInWeekThree = []\n\n      let num\n      for (num = 0; num <= 6; ++num) {\n        datesInWeekOne.push(dates[num])\n      }\n\n      let numTwo\n      for (numTwo = 7; numTwo <= 13; ++numTwo) {\n        datesInWeekTwo.push(dates[numTwo])\n      }\n\n      let numThree\n      for (numThree = 14; numThree <= dates.length - 1; ++numThree) {\n        datesInWeekThree.push(dates[numThree])\n      }\n\n      let turnDatesToString;\n\n      turnDatesToString = datesInWeekOne.join()\n      newArrayForDates.push(turnDatesToString)\n\n      turnDatesToString = datesInWeekTwo.join()\n      newArrayForDates.push(turnDatesToString)\n\n      turnDatesToString = datesInWeekThree.join()\n      newArrayForDates.push(turnDatesToString)\n\n      const sevenArraysForChart = reformatDataToShowWastePerWeek(wastes, numOfCoverPerWaste)\n\n      newArray = {\n        newArrayForDates,\n        sevenArraysForChart\n      }\n\n\n    } else if (howManyWeeksinTheArray > 3 && howManyWeeksinTheArray <= 4) {\n    // console.log(\"4 weeks only\")\n\n      const datesInWeekOne = []\n      const datesInWeekTwo = []\n      const datesInWeekThree = []\n      const datesInWeekFour = []\n\n      let num\n      for (num = 0; num <= 6; ++num) {\n        datesInWeekOne.push(dates[num])\n      }\n\n      let numTwo\n      for (numTwo = 7; numTwo <= 13; ++numTwo) {\n        datesInWeekTwo.push(dates[numTwo])\n      }\n\n      let numThree\n      for (numThree = 14; numThree <= 20; ++numThree) {\n        datesInWeekThree.push(dates[numThree])\n      }\n\n      let numFour\n      for (numFour = 21; numFour <= dates.length - 1; ++numFour) {\n        datesInWeekFour.push(dates[numFour])\n      }\n\n      let turnDatesToString;\n\n      turnDatesToString = datesInWeekOne.join()\n      newArrayForDates.push(turnDatesToString)\n\n      turnDatesToString = datesInWeekTwo.join()\n      newArrayForDates.push(turnDatesToString)\n\n      turnDatesToString = datesInWeekThree.join()\n      newArrayForDates.push(turnDatesToString)\n\n      turnDatesToString = datesInWeekFour.join()\n      newArrayForDates.push(turnDatesToString)\n\n      const sevenArraysForChart = reformatDataToShowWastePerWeek(wastes, numOfCoverPerWaste)\n\n      newArray = {\n        newArrayForDates,\n        sevenArraysForChart\n      }\n\n    } else if (howManyWeeksinTheArray > 4) {\n    // console.log(\"5 weeklys only\")\n\n      const datesInWeekOne = []\n      const datesInWeekTwo = []\n      const datesInWeekThree = []\n      const datesInWeekFour = []\n      const datesInWeekFive = []\n\n      let num\n      for (num = 0; num <= 6; ++num) {\n        datesInWeekOne.push(dates[num])\n      }\n\n      let numTwo\n      for (numTwo = 7; numTwo <= 13; ++numTwo) {\n        datesInWeekTwo.push(dates[numTwo])\n      }\n\n      let numThree\n      for (numThree = 14; numThree <= 20; ++numThree) {\n        datesInWeekThree.push(dates[numThree])\n      }\n\n      let numFour\n      for (numFour = 21; numFour <= 27; ++numFour) {\n        datesInWeekFour.push(dates[numFour])\n      }\n\n      let numFive\n      for (numFive = 28; numFive <= dates.length - 1; ++numFive) {\n        datesInWeekFive.push(dates[numFive])\n      }\n\n      let turnDatesToString;\n\n      turnDatesToString = datesInWeekOne.join()\n      newArrayForDates.push(turnDatesToString)\n\n      turnDatesToString = datesInWeekTwo.join()\n      newArrayForDates.push(turnDatesToString)\n\n      turnDatesToString = datesInWeekThree.join()\n      newArrayForDates.push(turnDatesToString)\n\n      turnDatesToString = datesInWeekFour.join()\n      newArrayForDates.push(turnDatesToString)\n\n      turnDatesToString = datesInWeekFive.join()\n      newArrayForDates.push(turnDatesToString)\n\n      const sevenArraysForChart = reformatDataToShowWastePerWeek(wastes, numOfCoverPerWaste)\n\n    newArray = {\n      newArrayForDates,\n      sevenArraysForChart\n    }\n    }\n\n    return newArray;\n  }\n\n  const reformatDataToShowWastePerWeek = (wastes, numOfCoverPerWaste) => {\n    const arrayOne = [];\n    const arrayTwo = [];\n    const arrayThree = [];\n    const arrayFour = [];\n    const arrayFive = [];\n    const arraySix = [];\n    const arraySeven = [];\n\n    let numOne;\n    for (numOne = 0; numOne <= numOfCoverPerWaste; numOne += 7) {\n      arrayOne.push(wastes[numOne])\n    }\n\n    let numTwo;\n    for (numTwo = 1; numTwo <= numOfCoverPerWaste; numTwo += 7) {\n      arrayTwo.push(wastes[numTwo])\n    }\n\n    let numThree;\n    for (numThree = 2; numThree <= numOfCoverPerWaste; numThree += 7) {\n      arrayThree.push(wastes[numThree])\n    }\n\n    let numFour;\n    for (numFour = 3; numFour <= numOfCoverPerWaste; numFour += 7) {\n      arrayFour.push(wastes[numFour])\n    }\n\n    let numFive;\n    for (numFive = 4; numFive <= numOfCoverPerWaste; numFive += 7) {\n      arrayFive.push(wastes[numFive])\n    }\n\n    let numSix;\n    for (numSix = 5; numSix <= numOfCoverPerWaste; numSix += 7) {\n      arraySix.push(wastes[numSix])\n    }\n\n    let numSeven;\n    for (numSeven = 6; numSeven <= numOfCoverPerWaste; numSeven += 7) {\n      arraySeven.push(wastes[numSeven])\n    }\n\n    const reformatedArrayOne = arrayOne.filter((data) => {\n      return data !== undefined;\n    })\n\n      // console.log(\"reformatedArrayOne\", reformatedArrayOne)\n\n    const reformatedArrayTwo = arrayTwo.filter((data) => {\n      return data !== undefined;\n    })\n\n      // console.log(\"reformatedArrayTwo\", reformatedArrayTwo)\n\n    const reformatedArrayThree = arrayThree.filter((data) => {\n      return data !== undefined;\n    })\n\n      // console.log(\"reformatedArrayThree\", reformatedArrayThree)\n\n    const reformatedArrayFour = arrayFour.filter((data) => {\n      return data !== undefined;\n    })\n\n      // console.log(\"reformatedArrayFour\", reformatedArrayFour)\n\n    const reformatedArrayFive = arrayFive.filter((data) => {\n      return data !== undefined;\n    })\n\n      // console.log(\"reformatedArrayFive\", reformatedArrayFive)\n\n    const reformatedArraySix = arraySix.filter((data) => {\n      return data !== undefined;\n    })\n\n      // console.log(\"reformatedArraySix\", reformatedArraySix)\n\n    const reformatedArraySeven = arraySeven.filter((data) => {\n      return data !== undefined;\n    })\n\n    // console.log(\"reformatedArraySeven\", reformatedArraySeven)\n\n    const results = {\n      reformatedArrayOne,\n      reformatedArrayTwo,\n      reformatedArrayThree,\n      reformatedArrayFour,\n      reformatedArrayFive,\n      reformatedArraySix,\n      reformatedArraySeven\n    }\n\n    return results;\n  }\n\n  const handleSearch = () => {\n    const monthlyIndexArray = montlyArray.filter((data) => {\n      return data.show;\n    });\n    const yearlyIndexArray = yearlyArray.filter((data) => {\n      return data.show;\n    });\n\n    const data = {\n      monthlyIndex: monthlyIndexArray[0].index,\n      yearlyIndex: yearlyIndexArray[0].year\n    }\n\n    // props.handleSearch(monthlyIndex, yearlyIndex)\n    props.handleSearch(data, \"wastePerCover\")\n  }\n\n  const handleYearly = (step) => {\n\n    let getIndex;\n    let highestIndex = yearlyArray.length - 1;\n\n    yearlyArray.find((data) => {\n      if (data.show === true) {\n        getIndex = yearlyArray.indexOf(data)\n      }\n    })\n\n\n    if (step === \"NEXT\" && getIndex !== highestIndex) {\n\n      yearlyArray.map((data) => {\n          let index = yearlyArray.indexOf(data)\n\n          if (index === getIndex + 1) {\n            data.show = true;\n          } else {\n            data.show = false;\n          }\n\n      })\n\n    } else if (step === \"PREV\" && getIndex !== 0) {\n\n      yearlyArray.map((data) => {\n        let index = yearlyArray.indexOf(data)\n\n        if (index === getIndex - 1) {\n          data.show = true\n        } else {\n          data.show = false\n        }\n      })\n    }\n\n    setYearlyArray(yearlyArray)\n\n    setCount((prevCount) => {\n      return prevCount + 1\n    })\n  }\n\n  const handleMonthly = (step) => {\n\n    let getIndex;\n\n      montlyArray.find((data) => {\n        if (data.show === true) {\n          getIndex = data.index\n        }\n      })\n\n    ///NEXT\n    if (step === \"NEXT\" && getIndex !== 12) {\n\n      montlyArray.map((data) => {\n        if (data.index <= 12) {\n          if (data.index === getIndex + 1) {\n            data.show = true;\n          } else {\n            data.show = false;\n          }\n        }\n      })\n\n    } else if (step === \"PREV\" && getIndex !== 1) {\n      ///PREV\n\n      montlyArray.map((data) => {\n        if (data.index <= 12) {\n          if (data.index === getIndex - 1) {\n            data.show = true;\n          } else {\n            data.show = false;\n          }\n        }\n      })\n    }\n\n    setMonthArray(montlyArray)\n\n    setCount((prevCount) => {\n      return prevCount + 1\n    })\n\n  }\n\n  function toggleActive(type) {\n\n    switch (type) {\n      case \"coverSelector\":\n\n        changeActiveState({\n          coverSelector: true,\n          spoilageSelector: false,\n          preparationSelector: false,\n          allSelector: false,\n        });\n\n        setFoodWaste(wastePerCoverForCoverWaste)\n\n        setWasteSteamValue(coverWasteDataArray)\n\n\n        break;\n      case \"spoilageSelector\":\n\n        changeActiveState({\n          coverSelector: false,\n          spoilageSelector: true,\n          preparationSelector: false,\n          allSelector: false,\n        });\n\n        setFoodWaste(wastePerCoverForSpoilageWaste)\n\n        setWasteSteamValue(spoilageWasteDataArray)\n\n        break;\n      case \"preparationSelector\":\n\n        changeActiveState({\n          coverSelector: false,\n          spoilageSelector: false,\n          preparationSelector: true,\n          allSelector: false,\n        });\n\n        setFoodWaste(wastePerCoverForPreparationWaste)\n\n        setWasteSteamValue(preparationWasteDataArray)\n\n        break;\n      case \"allSelector\":\n\n        changeActiveState({\n          coverSelector: false,\n          spoilageSelector: false,\n          preparationSelector: false,\n          allSelector: true,\n        });\n\n        setFoodWaste(wastePerCoverForAllWaste)\n\n        setWasteSteamValue(totalDailyWasteDataArray)\n\n        break;\n      default:\n    }\n\n    setTooltip(false);\n\n  }\n\n  return (\n    <WastePerCoverContext.Provider\n      value={{\n          activeState,\n          toggleActive,\n          yearlyArray,\n          montlyArray,\n          // triggerHandleYearly,\n          // triggerHandleMonthly,\n          count,\n\n          totalCW,\n          totalPW,\n          totalSW,\n          totalWaste,\n          xAxis,\n          display,\n          totalCoverInputs,\n          percentageOfInputsAreZeros,\n          monthName,\n          handleSearch,\n          searchError,\n          selectedYear,\n          siteName,\n\n          // weekOneArray,\n          // weekTwoArray,\n          // weekThreeArray,\n          // weekFourArray,\n          // weekFiveArray,\n          // weekSixArray,\n          // weekSevenArray,\n          dates,\n\n          handleYearly,\n          handleMonthly,\n\n          datesLabel,\n          // yearlyArrayForWastePerCover,\n          // montlyArrayForWastePerCover\n          foodWaste,\n          foodWasteXaxis,\n\n          wasteSteamValue,\n          coverInputDataArray,\n          showTooltip\n      }}\n  >\n      {props.children}\n  </WastePerCoverContext.Provider>\n  )\n}\n\nexport default WastePerCoverContextProvider","import moment from \"moment\";\n\n/**\n * This returns a number string with 2 decimal places without rounding up 0.000\n * @param {String} number\n */\n export const keepTwoDecimalPlacesWithoutRoundingUp = (num) => {\n    // console.log(\"num\",num);\n    let result = 0;\n    if (num !== 0) {\n        let str;\n        str = num.toString().split('.');\n        var res = str[1].slice(0, 2);\n        result = str[0]+'.'+res;\n        return result;\n    } else {\n        return result;\n    };\n  };\n\n  /**\n * Returns true if number is an integer\n * @param {number}\n * @returns\n */\nexport const isInt = (n) => {\n    return n % 1 === 0;\n};\n\n  /**\n * Returns data format 23-29 Aug\n * @param {string}\n * @returns\n */\nexport const weeklyDateFormat = (startDayOfTheWeek) => {\n    let formatedDateLabel = [];\n    let monthName;\n\n    const startDate = moment(startDayOfTheWeek);\n    const endDate = moment(startDayOfTheWeek).add(6, 'days');\n\n    formatedDateLabel.push(parseInt(startDate.format(\"D\")));\n    formatedDateLabel.push(parseInt(endDate.format(\"D\")));\n\n    monthName = startDate.format(\"MMMM\").substr(0, 3);\n    return  monthName + \" \" + formatedDateLabel[0] + \"-\" + formatedDateLabel[1];\n};\n\n/**\n * Return the current week of the year\n * @returns {Number}\n */\n export const getCurrentWeek = () => {\n    const formattedDate = moment().format('MM-DD-YYYY');\n    const currentWeek = moment(formattedDate, \"MMDDYYYY\").isoWeek();\n    return currentWeek;\n  };\n\n/**\n * Return indexes require red color\n * @returns {object}\n */\n  export const getIndexesForBackgroundColours =(wasteValues, allCappings, type, activeState) => {\n\n    // console.log(\"wasteValues\",wasteValues)\n    // console.log(\"allCappings\",allCappings)\n    // console.log(\"type\",type)\n    // console.log(\"activeState\",activeState)\n\n    let cwTarget = allCappings[type][0].value\n    let spoilageTarget =  allCappings[type][1].value\n    let prepTarget =  allCappings[type][2].value\n\n    // console.log(\"cwTarget\",cwTarget)\n    // console.log(\"spoilageTarget\",spoilageTarget)\n    // console.log(\"prepTarget\",prepTarget)\n\n    let targetIndexArray = []\n    // let coverWasteOverTargetIndexArray = []\n    // let spoilageWasteOverTargetIndexArray = []\n    // let prepWasteOverTargetIndexArray = []\n\n    // console.log(\"activeState\",activeState)\n    // console.log(\"activeState.coverSelector\",activeState.coverSelector)\n    // console.log(\"activeState.spoilageSelector\",activeState.spoilageSelector)\n    // console.log(\"activeState.preparationSelector\",activeState.preparationSelector)\n\n    if (activeState.allSelector) {\n        wasteValues.map((data, i) => {\n            // console.log(\"cwTarget\",cwTarget)\n            // console.log(\"data\",data)\n            // console.log(\"data >= cwTarget\",data >= cwTarget)\n            const total = cwTarget + spoilageTarget + prepTarget\n\n            if (data >= total) {\n                targetIndexArray.push(i)\n            }\n            return \"\"\n        })\n    } else if (activeState.coverSelector) {\n\n        wasteValues.map((data, i) => {\n            if (data >= cwTarget) {\n                targetIndexArray.push(i)\n            }\n            return \"\"\n        })\n\n    } else if (activeState.spoilageSelector) {\n\n        wasteValues.map((data, i) => {\n            if (data >= spoilageTarget) {\n                targetIndexArray.push(i)\n            }\n            return \"\"\n        })\n\n    } else if (activeState.preparationSelector) {\n\n        wasteValues.map((data, i) => {\n            if (data >= prepTarget) {\n                targetIndexArray.push(i)\n            }\n            return \"\"\n        })\n\n    }\n    // console.log(\"targetIndexArray\",targetIndexArray);\n\n    return {\n        targetIndexArray: targetIndexArray,\n    }\n\n  }","import React from 'react'\n\nexport default function capping(props) {\n    return (\n        <b className=\"capping\">\n          <div className=\"applyPurpleColor cooperHewittBold\">Cap</div>\n          <div className=\"capping__text applyMarginRightAndLeft\">\n            <div className={ \"applyPurpleColor cooperHewittBold\"}> C</div>\n          </div>\n            <div className={\"applyBlueTuckGreen\"}>\n              {props.showPounds ? props.coverWastes : props.coverWastes}\n            </div>\n          <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor\">\n            <div className={ \"applyPurpleColor cooperHewittBold\"}> S</div>\n          </div>\n            <div className={\"applyBlueTuckGreen\"}>\n              {props.showPounds ? props.spoilageWastes : props.spoilageWastes}\n            </div>\n          <div className=\"capping__text applyMarginRightAndLeft applyPurpleColor cooperHewittBold\">\n            <div className={ \"applyPurpleColor cooperHewittBold\"}> P</div>\n          </div>\n            <div className={\"applyBlueTuckGreen\"}>\n              {props.showPounds ? props.prepWastes : props.prepWastes}\n            </div>\n          </b>\n    )\n}\n","import React, { useContext, useEffect, useState} from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"chartjs-plugin-annotation\";\nimport \"chartjs-plugin-datalabels\";\n\nimport useWindowDimensions from \"../../libs/use-window-dimensions\";\n\nimport { WastePerCoverContext } from \"../../../../contexts/waste-per-cover-context\";\n\nimport { WasteCapContext } from \"../../../../contexts/waste-cap-context\";\n\nimport { AccordionHeading, AccordionBody } from \"../accordion\"\n\nimport {\n  setItemInLocalStorage,\n  maxNumForCoverPerWasteChartFunction\n} from \"../../../../utilities.js\";\n\nimport {\n  keepTwoDecimalPlacesWithoutRoundingUp,\n  isInt,\n  getIndexesForBackgroundColours\n} from \"../../../../helper.js\";\n\nimport Capping from \"./../reuseable-components/labels/capping\"\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nlet graphHeight = 500;\nlet graphWidth = 1100;\n\nexport default function CoverPerWasteGraph(props) {\n\n  const [tooltipIsOpen, setTooltipIsOpen] = React.useState(true);\n\nconst {\n  activeState,\n  toggleActive,\n  yearlyArray,\n  montlyArray,\n  handleSearch,\n  count,\n\n  totalCW,\n  totalPW,\n  totalSW,\n  totalWaste,\n\n  display,\n  totalCoverInputs,\n  percentageOfInputsAreZeros,\n  monthName,\n  searchError,\n  selectedYear,\n  siteName,\n\n  wasteSteamValue,\n  coverInputDataArray,\n\n  handleYearly,\n  handleMonthly,\n\n  datesLabel,\n\n  foodWaste,\n  foodWasteXaxis,\n  showTooltip\n} = useContext(WastePerCoverContext);\n\nconst {\n  allCappingValue,\n  wastePerCoverCoverWastes,\n  wastePerCoverSpoilageWastes,\n  wastePerCoverPrepWastes\n } = useContext(WasteCapContext);\n\n  const [ monthly, setMonthlyArray] = useState([])\n  const [ yearly, setYearlyArray ] = useState([])\n\n  const [ displayValue, setDisplay ] = useState([])\n\n  const [totalCoverWaste, setTotalCW ] = useState(0)\n  const [totalPrepWaste, setTotalPW ] = useState(0)\n  const [totalSpoilageWaste, setTotalSW ] = useState(0)\n  const [totalAllWaste, setTotalWaste ] = useState(0)\n\n  const [showSearchError, setShowSearchError ] = useState(false)\n  const [year, setSelectedYear] = useState(0);\n\n  const [ inputsData, setInputsData ] = useState([])\n  const [ wasteStreamValue, setWasteStreamValue] = useState([])\n\n  // let maxNumber = 1;\n  let [maxNumber, setMaxNumber ] = useState(1)\n\n  let indexes;\n\n  let barColors = [\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n  ];\n\n  indexes = getIndexesForBackgroundColours(foodWaste,allCappingValue, \"wastePerCoverCappingValues\", activeState);\n  // console.log(\"indexes\",indexes);\n\n  if (indexes) {\n    indexes.targetIndexArray.map((data) => {\n      // console.log(\"data\",data)\n      // console.log(\"barColors\",barColors)\n\n      barColors[data] = \"rgba(255, 0, 0, 0.9)\";\n      return \"\"\n    })\n  }\n\n  useEffect(() => {\n\n\n    setWasteStreamValue(wasteSteamValue);\n    setInputsData(coverInputDataArray);\n\n    // console.log(\"montlyArray\",montlyArray)\n\n    // console.log(\"foodWaste\",foodWaste)\n    // console.log(\"foodWasteXaxis\",foodWasteXaxis)\n    setDisplay(foodWaste)\n\n    // setMonthlyArray(montlyArray)\n    // setYearlyArray(yearlyArray)\n    // console.log(\"label\",label)\n    // setLabel(datesLabel)\n\n    setMonthlyArray(montlyArray)\n    setYearlyArray(yearlyArray)\n\n    setTotalCW(totalCW)\n    setTotalPW(totalPW)\n    setTotalSW(totalSW)\n    setTotalWaste(totalWaste)\n\n    let maxNumber = maxNumForCoverPerWasteChartFunction(display)\n    setMaxNumber(maxNumber)\n\n    setShowSearchError(searchError)\n    setSelectedYear(selectedYear)\n\n    if (props.wastePerCover && showTooltip){\n      setTooltipIsOpen(true)\n    } else {\n      setTooltipIsOpen(false)\n    }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    montlyArray,\n    yearlyArray,\n    count,\n    display,\n    searchError,\n    selectedYear,\n\n    wasteSteamValue,\n    coverInputDataArray,\n\n    datesLabel,\n\n    foodWaste,\n    foodWasteXaxis,\n    props.wastePerCover\n  ])\n\n  if (props.showPounds) {\n    // console.log(\"display\",display);\n    if (display) {\n      const monetaryValues = display.map((data) => {\n        return data * 2.775;\n      })\n      maxNumber = maxNumForCoverPerWasteChartFunction(monetaryValues)\n    }\n  } else {\n    maxNumber = maxNumForCoverPerWasteChartFunction(display)\n  }\n\n  const { width } = useWindowDimensions();\n\n  if (width <= 700) {\n    graphWidth = 260;\n    graphHeight = 65;\n  } else if (width >= 1600) {\n    // graphWidth = 700;\n    // graphHeight = 250;\n\n    graphHeight = 424;\n    graphWidth = 893;\n  }\n\n  return (\n\n    <>\n      {!props.hideReport &&\n      <>\n        <AccordionHeading>\n\n          <div className=\"section-title\">WASTE per COVER</div>\n          <div className=\"container\">\n            <span onClick={() =>\n                {\n                  props.setWastePerCover(!props.wastePerCover)\n                  setItemInLocalStorage(\"showWastePerCover\", !props.wastePerCover)\n                }\n                }>\n\n                {props.wastePerCover ? (\n                \"X \")\n                :\n                \"| | | \"\n                }\n            </span>\n          </div>\n\n        </AccordionHeading>\n        <AccordionBody open={props.wastePerCover}>\n\n        <div className= { props.showDarkTheme ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem\": \"originalTheme__reportBackgroundColor addPaddingOfHalveRem\"}>\n\n          <div className=\"graph__row addSpaceBetween\">\n            <div className=\"report-subtitle\">{siteName}</div>\n            <div className=\"graph__heading\">WASTE PER COVER\n              <div className=\"applyMarginRightAndLeft\">{props.showPounds? \"(£)\" : \"(Kg)\" } /Person in {monthName} {year}</div>\n            </div>\n          </div>\n\n          <div className=\"graph__row\">\n\n            <div className=\"graph__labelWrapper\">\n\n                <div className=\"graph__label applyMarginRightAndLeft\">{year}</div>\n                {\" \"}\n                <div className=\"graph__label applyMarginRightAndLeft\">{monthName}</div>\n                {\" \"}\n                <div className=\"graph__label applyMarginRightAndLeft\">\n                  Total Waste\n                </div>\n                <div className=\"applyMarginRightAndLeft graph__label\">\n                    C\n                </div>\n                <div\n                  id={1}\n                  key={0}\n                >\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                    {totalCoverWaste}\n                  </div>\n                </div>\n                <div>+</div>\n                <div className=\"graph__label applyMarginRightAndLeft\">\n                    S\n                 </div>\n                <div\n                  id={2}\n                  key={1}\n                >\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                    {totalSpoilageWaste}\n                  </div>\n                </div>\n                <div>+</div>\n                <div className=\"applyMarginRightAndLeft graph__label\">\n                  P\n                </div>\n                <div\n                  id={3}\n                  key={2}\n                >\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                    {totalPrepWaste} = {totalAllWaste}\n                  </div>\n                </div>\n              </div>\n\n          </div>\n\n          <div className=\"graph__row\">\n            <div className=\"graph__labelWrapper\">\n              <div className=\"graph__label applyMarginRightAndLeft\">{year} {monthName} Total Monthly Covers</div>\n              <div className=\"applyBlueTuckGreen\">{totalCoverInputs}</div>\n            </div>\n          </div>\n          <div className=\"graph__row\">\n            <div className=\"graph__labelWrapper\">\n              <div className=\"graph__label applyMarginRightAndLeft\">Do we have Monthly Cover Inputs data in {monthName} {year}? {percentageOfInputsAreZeros > 50 ? \"NO\" : \"YES\"}</div>\n            </div>\n          </div>\n\n\n          <div className=\"dashboard__wrapperForSelector\">\n              <div className=\"dashboard__selector\">\n\n                <Tooltip\n                  open={tooltipIsOpen}\n                  // onOpen={() => setTooltipIsOpen(true)}\n                  onClose={() => setTooltipIsOpen(false)}\n                  title=\"click on C, S, P or All waste stream\"\n                  arrow\n                >\n\n                <h2\n                  className={activeState.coverSelector ? \"active\" : \"inactive\"}\n                  id={0}\n                  onClick={() => {\n                    toggleActive(\"coverSelector\");\n                  }}\n                  >C</h2>\n                </Tooltip>\n\n                <Tooltip\n                  open={tooltipIsOpen}\n                  // onOpen={() => setTooltipIsOpen(true)}\n                  onClose={() => setTooltipIsOpen(false)}\n                  arrow\n                >\n\n                <h2\n                  className={activeState.spoilageSelector ? \"active\" : \"inactive\"}\n                  id={1}\n                  onClick={() => {\n                    toggleActive(\"spoilageSelector\");\n                  }}\n                  >S</h2>\n\n                </Tooltip>\n\n                <Tooltip\n                  open={tooltipIsOpen}\n                  // onOpen={() => setTooltipIsOpen(true)}\n                  onClose={() => setTooltipIsOpen(false)}\n                  arrow\n                >\n\n                <h2\n                  className={activeState.preparationSelector ? \"active\" : \"inactive\"}\n                  id={2}\n                  onClick={() => {\n                    toggleActive(\"preparationSelector\");\n                  }}\n                  >P</h2>\n\n                </Tooltip>\n\n                <h2\n                  className={activeState.allSelector ? \"active\" : \"inactive\"}\n                  id={3}\n                  onClick={() => {\n                    toggleActive(\"allSelector\");\n                  }}\n                  >ALL</h2>\n              </div>\n          </div>\n\n          <div style={{\n            display: \"flex\",\n            justifyContent: \"center\"\n          }}>\n            <Capping\n              coverWastes={wastePerCoverCoverWastes}\n              spoilageWastes={wastePerCoverSpoilageWastes}\n              prepWastes={wastePerCoverPrepWastes}\n              showPounds={props.showPounds}\n            />\n          </div>\n\n          <div className=\"dashboard__wrapperForGraph\">\n            <div\n            // className=\"dashboard__wastePerCoverChartWrapper\"\n\n            style={{\n              width: \"100%\",\n              overflow: \"auto\"\n            }}\n            >\n\n              <Bar\n                  data={{\n                    labels: foodWasteXaxis,\n                    wasteSteamsValue: wasteStreamValue,\n                    inputData: inputsData,\n                    datasets: [\n\n                      {\n                        label: \"array 1\",\n                        data: props.showPounds? displayValue.map((data) => {\n                          if (data) {\n                            return (data * 2.775).toFixed(1)\n                          }\n                        }) : displayValue,\n                        backgroundColor: barColors,\n                        // minBarLength: 0.3,\n                        categoryPercentage: 1.0,\n                        barPercentage: 0.5\n                      },\n\n                    ],\n                  }}\n                  width={graphWidth}\n                  height={graphHeight}\n                  options={{\n\n                    responsive: true,\n                    maintainAspectRatio: true,\n                    layout: {\n                      padding: {\n                          left: 25,\n                          right: 25,\n                          top: 10,\n                          bottom: 10\n                      }\n                    },\n                    scales: {\n                      xAxes: [\n                        {\n                          display: true,\n                          gridLines: {\n                            display: false,\n                          },\n                          ticks: {\n                            autoSkip: false,\n                            fontSize: 7\n                          },\n                        },\n                      ],\n                      yAxes: [\n                        {\n                          gridLines: {\n                            display: false,\n                          },\n                          ticks: {\n                            maxTicksLimit: 4,\n                            display: false,\n                            beginAtZero: true,\n                            max: maxNumber\n                          },\n                        },\n                      ],\n                    },\n\n                    plugins: {\n                      datalabels: {\n                        display: true,\n                        color: \"rgb(47, 64, 30)\",\n                        anchor: \"end\",\n                        align: \"end\",\n                        clamp: true,\n                        font: {\n                          size: 5,\n                          weight: 900,\n                        },\n                        offset: 4,\n                      },\n\n                    },\n\n\n                    tooltips: {\n                      enabled: true,\n                      callbacks: {\n                        title: function(tooltipItems, data) {\n                          return '';\n                        },\n                        label: function(tooltipItem, data) {\n                          // console.log(\"inputData\",data.inputData[tooltipItem.index]);\n                          // console.log(\"wasteSteamsValue\",data.wasteSteamsValue[tooltipItem.index]);\n\n                          // console.log(\"data.inputData\",data.inputData)\n                          // console.log(\"data.wasteSteamsValue\",data.wasteSteamsValue)\n\n                          // console.log(\"index\",tooltipItem.index);\n\n                          // console.log(\"data\",data);\n\n                          let inputData = data.inputData[tooltipItem.index];\n\n                          let wasteSteamValue = isInt(data.wasteSteamsValue[tooltipItem.index]) ? data.wasteSteamsValue[tooltipItem.index] :  keepTwoDecimalPlacesWithoutRoundingUp(data.wasteSteamsValue[tooltipItem.index])\n\n                          const val = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n                          return val + \"(\" +  wasteSteamValue + \"/\" + inputData + \")\"\n                        }\n                      }\n                    }\n\n                  }}\n              />\n\n            </div>\n          </div>\n\n          <div className=\"graph__row\">\n              <div className=\"dateLabel__wrapper\">\n                <div className=\"dateLabel__coverwastesSquare\"></div>\n                COVER\n                <div className=\"dateLabel__spoliageSquare\"></div>\n                SPOILAGE\n                <div className=\"dateLabel__preparationSquare\"></div>\n                PREPARATION\n                <div className=\"dateLabel__allWasteSquare\"></div>\n                ALL\n              </div>\n          </div>\n\n\n          <div className=\"graph__row\">\n            <div className=\"graph__selector-spacing\">\n              <div className=\"graph__title\">MONTH:\n              </div>\n\n              {monthly.map((month, i) => {\n                return (\n                  <div className={month.show? \"active applyMarginRightAndLeft applyPurpleColor\": \"displayNone\"} key={i} >\n                    {month.month}\n                  </div>\n                )\n              })}\n\n              <h2 className=\"applyMarginRightAndLeft clickable\" onClick={() => {handleMonthly(\"NEXT\", \"wastePerCover\")}}>NEXT</h2>\n              <h2 className=\"clickable\" onClick={() => {handleMonthly(\"PREV\", \"wastePerCover\")}}>PREV</h2>\n            </div>\n            {/* <div className=\"graph__selector-spacing\">\n              <div className=\"graph__title\">YEAR:\n              </div>\n              {yearly.map((year, i) =>{\n                return (\n                  <div className={year.show? \"active applyMarginRightAndLeft applyPurpleColor\": \"displayNone\"} key={i} >\n                    {year.year}\n                  </div>\n                )\n              })}\n              <h2 className=\"applyMarginRightAndLeft clickable\" onClick={() => {handleYearly(\"NEXT\", \"wastePerCover\")}}>NEXT</h2>\n              <h2 className=\"clickable\" onClick={() => {handleYearly(\"PREV\", \"wastePerCover\")}}>PREV</h2>\n            </div> */}\n            <div className=\"graph__title clickable applyPurpleColor\" onClick={() => {handleSearch()}}>\n              SEARCH\n            </div>\n          </div>\n\n          {/* <div className=\"graph__row\">\n             <div className=\"warning\">\n              {showSearchError? \"Please note the Data you have requested is not available\":\"\"}\n             </div>\n          </div> */}\n\n          <div className=\"graph__row\">\n             <div className=\"graph__message\">\n              (Starts on the first Monday of the Month)\n             </div>\n          </div>\n\n        </div>\n\n      </AccordionBody>\n      </>\n      }\n    </>\n  );\n}","import React, { createContext, useEffect, useState } from 'react'\n\n// import { getWastePerSales } from \"../api\";\n\nexport const WastePerSalesContext = createContext()\n\nconst WastePerSalesContextProvider = props => {\n\n  const initialStateForyearlyArray = JSON.parse(localStorage.getItem('yearlyArray')) || []\n  const initialStateFormontlyArray = JSON.parse(localStorage.getItem('monthlyArr')) || []\n\n  const [yearlyArray, setYearlyArray] = useState(initialStateForyearlyArray);\n  const [montlyArray, setMonthArray] = useState(initialStateFormontlyArray);\n\n  const [count, setCount ] = useState(0)\n\n  const [activeState, changeActiveState] = useState({\n    coverSelector: false,\n    spoilageSelector: false,\n    preparationSelector: false,\n    allSelector: true,\n  });\n\n  const [totalCW, setTotalCW ] = useState(0)\n  const [totalPW, setTotalPW ] = useState(0)\n  const [totalSW, setTotalSW ] = useState(0)\n  const [totalWaste, setTotalWaste ] = useState(0)\n  const [xAxis, setXaxis ] = useState(0)\n\n  const [wastePerSalesForAllWaste, setForAllWaste ] = useState([])\n  const [wastePerSalesForCoverWaste, setCoverWaste ] = useState([])\n  const [wastePerSalesForPreparationWaste, setPreparationWaste ] = useState([])\n  const [wastePerSalesForSpoilageWaste, setSpoilageWaste ] = useState([])\n\n  const [ totalSalesInputs, setTotalSalesInputs] = useState(0)\n\n  const [ percentageOfInputsAreZeros, setPercentageOfInputsAreZeros] = useState(0)\n\n  const [ monthName, setMonthName] = useState(0)\n\n  const [display, setDisplay ] = useState([])\n\n  const [searchError, setSearchError] = React.useState(null);\n  const [selectedYear, setSelectedYear] = React.useState(0);\n\n  const [siteName, setSiteName] = React.useState();\n\n  // const [weekOneArray, setWeekOneArray ] = useState([])\n  // const [weekTwoArray, setWeekTwoArray ] = useState([])\n  // const [weekThreeArray, setWeekThreeArray ] = useState([])\n  // const [weekFourArray, setWeekFourArray ] = useState([])\n  // const [weekFiveArray, setWeekFiveArray ] = useState([])\n  // const [weekSixArray, setWeekSixArray ] = useState([])\n  // const [weekSevenArray, setWeekSevenArray ] = useState([])\n  const [dates, setDates ] = useState([])\n  const [datesBeforeFormating, setDatesBeforeFormating ] = useState([])\n  const [datesLabel, setDatesLabel ] = useState([])\n\n  const [foodWaste, setFoodWaste] = useState([1,2,3,4,5,6,7,8,9,10]);\n  const [foodWasteXaxis, setFoodWasteXaxis] = useState([]);\n\n  const [salesInputDataArray, setSalesInputDataArray] = useState([]);\n  const [coverWasteDataArray, setCoverWasteDataArray] = useState([]);\n  const [preparationWasteDataArray, setPreparationWasteDataArray] = useState([]);\n  const [spoilageWasteDataArray, setSpoilageWasteDataArray] = useState([]);\n  const [totalDailyWasteDataArray, setTotalDailyWasteDataArray] = useState([]);\n  const [wasteSteamValue, setWasteSteamValue] = useState([]);\n\n  const [showTooltip, setTooltip] = React.useState(true);\n\n  useEffect(() => {\n\n    changeActiveState({\n      coverSelector: false,\n      spoilageSelector: false,\n      preparationSelector: false,\n      allSelector: true,\n    });\n\n    console.log(\"here props\",props);\n\n    if (props.wastePerSales.wastePerSalesForAllWaste) {\n\n      setSalesInputDataArray(addGap(props.wastePerSales.salesInputDataArray))\n      setCoverWasteDataArray(addGap(props.wastePerSales.salesWasteDataArray))\n      setPreparationWasteDataArray(addGap(props.wastePerSales.preparationWasteDataArray))\n      setSpoilageWasteDataArray(addGap(props.wastePerSales.spoilageWasteDataArray))\n\n      let addGapToTotalDailyWasteDataArray = addGap(props.wastePerSales.totalDailyWasteDataArray);\n\n      setTotalDailyWasteDataArray(addGapToTotalDailyWasteDataArray)\n      setWasteSteamValue(addGapToTotalDailyWasteDataArray)\n\n      // getWastePerSales()\n\n      // console.log(\"PROPS\",props)\n      // console.log(\"PROPS\",props.wastePerSales)\n      // console.log(\"props.siteName\",props.siteName)\n      // console.log(\"companyID\",props.siteName)\n      // console.log(\"companyName\",props.siteName)\n      // console.log(\"month\",props.siteName)\n      // console.log(\"year\",props.siteName)\n\n      setYearlyArray(props.yearlyArray)\n      setMonthArray(props.monthlyArray)\n\n      //new function\n      const waste = props.wastePerSales.wastePerSalesForAllWaste\n      // separateWastePerCover(waste, props.wastePerSales.xAxis)\n      console.log(\"props\",props);\n      console.log(\"waste\",waste);\n      const foodWaste = addGap(waste);\n      console.log(\"foodWaste\",foodWaste);\n      setFoodWaste(foodWaste)\n\n      const foodWasteXaxis = addGap(props.wastePerSales.xAxis, \"xaxis\");\n      setFoodWasteXaxis(foodWasteXaxis)\n\n      // const allFoodWaste = addGap(props.wastePerSales.wastePerSalesForAllWaste);\n      const spoilageFoodWaste = addGap(props.wastePerSales.wastePerSalesForSpoilageWaste);\n      const prepFoodWaste = addGap(props.wastePerSales.wastePerSalesForPreparationWaste);\n      const coverFoodWaste = addGap(props.wastePerSales.wastePerSalesForCoverWaste);\n\n      setForAllWaste(foodWaste)\n      setCoverWaste(coverFoodWaste)\n      setPreparationWaste(prepFoodWaste)\n      setSpoilageWaste(spoilageFoodWaste)\n\n      setDatesBeforeFormating(props.wastePerSales.xAxis)\n      // separateWastePerCover(props.wastePerCover, props.wastePerCover.xAxis)\n\n      setTotalCW(props.wastePerSales.totalCW)\n      setTotalPW(props.wastePerSales.totalPW)\n      setTotalSW(props.wastePerSales.totalSW)\n      setTotalWaste(props.wastePerSales.totalWaste)\n      setXaxis(props.wastePerSales.xAxis)\n      setMonthName(props.wastePerSales.monthsName)\n      setTotalSalesInputs(props.wastePerSales.totalSalesInput)\n\n      setDisplay(props.wastePerSales.wastePerSalesForAllWaste)\n\n      setPercentageOfInputsAreZeros(props.wastePerSales.percentageOfInputsAreZeros)\n\n      // setForAllWaste(props.wastePerSales.wastePerSalesForAllWaste)\n      // setCoverWaste(props.wastePerSales.wastePerSalesForCoverWaste)\n      // setPreparationWaste(props.wastePerSales.wastePerSalesForPreparationWaste)\n      // setSpoilageWaste(props.wastePerSales.wastePerSalesForSpoilageWaste)\n\n      setSiteName(props.wastePerSales.siteName)\n    }\n\n    setSearchError(props.searchErrorForWastePerSales)\n    setSelectedYear(props.selectedYearForWastePerSales)\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[props.wastePerSales, props.searchError, props.monthlyArray, props.yearlyArray, props.siteName])\n\n  const addGap = (dataSet, type) => {\n\n    Array.prototype.insert = function ( index, item ) {\n      this.splice( index, 0, item );\n    };\n\n    let array = dataSet;\n\n    if (dataSet !== undefined) {\n      // console.log(\"dataSet.lengt\",dataSet.length)\n      for (let i = 7; i <= dataSet.length; i += 8) {\n        // console.log(\"i\",i)\n        const value = type === \"xaxis\" ? \"\" : null;\n        array.insert(i, value);\n      }\n    }\n\n    return array;\n\n  }\n\n\n  // const separateWastePerCover = (waste, xAxis) => {\n\n  //   if (waste !== undefined) {\n  //     // console.log(\"waste\",waste.wastePerCoverForAllWaste)\n  //     // console.log(\"xAxis\",xAxis);\n  //     // let waste = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31]\n  //     // let dates = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31]\n  //     // let waste = [1, 2, 3, 4, 5]\n  //     // let dates = [1, 2, 3, 4, 5]\n  //     // const formatedCW = filterByWeeks(waste, dates)\n\n  //     const formatedWastesData = filterByWeeks(waste, xAxis)\n  //     // console.log(\"formatedWastesData\",formatedWastesData);\n  //     const dates = spitDatesIntoArray(formatedWastesData.newArrayForDates)\n  //     setDatesLabel(dates);\n\n  //     setWeekOneArray(formatedWastesData.sevenArraysForChart.reformatedArrayOne)\n  //     setWeekTwoArray(formatedWastesData.sevenArraysForChart.reformatedArrayTwo)\n  //     setWeekThreeArray(formatedWastesData.sevenArraysForChart.reformatedArrayThree)\n  //     setWeekFourArray(formatedWastesData.sevenArraysForChart.reformatedArrayFour)\n  //     setWeekFiveArray(formatedWastesData.sevenArraysForChart.reformatedArrayFive)\n  //     setWeekSixArray(formatedWastesData.sevenArraysForChart.reformatedArraySix)\n  //     setWeekSevenArray(formatedWastesData.sevenArraysForChart.reformatedArraySeven)\n\n  //     setDates(formatedWastesData.newArrayForDates)\n  //   }\n  // }\n\n  const spitDatesIntoArray = (data) => {\n    let arrayOfDates = [];\n    data.map((item) => {\n      const splitItem = item.split(\",\");\n      arrayOfDates.push(splitItem)\n      return \"\"\n    });\n    return arrayOfDates;\n  };\n\n  const filterByWeeks = (wastes, xAxis) => {\n    const numOfCoverPerWaste = wastes.length\n    const dates = xAxis;\n    const howManyWeeksinTheArray = (numOfCoverPerWaste / 7);\n    // console.log(\"howManyWeeksinTheArray\",howManyWeeksinTheArray)\n    // console.log(\"dates\",dates)\n    // console.log(\"numOfCoverPerWaste\",numOfCoverPerWaste)\n    let newArray;\n    let newArrayForDates = []\n\n    if (howManyWeeksinTheArray <= 1) {\n\n      // console.log(\"1 week only\")\n      const datesInWeekOne = []\n\n      let num\n      for (num = 0; num <= 6; ++num) {\n        datesInWeekOne.push(dates[num])\n      }\n\n      const turnDatesToString = datesInWeekOne.join()\n      newArrayForDates.push(turnDatesToString)\n\n      const sevenArraysForChart = reformatDataToShowWastePerWeek(wastes, numOfCoverPerWaste)\n\n      newArray = {\n        newArrayForDates,\n        sevenArraysForChart\n      }\n\n    } else if (howManyWeeksinTheArray > 1 && howManyWeeksinTheArray <= 2) {\n      // console.log(\"2 weeks only\")\n\n      const datesInWeekOne = []\n      const datesInWeekTwo = []\n\n      let num;\n      for (num = 0; num <= 6; ++num) {\n        datesInWeekOne.push(dates[num])\n      }\n\n      let numTwo;\n      for (numTwo = 7; numTwo <= dates.length - 1; ++numTwo) {\n        datesInWeekTwo.push(dates[numTwo])\n      }\n\n      let turnDatesToString;\n\n      turnDatesToString = datesInWeekOne.join()\n      newArrayForDates.push(turnDatesToString)\n\n      turnDatesToString = datesInWeekTwo.join()\n      newArrayForDates.push(turnDatesToString)\n\n      const sevenArraysForChart = reformatDataToShowWastePerWeek(wastes, numOfCoverPerWaste)\n\n      newArray = {\n        newArrayForDates,\n        sevenArraysForChart\n      }\n\n    } else if (howManyWeeksinTheArray > 2 && howManyWeeksinTheArray <= 3) {\n    // console.log(\"3 weeks only\")\n\n      const datesInWeekOne = []\n      const datesInWeekTwo = []\n      const datesInWeekThree = []\n\n      let num\n      for (num = 0; num <= 6; ++num) {\n        datesInWeekOne.push(dates[num])\n      }\n\n      let numTwo\n      for (numTwo = 7; numTwo <= 13; ++numTwo) {\n        datesInWeekTwo.push(dates[numTwo])\n      }\n\n      let numThree\n      for (numThree = 14; numThree <= dates.length - 1; ++numThree) {\n        datesInWeekThree.push(dates[numThree])\n      }\n\n      let turnDatesToString;\n\n      turnDatesToString = datesInWeekOne.join()\n      newArrayForDates.push(turnDatesToString)\n\n      turnDatesToString = datesInWeekTwo.join()\n      newArrayForDates.push(turnDatesToString)\n\n      turnDatesToString = datesInWeekThree.join()\n      newArrayForDates.push(turnDatesToString)\n\n      const sevenArraysForChart = reformatDataToShowWastePerWeek(wastes, numOfCoverPerWaste)\n\n      newArray = {\n        newArrayForDates,\n        sevenArraysForChart\n      }\n\n\n    } else if (howManyWeeksinTheArray > 3 && howManyWeeksinTheArray <= 4) {\n    // console.log(\"4 weeks only\")\n\n      const datesInWeekOne = []\n      const datesInWeekTwo = []\n      const datesInWeekThree = []\n      const datesInWeekFour = []\n\n      let num\n      for (num = 0; num <= 6; ++num) {\n        datesInWeekOne.push(dates[num])\n      }\n\n      let numTwo\n      for (numTwo = 7; numTwo <= 13; ++numTwo) {\n        datesInWeekTwo.push(dates[numTwo])\n      }\n\n      let numThree\n      for (numThree = 14; numThree <= 20; ++numThree) {\n        datesInWeekThree.push(dates[numThree])\n      }\n\n      let numFour\n      for (numFour = 21; numFour <= dates.length - 1; ++numFour) {\n        datesInWeekFour.push(dates[numFour])\n      }\n\n      let turnDatesToString;\n\n      turnDatesToString = datesInWeekOne.join()\n      newArrayForDates.push(turnDatesToString)\n\n      turnDatesToString = datesInWeekTwo.join()\n      newArrayForDates.push(turnDatesToString)\n\n      turnDatesToString = datesInWeekThree.join()\n      newArrayForDates.push(turnDatesToString)\n\n      turnDatesToString = datesInWeekFour.join()\n      newArrayForDates.push(turnDatesToString)\n\n      const sevenArraysForChart = reformatDataToShowWastePerWeek(wastes, numOfCoverPerWaste)\n\n      newArray = {\n        newArrayForDates,\n        sevenArraysForChart\n      }\n\n    } else if (howManyWeeksinTheArray > 4) {\n    // console.log(\"5 weeklys only\")\n\n      const datesInWeekOne = []\n      const datesInWeekTwo = []\n      const datesInWeekThree = []\n      const datesInWeekFour = []\n      const datesInWeekFive = []\n\n      let num\n      for (num = 0; num <= 6; ++num) {\n        datesInWeekOne.push(dates[num])\n      }\n\n      let numTwo\n      for (numTwo = 7; numTwo <= 13; ++numTwo) {\n        datesInWeekTwo.push(dates[numTwo])\n      }\n\n      let numThree\n      for (numThree = 14; numThree <= 20; ++numThree) {\n        datesInWeekThree.push(dates[numThree])\n      }\n\n      let numFour\n      for (numFour = 21; numFour <= 27; ++numFour) {\n        datesInWeekFour.push(dates[numFour])\n      }\n\n      let numFive\n      for (numFive = 28; numFive <= dates.length - 1; ++numFive) {\n        datesInWeekFive.push(dates[numFive])\n      }\n\n      let turnDatesToString;\n\n      turnDatesToString = datesInWeekOne.join()\n      newArrayForDates.push(turnDatesToString)\n\n      turnDatesToString = datesInWeekTwo.join()\n      newArrayForDates.push(turnDatesToString)\n\n      turnDatesToString = datesInWeekThree.join()\n      newArrayForDates.push(turnDatesToString)\n\n      turnDatesToString = datesInWeekFour.join()\n      newArrayForDates.push(turnDatesToString)\n\n      turnDatesToString = datesInWeekFive.join()\n      newArrayForDates.push(turnDatesToString)\n\n      const sevenArraysForChart = reformatDataToShowWastePerWeek(wastes, numOfCoverPerWaste)\n\n    newArray = {\n      newArrayForDates,\n      sevenArraysForChart\n    }\n    }\n\n    return newArray;\n  }\n\n  const reformatDataToShowWastePerWeek = (wastes, numOfCoverPerWaste) => {\n    const arrayOne = [];\n    const arrayTwo = [];\n    const arrayThree = [];\n    const arrayFour = [];\n    const arrayFive = [];\n    const arraySix = [];\n    const arraySeven = [];\n\n    let numOne;\n    for (numOne = 0; numOne <= numOfCoverPerWaste; numOne += 7) {\n      arrayOne.push(wastes[numOne])\n    }\n\n    let numTwo;\n    for (numTwo = 1; numTwo <= numOfCoverPerWaste; numTwo += 7) {\n      arrayTwo.push(wastes[numTwo])\n    }\n\n    let numThree;\n    for (numThree = 2; numThree <= numOfCoverPerWaste; numThree += 7) {\n      arrayThree.push(wastes[numThree])\n    }\n\n    let numFour;\n    for (numFour = 3; numFour <= numOfCoverPerWaste; numFour += 7) {\n      arrayFour.push(wastes[numFour])\n    }\n\n    let numFive;\n    for (numFive = 4; numFive <= numOfCoverPerWaste; numFive += 7) {\n      arrayFive.push(wastes[numFive])\n    }\n\n    let numSix;\n    for (numSix = 5; numSix <= numOfCoverPerWaste; numSix += 7) {\n      arraySix.push(wastes[numSix])\n    }\n\n    let numSeven;\n    for (numSeven = 6; numSeven <= numOfCoverPerWaste; numSeven += 7) {\n      arraySeven.push(wastes[numSeven])\n    }\n\n    const reformatedArrayOne = arrayOne.filter((data) => {\n      return data !== undefined;\n    })\n\n      // console.log(\"reformatedArrayOne\", reformatedArrayOne)\n\n    const reformatedArrayTwo = arrayTwo.filter((data) => {\n      return data !== undefined;\n    })\n\n      // console.log(\"reformatedArrayTwo\", reformatedArrayTwo)\n\n    const reformatedArrayThree = arrayThree.filter((data) => {\n      return data !== undefined;\n    })\n\n      // console.log(\"reformatedArrayThree\", reformatedArrayThree)\n\n    const reformatedArrayFour = arrayFour.filter((data) => {\n      return data !== undefined;\n    })\n\n      // console.log(\"reformatedArrayFour\", reformatedArrayFour)\n\n    const reformatedArrayFive = arrayFive.filter((data) => {\n      return data !== undefined;\n    })\n\n      // console.log(\"reformatedArrayFive\", reformatedArrayFive)\n\n    const reformatedArraySix = arraySix.filter((data) => {\n      return data !== undefined;\n    })\n\n      // console.log(\"reformatedArraySix\", reformatedArraySix)\n\n    const reformatedArraySeven = arraySeven.filter((data) => {\n      return data !== undefined;\n    })\n\n    // console.log(\"reformatedArraySeven\", reformatedArraySeven)\n\n    const results = {\n      reformatedArrayOne,\n      reformatedArrayTwo,\n      reformatedArrayThree,\n      reformatedArrayFour,\n      reformatedArrayFive,\n      reformatedArraySix,\n      reformatedArraySeven\n    }\n\n    return results;\n  }\n\n\n  const handleSearch = () => {\n\n    const monthlyIndexArray = montlyArray.filter((data) => {\n      return data.show;\n    });\n\n    const yearlyIndexArray = yearlyArray.filter((data) => {\n      return data.show;\n    });\n\n    const data = {\n      monthlyIndex: monthlyIndexArray[0].index,\n      yearlyIndex: yearlyIndexArray[0].year\n    }\n\n    props.handleSearch(data, \"wastePerSales\")\n  }\n\n  const handleYearly = (step) => {\n\n    let getIndex;\n    let highestIndex = yearlyArray.length - 1;\n\n    yearlyArray.find((data) => {\n      if (data.show === true) {\n        getIndex = yearlyArray.indexOf(data)\n      }\n      return \"\"\n    })\n\n\n    if (step === \"NEXT\" && getIndex !== highestIndex) {\n\n      yearlyArray.map((data) => {\n          let index = yearlyArray.indexOf(data)\n\n          if (index === getIndex + 1) {\n            data.show = true;\n            return \"\"\n          } else {\n            data.show = false;\n            return \"\"\n          }\n\n      })\n\n    } else if (step === \"PREV\" && getIndex !== 0) {\n\n      yearlyArray.map((data) => {\n        let index = yearlyArray.indexOf(data)\n\n        if (index === getIndex - 1) {\n          data.show = true\n          return \"\"\n        } else {\n          data.show = false\n          return \"\"\n        }\n      })\n    }\n\n    setYearlyArray(yearlyArray)\n\n    setCount((prevCount) => {\n      return prevCount + 1\n    })\n  }\n\n  const handleMonthly = (step, name) => {\n\n    // console.log(\"here\")\n\n    let getIndex;\n\n    montlyArray.find((data) => {\n    if (data.show === true) {\n        getIndex = data.index\n    }\n    return \"\"\n    })\n\n    ///NEXT\n    if (step === \"NEXT\" && getIndex !== 12) {\n\n        montlyArray.map((data) => {\n        if (data.index <= 12) {\n            if (data.index === getIndex + 1) {\n            data.show = true;\n            } else {\n            data.show = false;\n            }\n        }\n        return \"\"\n        })\n\n    } else if (step === \"PREV\" && getIndex !== 1) {\n        ///PREV\n\n        montlyArray.map((data) => {\n        if (data.index <= 12) {\n            if (data.index === getIndex - 1) {\n            data.show = true;\n            } else {\n            data.show = false;\n            }\n        }\n        return \"\"\n        })\n    }\n\n\n    setMonthArray(montlyArray)\n\n    setCount((prevCount) => {\n      return prevCount + 1\n    })\n\n  }\n\n\n  function toggleActive(type) {\n\n    switch (type) {\n      case \"coverSelector\":\n\n        changeActiveState({\n          coverSelector: true,\n          spoilageSelector: false,\n          preparationSelector: false,\n          allSelector: false,\n        });\n\n        // const coverfoodWaste = addGap(wastePerSalesForCoverWaste);\n        setFoodWaste(wastePerSalesForCoverWaste)\n\n        setWasteSteamValue(coverWasteDataArray)\n\n        break;\n      case \"spoilageSelector\":\n\n        changeActiveState({\n          coverSelector: false,\n          spoilageSelector: true,\n          preparationSelector: false,\n          allSelector: false,\n        });\n\n        // const spoilagefoodWaste = addGap(wastePerSalesForSpoilageWaste);\n        setFoodWaste(wastePerSalesForSpoilageWaste)\n\n        setWasteSteamValue(spoilageWasteDataArray)\n\n        break;\n      case \"preparationSelector\":\n\n        changeActiveState({\n          coverSelector: false,\n          spoilageSelector: false,\n          preparationSelector: true,\n          allSelector: false,\n        });\n\n        // const prepfoodWaste = addGap(wastePerSalesForPreparationWaste);\n        setFoodWaste(wastePerSalesForPreparationWaste)\n\n        setWasteSteamValue(preparationWasteDataArray)\n\n        break;\n      case \"allSelector\":\n\n        changeActiveState({\n          coverSelector: false,\n          spoilageSelector: false,\n          preparationSelector: false,\n          allSelector: true,\n        });\n\n        // const allfoodWaste = addGap(wastePerSalesForAllWaste);\n        setFoodWaste(wastePerSalesForAllWaste)\n\n        setWasteSteamValue(totalDailyWasteDataArray)\n\n        break;\n      default:\n    }\n\n    setTooltip(false)\n  }\n\n    return (\n    <WastePerSalesContext.Provider\n        value={{\n          activeState,\n          toggleActive,\n          yearlyArray,\n          montlyArray,\n          handleYearly,\n          handleMonthly,\n          count,\n\n          totalCW,\n          totalPW,\n          totalSW,\n          totalWaste,\n          xAxis,\n          display,\n          totalSalesInputs,\n          percentageOfInputsAreZeros,\n          monthName,\n\n          selectedYear,\n\n          handleSearch,\n          searchError,\n          siteName,\n\n          // weekOneArray,\n          // weekTwoArray,\n          // weekThreeArray,\n          // weekFourArray,\n          // weekFiveArray,\n          // weekSixArray,\n          // weekSevenArray,\n          dates,\n\n          datesLabel,\n\n          foodWaste,\n          foodWasteXaxis,\n\n          wasteSteamValue,\n          salesInputDataArray,\n          showTooltip\n        }}\n    >\n        {props.children}\n    </WastePerSalesContext.Provider>\n    )\n}\n\nexport default WastePerSalesContextProvider","import React, { useContext, useEffect, useState} from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"chartjs-plugin-annotation\";\nimport \"chartjs-plugin-datalabels\";\n\nimport useWindowDimensions from \"../../libs/use-window-dimensions\";\n\nimport { WastePerSalesContext } from \"../../../../contexts/waste-per-sales-context\";\n\nimport { WasteCapContext } from \"../../../../contexts/waste-cap-context\";\n\nimport { AccordionHeading, AccordionBody } from \"../accordion\"\n\nimport {\n  setItemInLocalStorage,\n  maxNumForCoverPerWasteChartFunction\n} from \"../../../../utilities.js\";\n\nimport {\n  keepTwoDecimalPlacesWithoutRoundingUp,\n  isInt,\n  getIndexesForBackgroundColours\n} from \"../../../../helper.js\";\n\nimport Capping from \"./../reuseable-components/labels/capping\"\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nlet graphWidth = 500;\nlet graphHeight = 220;\n// let fontSize = 7\n\nexport default function WastePerSalesGraph(props) {\n\nconst {\n  allCappingValue,\n  wastePerSalesCoverWastes,\n  wastePerSalesSpoilageWastes,\n  wastePerSalesPrepWastes,\n} = useContext(WasteCapContext);\n\nconst [tooltipIsOpen, setTooltipIsOpen] = React.useState(true);\n\nconst {\n  totalCW,\n  count,\n  totalPW,\n  totalSW,\n  totalWaste,\n  monthName,\n  selectedYear,\n  totalSalesInputs,\n  percentageOfInputsAreZeros,\n  display,\n  toggleActive,\n  activeState,\n  montlyArray,\n  yearlyArray,\n\n  handleSearch,\n  searchError,\n  siteName,\n  // handleYearly,\n  handleMonthly,\n\n  wasteSteamValue,\n  salesInputDataArray,\n\n  datesLabel,\n  foodWaste,\n  foodWasteXaxis,\n\n  showTooltip\n} = useContext(WastePerSalesContext);\n\n  // const [ monthly, setMonthlyArray] = React.useState([])\n  // const [ yearly, setYearlyArray ] = React.useState([])\n\n  const [ displayValue, setDisplay ] = React.useState([])\n\n  const [totalCoverWaste, setTotalCW ] = useState(0)\n  const [totalPrepWaste, setTotalPW ] = useState(0)\n  const [totalSpoilageWaste, setTotalSW ] = useState(0)\n  const [totalAllWaste, setTotalWaste ] = useState(0)\n\n  const [showSearchError, setShowSearchError ] = useState(false)\n  const [year, setSelectedYear] = React.useState(0);\n\n  // let maxNumber = 1;\n  let [maxNumber, setMaxNumber] = React.useState(1);\n\n  // let barColors = \"rgba(15, 128, 140, 0.5)\"\n\n  const [ inputsData, setInputsData ] = useState([])\n  const [ wasteStreamValue, setWasteStreamValue] = useState([])\n\n  // const [label, setLabel ] = useState([])\n\n  useEffect(() => {\n\n    setWasteStreamValue(wasteSteamValue);\n    setInputsData(salesInputDataArray);\n\n    setDisplay(foodWaste)\n\n    // setMonthlyArray(montlyArray)\n    // setYearlyArray(yearlyArray)\n    // setDisplay(display)\n    setTotalCW(totalCW)\n    setTotalPW(totalPW)\n    setTotalSW(totalSW)\n    setTotalWaste(totalWaste)\n    let maxNumber = maxNumForCoverPerWasteChartFunction(display)\n    setMaxNumber(maxNumber)\n    setShowSearchError(searchError)\n    setSelectedYear(selectedYear)\n\n    if (props.wastePerSales && showTooltip) {\n      setTooltipIsOpen(true)\n    } else {\n      setTooltipIsOpen(false)\n    }\n\n    // setWeekOneArray(weekOneArray)\n    // setWeekTwo(weekTwoArray)\n    // setWeekThree(weekThreeArray)\n    // setWeekFour(weekFourArray)\n    // setWeekFive(weekFiveArray)\n    // setWeekSix(weekSixArray)\n    // setWeekSeven(weekSevenArray)\n    // setDates(dates)\n\n    // console.log(\"datesLabel\",datesLabel)\n    // setLabel(datesLabel)\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    montlyArray,\n    yearlyArray,\n    count,\n    display,\n    searchError,\n    selectedYear,\n\n    wasteSteamValue,\n    salesInputDataArray,\n\n    datesLabel,\n    foodWaste,\n    foodWasteXaxis,\n    props.wastePerSales\n  ])\n\n  // console.log(\"label\",label)\n\n  if (props.showPounds) {\n    if (display) {\n      const monetaryValues = display.map((data) => {\n        return data * 2.775;\n      })\n      maxNumber = maxNumForCoverPerWasteChartFunction(monetaryValues)\n\n    }\n  } else {\n    maxNumber = maxNumForCoverPerWasteChartFunction(display)\n  }\n\n  const { width } = useWindowDimensions();\n\n  if (width <= 700) {\n    graphWidth = 260;\n    graphHeight = 65;\n  } else if (width >= 1600) {\n    graphWidth = 700;\n    graphHeight = 250;\n  }\n\n  // if (activeState.coverSelector) {\n  //   barColors = \"rgba(140, 112, 140, 0.5)\"\n  // } else if (activeState.spoilageSelector) {\n  //   barColors = \"#ff8c00\"\n  // } else if (activeState.preparationSelector) {\n  //   barColors = \"rgba(133, 165, 101, 0.5)\"\n  // } else {\n  //   barColors = \"rgba(15, 128, 140, 0.5)\"\n  // }\n\n  let indexes;\n\n  let barColors = [\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n    \"rgb(178, 191, 80)\",\n  ];\n\n\n  console.log(\"foodWaste\",foodWaste)\n  console.log(\"allCappingValue\",allCappingValue)\n\n  indexes = getIndexesForBackgroundColours(foodWaste,allCappingValue, \"wastePerSalesCappingValues\", activeState);\n  console.log(\"indexes\",indexes);\n\n  if (indexes) {\n    indexes.targetIndexArray.map((data) => {\n      // console.log(\"data\",data)\n      // console.log(\"barColors\",barColors)\n\n      barColors[data] = \"rgba(255, 0, 0, 0.9)\";\n      return \"\"\n    })\n  }\n\n  return (\n\n    <>\n      {!props.hideReport &&\n      <>\n        <AccordionHeading>\n\n          <div className=\"section-title\">WASTE per SALES</div>\n          <div className=\"container\">\n            <span onClick={() =>\n                {\n                  props.setWastePerSales(!props.wastePerSales)\n                  setItemInLocalStorage(\"showWastePerSales\", !props.wastePerSales)\n                }\n                }>\n\n                {props.wastePerSales ? (\n                \"X \")\n                :\n                \"| | | \"\n                }\n            </span>\n          </div>\n\n        </AccordionHeading>\n        <AccordionBody open={props.wastePerSales}>\n\n        <div className= { props.showDarkTheme ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem\": \"originalTheme__reportBackgroundColor addPaddingOfHalveRem\"}>\n\n          <div className=\"graph__row addSpaceBetween\">\n            <div className=\"report-subtitle\">{siteName}</div>\n            <div className=\"graph__heading\">WASTE PER SALES\n              <div className=\"applyMarginRightAndLeft\">{props.showPounds? \"(£)\" : \"(Kg)\" } /Person in {monthName} {year}</div>\n            </div>\n          </div>\n\n          <div className=\"graph__row\">\n\n            <div className=\"graph__labelWrapper\">\n\n                <div className=\"graph__label applyMarginRightAndLeft\">{year}</div>\n                {\" \"}\n                <div className=\"graph__label applyMarginRightAndLeft\">{monthName}</div>\n                {\" \"}\n                <div className=\"graph__label applyMarginRightAndLeft\">\n                  Total Waste\n                </div>\n                <div className=\"applyMarginRightAndLeft graph__label\">\n                    C\n                </div>\n                <div\n                  id={1}\n                  key={0}\n                >\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                    {totalCoverWaste}\n                  </div>\n                </div>\n                <div>+</div>\n                <div className=\"graph__label applyMarginRightAndLeft\">\n                    S\n                 </div>\n                <div\n                  id={2}\n                  key={1}\n                >\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                    {totalSpoilageWaste}\n                  </div>\n                </div>\n                <div>+</div>\n                <div className=\"applyMarginRightAndLeft graph__label\">\n                  P\n                </div>\n                <div\n                  id={3}\n                  key={2}\n                >\n                  <div className={props.showDarkTheme? \"darkTheme__numberColor\" :\"applyBlueTuckGreen\"}>\n                    {totalPrepWaste} = {totalAllWaste}\n                  </div>\n                </div>\n              </div>\n\n          </div>\n\n          <div className=\"graph__row\">\n            <div className=\"graph__labelWrapper\">\n              <div className=\"graph__label applyMarginRightAndLeft\">{year} {monthName} Total Monthly Sales</div>\n              <div className=\"applyBlueTuckGreen\">{totalSalesInputs}</div>\n            </div>\n          </div>\n          <div className=\"graph__row\">\n            <div className=\"graph__labelWrapper\">\n              <div className=\"graph__label applyMarginRightAndLeft\">Do we have Monthly Sales Inputs data in {monthName} {year}? {percentageOfInputsAreZeros > 50 ? \"NO\" : \"YES\"}</div>\n            </div>\n          </div>\n\n\n          <div className=\"dashboard__wrapperForSelector\">\n              <div className=\"dashboard__selector\">\n\n                <Tooltip\n                  open={tooltipIsOpen}\n                  // onOpen={() => setTooltipIsOpen(true)}\n                  onClose={() => setTooltipIsOpen(false)}\n                  title=\"click on C, S, P or All waste stream\"\n                  arrow\n                >\n\n                <h2\n                  className={activeState.coverSelector ? \"active\" : \"inactive\"}\n                  id={0}\n                  onClick={() => {\n                    toggleActive(\"coverSelector\");\n                  }}\n                  >C</h2>\n\n                </Tooltip>\n\n                <Tooltip\n                  open={tooltipIsOpen}\n                  // onOpen={() => setTooltipIsOpen(true)}\n                  onClose={() => setTooltipIsOpen(false)}\n                  arrow\n                >\n\n                <h2\n                  className={activeState.spoilageSelector ? \"active\" : \"inactive\"}\n                  id={1}\n                  onClick={() => {\n                    toggleActive(\"spoilageSelector\");\n                  }}\n                  >S</h2>\n\n                </Tooltip>\n\n                <Tooltip\n                  open={tooltipIsOpen}\n                  // onOpen={() => setTooltipIsOpen(true)}\n                  onClose={() => setTooltipIsOpen(false)}\n                  arrow\n                >\n\n                <h2\n                  className={activeState.preparationSelector ? \"active\" : \"inactive\"}\n                  id={2}\n                  onClick={() => {\n                    toggleActive(\"preparationSelector\");\n                  }}\n                  >P</h2>\n\n                </Tooltip>\n\n                <h2\n                  className={activeState.allSelector ? \"active\" : \"inactive\"}\n                  id={3}\n                  onClick={() => {\n                    toggleActive(\"allSelector\");\n                  }}\n                  >ALL</h2>\n              </div>\n          </div>\n\n          <div style={{\n            display: \"flex\",\n            justifyContent: \"center\"\n          }}>\n            <Capping\n              coverWastes={wastePerSalesCoverWastes}\n              spoilageWastes={wastePerSalesSpoilageWastes}\n              prepWastes={wastePerSalesPrepWastes}\n              showPounds={props.showPounds}\n            />\n          </div>\n\n          <div className=\"dashboard__wrapperForGraph\">\n            <div\n              style={{\n                width: \"100%\",\n                overflow: \"auto\"\n             }}\n            >\n\n              <Bar\n                  data={{\n                    labels: foodWasteXaxis,\n                    wasteSteamsValue: wasteStreamValue,\n                    inputData: inputsData,\n                    datasets: [\n                      {\n                        label: \"array 1\",\n                        data: props.showPounds? displayValue.map((data) => {\n                          if (data) {\n                            return (data * 2.775).toFixed(2)\n                          }\n                        }) : displayValue,\n                        backgroundColor: barColors,\n                        categoryPercentage: 1.0,\n                        barPercentage: 0.5\n                      },\n                    ],\n                  }}\n                  width={graphWidth}\n                  height={graphHeight}\n                  options={{\n                    responsive: true,\n                    maintainAspectRatio: true,\n                    layout: {\n                      padding: {\n                          left: 25,\n                          right: 25,\n                          top: 10,\n                          bottom: 10\n                      }\n                    },\n                    scales: {\n                      xAxes: [\n                        {\n                          display: true,\n                          gridLines: {\n                            display: false,\n                          },\n                          ticks: {\n                            autoSkip: false,\n                            fontSize: 7\n                          },\n                        },\n                      ],\n                      yAxes: [\n                        {\n                          gridLines: {\n                            display: false,\n                          },\n                          ticks: {\n                            maxTicksLimit: 4,\n                            display: false,\n                            beginAtZero: true,\n                            max: maxNumber\n                          },\n                        },\n                      ],\n                    },\n\n                    plugins: {\n                      datalabels: {\n                        display: true,\n                        color: \"rgb(47, 64, 30)\",\n                        anchor: \"end\",\n                        align: \"end\",\n                        clamp: true,\n                        backgroundColor: null,\n                        borderColor: null,\n                        borderRadius: 4,\n                        borderWidth: 1,\n                        font: {\n                          // size: fontSize,\n                          size: 5,\n                          weight: 900,\n                        },\n                        offset: 4,\n                      },\n                    },\n\n                    tooltips: {\n                      enabled: true,\n                      callbacks: {\n                        title: function(tooltipItems, data) {\n                          return '';\n                        },\n                        label: function(tooltipItem, data) {\n\n                          // console.log(\"inputData\",data.inputData[tooltipItem.index]);\n                          // console.log(\"wasteSteamsValue\",data.wasteSteamsValue[tooltipItem.index]);\n\n                          // console.log(\"data.inputData\",data.inputData)\n                          // console.log(\"data.wasteSteamsValue\",data.wasteSteamsValue)\n\n                          // console.log(\"index\",tooltipItem.index);\n\n                          // console.log(\"data\",data);\n\n                          let inputData = data.inputData[tooltipItem.index];\n\n                          // console.log(\"data\",data)\n                          // console.log(\"tooltipItem.index\",tooltipItem.index)\n\n                          // console.log(\"data.wasteSteamsValue[tooltipItem.index]\",data.wasteSteamsValue[tooltipItem.index])\n                          // console.log(\"keepTwoDecimalPlacesWithoutRoundingUp(data.wasteSteamsValue[tooltipItem.index]\",keepTwoDecimalPlacesWithoutRoundingUp(data.wasteSteamsValue[tooltipItem.index]))\n\n                          let wasteSteamValue = isInt(data.wasteSteamsValue[tooltipItem.index]) ? data.wasteSteamsValue[tooltipItem.index] :  keepTwoDecimalPlacesWithoutRoundingUp(data.wasteSteamsValue[tooltipItem.index])\n\n                          const val = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n                          return val + \"(\" +  wasteSteamValue + \"/\" + inputData + \")\"\n                        }\n                      }\n                    }\n\n                  }}\n              />\n\n            </div>\n          </div>\n\n\n          <div className=\"graph__row\">\n              <div className=\"dateLabel__wrapper\">\n                <div className=\"dateLabel__coverwastesSquare\"></div>\n                COVER\n                <div className=\"dateLabel__spoliageSquare\"></div>\n                SPOILAGE\n                <div className=\"dateLabel__preparationSquare\"></div>\n                PREPARATION\n                <div className=\"dateLabel__allWasteSquare\"></div>\n                ALL\n              </div>\n          </div>\n\n\n          <div className=\"graph__row\">\n            <div className=\"graph__selector-spacing\">\n              <div className=\"graph__title\">MONTH:\n              </div>\n\n              {montlyArray.map((month, i) => {\n                return (\n                  <div className={month.show? \"active applyMarginRightAndLeft applyPurpleColor\": \"displayNone\"} key={i} >\n                    {month.month}\n                  </div>\n                )\n              })}\n\n              <h2 className=\"applyMarginRightAndLeft clickable\" onClick={() => {handleMonthly(\"NEXT\")}}>NEXT</h2>\n              <h2 className=\"clickable\" onClick={() => {handleMonthly(\"PREV\")}}>PREV</h2>\n            </div>\n            {/* <div className=\"graph__selector-spacing\">\n              <div className=\"graph__title\">YEAR:\n              </div>\n              {yearly.map((year, i) =>{\n                return (\n                  <div className={year.show? \"active applyMarginRightAndLeft applyPurpleColor\": \"displayNone\"} key={i} >\n                    {year.year}\n                  </div>\n                )\n              })}\n              <h2 className=\"applyMarginRightAndLeft clickable\" onClick={() => {handleYearly(\"NEXT\")}}>NEXT</h2>\n              <h2 className=\"clickable\" onClick={() => {handleYearly(\"PREV\")}}>PREV</h2>\n            </div> */}\n            <div className=\"graph__title clickable applyPurpleColor\" onClick={() => {handleSearch()}}>\n              SEARCH\n            </div>\n          </div>\n\n          {/* <div className=\"graph__row\">\n             <div className=\"warning\">\n              {showSearchError? \"Please note the Data you have requested is not available\":\"\"}\n             </div>\n          </div> */}\n\n          <div className=\"graph__row\">\n             <div className=\"graph__message\">\n              (Starts on the first Monday of the Month)\n             </div>\n          </div>\n\n        </div>\n\n      </AccordionBody>\n      </>\n      }\n    </>\n\n  );\n}\n","import React, { createContext, useEffect, useState } from 'react'\nimport {\n  getYear,\n} from \"../utilities\";\nimport { getWasteOnAdayOfTheWeek } from \"../api\";\nexport const WasteOnAdayOfTheWeekContext = createContext()\n\nconst WasteOnAdayOfTheWeekProvider = props => {\n\n  const [wasteOnAdayOfTheWeekData, setWasteOnAdayOfTheWeek] = useState([]);\n  const [day, setDay] = React.useState(0);\n  const [year, setYear] = React.useState(getYear());\n  const [siteName, setSiteName] = React.useState();\n  const [startDate, setStartDate] = React.useState(props.startDate);\n\n  useEffect(() => {\n    if (props.companyId && props.siteName) {\n      getWasteOnAdayOfTheWeek(props.companyId, props.companyName, props.siteName, day, year)\n      .then((data) =>{\n        console.log(\"data\",data)\n        setWasteOnAdayOfTheWeek(data.responseData.wasteOnADayOfTheWeek[0]);\n        setSiteName(props.siteName.replace(/[^A-Za-z]+/g, ''));\n        setStartDate(props.startDate)\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.siteName, day, year])\n\n  return (\n    <WasteOnAdayOfTheWeekContext.Provider\n       value={{\n        year,\n        day,\n        setYear,\n        setDay,\n        siteName,\n        wasteOnAdayOfTheWeekData,\n        startDate,\n      }}\n    >\n      {props.children}\n    </WasteOnAdayOfTheWeekContext.Provider>\n  )\n}\n\nexport default WasteOnAdayOfTheWeekProvider\n","import styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n  margin: 0px auto;\n  max-width: 500px;\n  height: 500px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n`;\n\nexport const MainContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  height: 220px;\n  overflow: auto;\n\n`;\n\nexport const BarChartContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: center;\n  ${({ isGap }) => isGap && `\n    margin-right: 1rem;\n  `}\n`;\n\nexport const Chart = css`\n  margin-top: 10px;\n  /* width: 0.3rem; */\n  width: 0.5rem;\n  &:hover {\n    opacity: 0.8;\n  }\n  @media (max-width: 992px) {\n    width: 0.7rem;\n  }\n  @media (max-width: 768px) {\n    width: 0.3rem;\n  }\n`;\n\nexport const Number = styled.span`\n  /* width: 23px; */\n  width: 30px;\n  font-size: 0.7rem;\n  text-align: center;\n  color: ${(props) => props.color};\n`;\n\nexport const MakeBar = styled.div`\n  height: ${(props) => props.height}%;\n  background-color: ${(props) => props.color};\n  ${Chart};\n`;\n\nexport const BlackLine = styled.div`\n  width: 100%;\n  height: 5px;\n  background-color: grey;\n`;\n","import React, { useContext, useEffect, useState } from \"react\";\n\n// import useSpinner from \"../../libs/use-spinner\";\nimport { WasteOnAdayOfTheWeekContext } from \"../../../../contexts/waste-on-a-day-of-the-week-context\";\nimport { WasteCapContext } from \"../../../../contexts/waste-cap-context\";\nimport { AccordionHeading, AccordionBody } from \"../accordion\";\n\nimport LeftArr from \"../../../../image/previous_icon.svg\";\nimport RightArr from \"../../../../image/next_icon.svg\";\n\nimport {\n  MainContainer,\n  BarChartContainer,\n  Number,\n  MakeBar,\n} from \"../../../../styles/graph/barchart.styles\";\n\nimport { setItemInLocalStorage, roundedUpNumberAndTurnBackToNumber } from \"../../../../utilities.js\";\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nexport default function WasteOnAdayOfTheWeek(props) {\n\n  const [tooltipIsOpen, setTooltipIsOpen] = React.useState(true);\n\n  const {\n    year,\n    day,\n    setYear,\n    setDay,\n    wasteOnAdayOfTheWeekData,\n    siteName,\n    startDate,\n  } = useContext(WasteOnAdayOfTheWeekContext);\n\n  const [gapArray, setGapArray] = useState([]);\n\n  const getGapArray = (input) => {\n    wasteOnAdayOfTheWeekData.weeks.map((num) => {\n      for (let i = 1; i <= num; i++) {\n        if (i === num) {\n          input.push(1);\n        } else {\n          input.push(0);\n        }\n      }\n      return \"\"\n    });\n    return input;\n  };\n\n  useEffect(() => {\n    if (wasteOnAdayOfTheWeekData.weeks) {\n      setGapArray(getGapArray([]));\n    }\n\n    if (props.showWasteOnAdayOfTheWeek) {\n      setTooltipIsOpen(true);\n    } else {\n      setTooltipIsOpen(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [wasteOnAdayOfTheWeekData, props]);\n\n\n  const getMonthNum = (index) => {\n    let ret = 0, rem = index;\n    wasteOnAdayOfTheWeekData.weeks.map((num) => {\n      rem -= num\n      if (rem >= 0)\n        ret++;\n        return \"\";\n    })\n    return ret;\n  }\n\n  const { showPounds } = useContext(WasteCapContext);\n\n  const { dailyCoverWastes, dailySpoliageWastes, dailyPeparationWastes } =\n    useContext(WasteCapContext);\n\n  let totalCoverCap = 0;\n  let totalSpoliageCap = 0;\n  let totalPreparationCap = 0;\n\n  if (showPounds) {\n    totalCoverCap = roundedUpNumberAndTurnBackToNumber(\n      dailyCoverWastes * 2.775\n    );\n    totalSpoliageCap = roundedUpNumberAndTurnBackToNumber(\n      dailySpoliageWastes * 2.775\n    );\n    totalPreparationCap = roundedUpNumberAndTurnBackToNumber(\n      dailyPeparationWastes * 2.775\n    );\n  } else {\n    totalCoverCap = dailyCoverWastes > 0 ? dailyCoverWastes : 0;\n    totalSpoliageCap = dailySpoliageWastes > 0 ? dailySpoliageWastes : 0;\n    totalPreparationCap = dailyPeparationWastes > 0 ? dailyPeparationWastes : 0;\n  }\n\n  const [activeState, setActiveState] = React.useState(\"cover\");\n  const [capLimit, setCapLimit] = React.useState(dailyCoverWastes);\n\n  const weeks = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n\n  let months = [\n    \"JAN\",\n    \"FEB\",\n    \"MAR\",\n    \"APR\",\n    \"MAY\",\n    \"JUNE\",\n    \"JULY\",\n    \"AUG\",\n    \"SEP\",\n    \"OCT\",\n    \"NOV\",\n    \"DEC\",\n  ];\n\n  const onPrevYear = () => {\n    let startYear = parseInt(startDate.split(\"-\")[0]);\n    console.log(\"startyear: \", startYear, year, startYear > year);\n    if (startYear < year) {\n      setYear(year - 1);\n    }\n  };\n\n  const onNextYear = () => {\n    const date = new Date();\n    let currentYear = date.getFullYear();\n    if (currentYear > year) {\n      setYear(year + 1);\n    }\n  };\n\n  return (\n    <div\n      className={\n        props.hideReport ? \"dailyWasteChart displayNone\" : \"dailyWasteChart\"\n      }\n    >\n      <AccordionHeading>\n        <div className=\"section-title\">WASTE ON A DAY OF THE WEEK</div>\n        <div className=\"container\">\n          <span\n            onClick={() => {\n              props.setShowWasteOnAdayOfTheWeek(\n                !props.showWasteOnAdayOfTheWeek\n              );\n              setItemInLocalStorage(\n                \"wasteOnAdayOfTheWeek\",\n                !props.showWasteOnAdayOfTheWeek\n              );\n            }}\n          >\n            {props.showWasteOnAdayOfTheWeek ? \"X \" : \"| | | \"}\n          </span>\n        </div>\n      </AccordionHeading>\n\n      <AccordionBody open={props.showWasteOnAdayOfTheWeek}>\n        <div\n          className={\n            props.showDarkTheme\n              ? \"darkTheme__reportBackgroundColor addPaddingOfHalveRem\"\n              : \"originalTheme__reportBackgroundColor addPaddingOfHalveRem\"\n          }\n        >\n          <div className=\"my-2 graph__row space-between\">\n            <div className=\"report-subtitle\">{siteName?.toLowerCase()}</div>\n            <div className=\"graph__heading\">\n              <div className=\"year-ele\">YEAR: {year}</div>\n              <img\n                className=\"arr-btn year-ele\"\n                src={LeftArr}\n                onClick={onPrevYear}\n                alt=\"prev arrow\"\n              />\n              <img\n                className=\"arr-btn year-ele\"\n                src={RightArr}\n                onClick={onNextYear}\n                alt=\"next arrow\"\n              />\n            </div>\n            <b className=\"capping\">\n              <div className=\"applyPurpleColor cooperHewittBold year-ele\">\n                Cap\n              </div>\n              <div className=\"capping__text  year-ele\">\n                <div\n                  className={\n                    props.showDarkTheme\n                      ? \"darkTheme__selectedLabelColor cooperHewittBold\"\n                      : \"applyPurpleColor cooperHewittBold\"\n                  }\n                >\n                  {\" \"}\n                  C\n                </div>\n              </div>\n              <div\n                className={\n                  props.showDarkTheme\n                    ? \"darkTheme__numberColor\"\n                    : \"applyBlueTuckGreen\"\n                }\n              >\n                {totalCoverCap}\n              </div>\n              <div className=\"capping__text  year-ele applyPurpleColor\">\n                <div\n                  className={\n                    props.showDarkTheme\n                      ? \"darkTheme__selectedLabelColor cooperHewittBold\"\n                      : \"applyPurpleColor cooperHewittBold\"\n                  }\n                >\n                  {\" \"}\n                  S\n                </div>\n              </div>\n              <div\n                className={\n                  props.showDarkTheme\n                    ? \"darkTheme__numberColor\"\n                    : \"applyBlueTuckGreen\"\n                }\n              >\n                {totalSpoliageCap}\n              </div>\n              <div className=\"capping__text  year-ele applyPurpleColor cooperHewittBold\">\n                <div\n                  className={\n                    props.showDarkTheme\n                      ? \"darkTheme__selectedLabelColor cooperHewittBold\"\n                      : \"applyPurpleColor cooperHewittBold\"\n                  }\n                >\n                  {\" \"}\n                  P\n                </div>\n              </div>\n              <div\n                className={\n                  props.showDarkTheme\n                    ? \"darkTheme__numberColor\"\n                    : \"applyBlueTuckGreen\"\n                }\n              >\n                {totalPreparationCap}\n              </div>\n            </b>\n          </div>\n          <div className=\"space-between-center inactive week-box\">\n            <div className=\"applyBlueTuckGreen font-bold\">Waste on a:</div>\n            <div className=\"weekly__selector\">\n              {weeks.map((dayName, index) => (\n                <div\n                  className={\n                    (day === (index + 1) % 7) ? \"week-active font-bold\" : \"week-inactive\"\n                  }\n                  key={index}\n                  onClick={() => {\n                    setDay((index + 1)%7);\n                  }}\n                >\n                  {dayName}\n                </div>\n              ))}\n            </div>\n            <div className=\"applyBlueTuckGreen font-bold\">Each Week</div>\n          </div>\n          <div className=\"mt-1 dashboard__wrapperForSelector\">\n            <div className=\"dashboard__selector\">\n\n            <Tooltip\n                open={tooltipIsOpen}\n                // onOpen={() => setTooltipIsOpen(true)}\n                onClose={() => setTooltipIsOpen(false)}\n                title=\"click on C, S, P or All waste stream\"\n                arrow\n              >\n\n              <h2\n                className={activeState === \"cover\" ? \"active\" : \"inactive\"}\n                id={0}\n                onClick={() => {\n                  setActiveState(\"cover\");\n                  setCapLimit(dailyCoverWastes);\n                }}\n              >\n                C\n              </h2>\n\n            </Tooltip>\n\n              <Tooltip\n                open={tooltipIsOpen}\n                // onOpen={() => setTooltipIsOpen(true)}\n                onClose={() => setTooltipIsOpen(false)}\n                arrow\n              >\n\n              <h2\n                className={activeState === \"spoilage\" ? \"active\" : \"inactive\"}\n                id={1}\n                onClick={() => {\n                  setActiveState(\"spoilage\");\n                  setCapLimit(dailySpoliageWastes);\n                }}\n              >\n                S\n              </h2>\n\n              </Tooltip>\n\n              <Tooltip\n                open={tooltipIsOpen}\n                // onOpen={() => setTooltipIsOpen(true)}\n                onClose={() => setTooltipIsOpen(false)}\n                arrow\n              >\n\n              <h2\n                className={\n                  activeState === \"preparation\" ? \"active\" : \"inactive\"\n                }\n                id={2}\n                onClick={() => {\n                  setActiveState(\"preparation\");\n                  setCapLimit(dailyPeparationWastes);\n                }}\n              >\n                P\n              </h2>\n\n              </Tooltip>\n\n              <Tooltip\n                open={tooltipIsOpen}\n                // onOpen={() => setTooltipIsOpen(true)}\n                onClose={() => setTooltipIsOpen(false)}\n                arrow\n              >\n\n              <h2\n                className={activeState === \"all\" ? \"active\" : \"inactive\"}\n                id={3}\n                onClick={() => {\n                  setActiveState(\"all\");\n                  setCapLimit(\n                    dailyCoverWastes +\n                      dailySpoliageWastes +\n                      dailyPeparationWastes\n                  );\n                }}\n              >\n                ALL\n              </h2>\n\n              </Tooltip>\n\n            </div>\n            <div className=\"font-bold\">\n              {activeState.charAt(0).toUpperCase() + activeState.slice(1)} waste\n              shown\n            </div>\n          </div>\n          <div className=\"graph__row\">\n            <MainContainer>\n              {wasteOnAdayOfTheWeekData &&\n                wasteOnAdayOfTheWeekData[activeState + \"Waste\"] &&\n                wasteOnAdayOfTheWeekData[activeState + \"Waste\"].map(\n                  (val, index) => {\n                    const chart =\n                      <BarChartContainer key={index} isGap={gapArray[index]}>\n                        <Number color={\"rgba(34, 73, 33)\"}>\n                          {/* {showPounds ? Math.round(val * 2.775) : Math.round(val)} */}\n                          {showPounds ? Math.round(val * 2.775) : val}\n                        </Number>\n                        <MakeBar\n                          height={val * 1.3}\n                          color={\n                            showPounds\n                             ?\n                              capLimit === 0\n                                ? Math.round(val * 2.775) >= Math.round(dailyCoverWastes * 2.775)\n                                  ? \"#e72226\"\n                                  : \"#a2a42b\"\n                                : Math.round(val * 2.775) >= Math.round(capLimit * 2.775)\n                                  ? \"#e72226\"\n                                  : \"#a2a42b\"\n                             :\n                              capLimit === 0\n                                ? Math.round(val) >= Math.round(dailyCoverWastes)\n                                  ? \"#e72226\"\n                                  : \"#a2a42b\"\n                                : Math.round(val) >= Math.round(capLimit)\n                                  ? \"#e72226\"\n                                  : \"#a2a42b\"\n                          }\n                        />\n                        {gapArray[index + 2] === 1 ? (\n                          <Number color={\"#0f808c\"} style={{marginTop: \"5px\"}}>\n                            {months[getMonthNum(index)]}\n                          </Number>\n                        ) : (\n                          <div style={{width: \"23px\", marginTop: \"19px\"}}></div>\n                        )}\n                      </BarChartContainer>\n                    return chart;\n                  }\n                )}\n            </MainContainer>\n          </div>\n        </div>\n      </AccordionBody>\n    </div>\n  );\n}\n","import React from 'react'\n\nexport default function Subheadings(props) {\n    return (\n        <div className=\"DailySalesVsWasteReport__heading\">\n            <div\n            className=\"DailySalesVsWasteReport__label\"\n            >\n                <div className=\"applyPurpleColor cooperHewittBold\">{props.site}</div>\n                <div className=\"section-title\">{props.title}</div>\n                <div className=\"applyPurpleColor cooperHewittBold\">{props.date}</div>\n            </div>\n        </div>\n    )\n}\n","\nimport React, { useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport Chart from \"chart.js\";\nimport \"chartjs-plugin-annotation\";\nimport \"chartjs-plugin-datalabels\";\n\nimport useWindowDimensions from \"../../../../libs/use-window-dimensions\";\n\nexport default function SlackChart(props) {\n  Chart.defaults.global.defaultFontFamily = \"CooperHewitt-Book\";\n\n  let graphHeight = 130;\n  let graphWidth = 400;\n\n  const { width } = useWindowDimensions();\n\n  if (width <= 700) {\n    graphWidth = 260;\n    graphHeight = 279;\n  }\n\nuseEffect(() => {\n\n// eslint-disable-next-line react-hooks/exhaustive-deps\n},[props.chartData]);\n\n  return (\n\n          <Bar\n            data={{\n              labels: [\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\",\n        \"5\",\n        \"6\",\n        \"7\"\n      ],\n              datasets: props.chartData\n            }}\n            width={graphWidth}\n            height={graphHeight}\n            options={{\n              responsive: true,\n              maintainAspectRatio: true,\n              legend: {display: true},\n              scales: {\n\n                xAxes: [\n                  {\n                    stacked: true,\n                    gridLines: {\n                      display: false,\n                    },\n                    ticks: {\n                      fontColor: \"rgb(15, 128, 140)\",\n                    },\n                    display: false,\n                  },\n                ],\n                yAxes: [\n                  {\n                    stacked: true,\n                    display: false,\n                    gridLines: {\n                      display: false,\n                    }\n                  },\n                ],\n              },\n\n              plugins: {\n                datalabels: {\n                  display: false,\n                  anchor: \"top\",\n                  align: \"middle\",\n                //   color: monthlyWasteTextColor,\n                  font: {\n                          size: 9,\n                          weight: \"bold\",\n                        }\n                },\n              },\n            }}\n          />\n\n  );\n}\n\n","import React, { createContext, useEffect, useState } from 'react'\nimport { getMenuInput, getTopCausesOfWaste } from \"../api\";\nimport { getWeekOfTheYear } from \"./../utilities.js\"\n\nexport const DailySalesVsWasteContext = createContext()\n\nconst DailySalesVsWasteInputsProvider = props => {\n\n  const [dailyMenuInputs, setDailyMenuInputs] = useState([]);\n\n  const [siteName, setSiteName] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n\n  const [dataFromDB, setData] = useState([]);\n  const [chartData, setChartData] = useState([]);\n\n  const [allFormatedData, setAllFormatedData] = useState([])\n\n  const [index, setIndex] = useState(0);\n\n  const [allMenuItems, setAllMenuItems] = useState([]);\n\n  const [firstDayOfTheWeek, setFirstDayOfTheWeek] = useState(1);\n\n  useEffect(() => {\n\n    // console.log(\"daily-sales-vs-waste-context updateGraph\", props.updateGraph)\n\n    // console.log(\"props.siteName\",props.siteName)\n    // console.log(\"props.companyID\",props.companyId)\n    // console.log(\"props.companyName\",props.companyName)\n\n    if (props.companyId && props.companyName && props.siteName) {\n\n        const d = new Date();\n        const n = d.getDay()\n        let indexNumber = n === 0 ? 6: n - 1;\n\n        getMenuInputData(props.companyId, props.companyName, props.siteName, indexNumber)\n\n        getTopCausesOfWaste(props.companyId, props.companyName, props.siteName).then((data) => {\n          setData(data.newMenuWaste)\n          filterDataForChart(data.newMenuWaste)\n        });\n\n    }\n   // eslint-disable-next-line react-hooks/exhaustive-deps\n}, [ props.siteName, props.companyId, props.companyName, props.updateGraph])\n\n\nconst filterDataForChart = (dataFromDB) => {\n  // console.log(\"dataFromDB\",dataFromDB)\n\n  const noEmptyValues = dataFromDB.map((item) => {\n    const result = item.menuItems.filter((val) => {\n      return val.itemName !== \"\"\n    })\n    // console.log(\"result\",result)\n    return result;\n  })\n\n  // console.log(\"noEmptyValues\",noEmptyValues)\n\n  const removeEmptyArray = noEmptyValues.filter((val) => {\n    // console.log(\"val\",val.length)\n    return val.length !== 0;\n  });\n\n  // console.log(\"removeEmptyArray\",removeEmptyArray)\n\n\n  let putAlllabelsInArray = []\n\n  removeEmptyArray.map((item) => {\n    item.map((data) => {\n      putAlllabelsInArray.push(data.itemName.toLowerCase())\n      return \"\";\n    })\n    return \"\";\n  })\n\n  // console.log(\"putAlllabelsInArray\",putAlllabelsInArray)\n\n  const uniqueArray = removeArrayDuplicates(putAlllabelsInArray)\n  // console.log(\"uniqueArray\",uniqueArray)\n\n  let dataSet = []\n\n  const colors = [\n  \"rgb(133, 165, 101)\",\n  \"rgb(15, 128, 140)\",\n  \"rgb(140, 112, 140)\",\n  \"rgb(47, 67, 30)\",\n  \"rgb(56, 166, 126)\",\n  \"rgb(106, 217, 123)\",\n  \"rgb(188, 242, 107)\",\n  \"rgb(47, 64, 30)\",\n  \"rgb(68, 89, 46)\",\n  \"rgb(178, 191, 80)\",\n\n  \"rgb(133, 165, 101)\",\n  \"rgb(15, 128, 140)\",\n  \"rgb(140, 112, 140)\",\n  \"rgb(47, 67, 30)\",\n  \"rgb(56, 166, 126)\",\n  \"rgb(106, 217, 123)\",\n  \"rgb(188, 242, 107)\",\n  \"rgb(47, 64, 30)\",\n  \"rgb(68, 89, 46)\",\n  \"rgb(178, 191, 80)\",\n\n  \"rgb(133, 165, 101)\",\n  \"rgb(15, 128, 140)\",\n  \"rgb(140, 112, 140)\",\n  \"rgb(47, 67, 30)\",\n  \"rgb(56, 166, 126)\",\n  \"rgb(106, 217, 123)\",\n  \"rgb(188, 242, 107)\",\n  \"rgb(47, 64, 30)\",\n  \"rgb(68, 89, 46)\",\n  \"rgb(178, 191, 80)\",\n\n  \"rgb(133, 165, 101)\",\n  \"rgb(15, 128, 140)\",\n  \"rgb(140, 112, 140)\",\n  \"rgb(47, 67, 30)\",\n  \"rgb(56, 166, 126)\",\n  \"rgb(106, 217, 123)\",\n  \"rgb(188, 242, 107)\",\n  \"rgb(47, 64, 30)\",\n  \"rgb(68, 89, 46)\",\n  \"rgb(178, 191, 80)\",\n\n  \"rgb(133, 165, 101)\",\n  \"rgb(15, 128, 140)\",\n  \"rgb(140, 112, 140)\",\n  \"rgb(47, 67, 30)\",\n  \"rgb(56, 166, 126)\",\n  \"rgb(106, 217, 123)\",\n  \"rgb(188, 242, 107)\",\n  \"rgb(47, 64, 30)\",\n  \"rgb(68, 89, 46)\",\n  \"rgb(178, 191, 80)\",\n\n  \"rgb(133, 165, 101)\",\n  \"rgb(15, 128, 140)\",\n  \"rgb(140, 112, 140)\",\n  \"rgb(47, 67, 30)\",\n  \"rgb(56, 166, 126)\",\n  \"rgb(106, 217, 123)\",\n  \"rgb(188, 242, 107)\",\n  \"rgb(47, 64, 30)\",\n  \"rgb(68, 89, 46)\",\n  \"rgb(178, 191, 80)\",\n\n  \"rgb(133, 165, 101)\",\n  \"rgb(15, 128, 140)\",\n  \"rgb(140, 112, 140)\",\n  \"rgb(47, 67, 30)\",\n  \"rgb(56, 166, 126)\",\n  \"rgb(106, 217, 123)\",\n  \"rgb(188, 242, 107)\",\n  \"rgb(47, 64, 30)\",\n  \"rgb(68, 89, 46)\",\n  \"rgb(178, 191, 80)\",\n  ]\n\n  uniqueArray.map((label, i) => {\n    const dataFormatForChart = {\n      label: label,\n      data: [0, 0, 0, 0, 0, 0, 0],\n      fill: false,\n      backgroundColor: colors[i],\n      minBarLength: 0.3,\n      barPercentage: 0.7,\n      categoryPercentage: 0.7,\n    };\n    dataSet.push(dataFormatForChart)\n    return \"\";\n  })\n\n  // console.log(\"dataSet\",dataSet)\n  // console.log(\"dataFromDB\",dataFromDB)\n\n  dataFromDB.map((data, i) => {\n    // console.log(\"menuItems\",data.menuItems)\n    data.menuItems.map((item) => {\n      // console.log(\"item.itemName\",item.itemName)\n      dataSet.map((val) => {\n\n        // console.log(\"val.lable === item.itemName.toLowerCase()\",val.label === item.itemName.toLowerCase())\n\n        if (val.label === item.itemName.toLowerCase()) {\n\n          // console.log(\"true\")\n          // console.log(\"date\",i)\n          // console.log(\"totalWastePerItem\",item.totalWastePerItem)\n          val.data[i] = item.totalWastePerItem\n          return \"\";\n        } else {\n          // console.log(\"false\")\n          return \"\";\n        }\n\n      })\n      return \"\";\n    })\n    return \"\";\n  })\n\n  // console.log(\"after dataSet\",dataSet)\n\n  var d = new Date();\n  var n = d.getDay()\n  let day;\n  if (n=== 0) {\n    day = 6;\n  } else {\n    day = n - 1;\n  }\n\n  let result = dataSet.filter((item) => {\n    return item.data[day] > 0;\n  });\n\n  setIndex(day)\n  // console.log(\"result\",result);\n  setChartData(result)\n  // setChartData(dataSet)\n  setAllFormatedData(dataSet)\n}\n\nconst removeArrayDuplicates = (data) => {\n  // https://medium.com/dailyjs/how-to-remove-array-duplicates-in-es6-5daa8789641c\n  let array = data\n  // console.log(\"array\",array)\n  const uniqueSet = new Set(array);\n  const backToArray = [...uniqueSet]\n  // console.log(\"backToArray\",backToArray)\n  return backToArray;\n}\n\n\nconst updateDailySalesVsWasteInput = (companyId, companyName, siteName, indexNumber) => {\n  getMenuInputData(companyId, companyName, siteName, indexNumber);\n};\n\nconst getMenuInputData = (companyId, companyName, siteName, index) => {\n    getMenuInput(companyId, companyName, siteName).then((data) => {\n\n        console.log(\"index\",index);\n\n        let indexNumber = index;\n\n        setSiteName(siteName);\n        setId(companyId);\n        setCompanyName(companyName);\n\n        // const d = new Date();\n        // const n = d.getDay()\n        // let indexNumber = n === 0 ? 6: n - 1;\n\n        const weekOfTheYear = getWeekOfTheYear()\n        // console.log(\"weekOfTheYear\",weekOfTheYear)\n        // console.log(\"n\",n)\n\n        data.map((item) => {\n\n          // console.log(\"item.menuWaste\",item.menuWaste)\n\n            const weekOfTheYearData = item.menuWaste.filter((val) => {\n              // console.log(\"weekOfTheYear\",weekOfTheYear)\n              // console.log(\"val.weekOfYear\",val.weekOfYear)\n\n                return val.weekOfYear === (weekOfTheYear).toString()\n            })\n\n            // console.log(\"weekOfTheYearData\",weekOfTheYearData)\n\n            const getFirstDayOfTheWeek = weekOfTheYearData.map((data) => {\n              return data.Date;\n            })\n\n            setFirstDayOfTheWeek(getFirstDayOfTheWeek[0])\n\n            // console.log(\"getFirstDayOfTheWeek\",getFirstDayOfTheWeek[0])\n\n            setAllMenuItems(weekOfTheYearData);\n            // console.log(\"n\",n)\n            // console.log(\"indexNumber\",indexNumber)\n\n            const dailyMenuInputsData = weekOfTheYearData.map((data) => {\n                return data.menuWasteWeek[indexNumber]\n            })\n\n            // console.log(\"dailyMenuInputsData\",dailyMenuInputsData)\n            const dailyMenuInputsDataAfterFiltered = filterOutEmptyObjects(dailyMenuInputsData[0])\n\n            setDailyMenuInputs(dailyMenuInputsDataAfterFiltered)\n            return \"\"\n        })\n    }).catch((err) =>{\n        console.log(\"err\",err)\n    })\n}\n\nconst filterOutEmptyObjects = (data) => {\n  // console.log(\"dailyMenuInputsData\",dailyMenuInputsData)\n\n  // const filteredArray = dailyMenuInputsData.map((data, i) => {\n    // console.log(\"data\",data)\n\n    const results = data.filter((item, i) => {\n      // console.log(\"item\",item)\n      // console.log(\"i\",i)\n      // console.log(\"  item.menuItem !==  && item.menuItem ==! menu item \",item.menuItem !== \"\" && item.menuItem !== \"menu item\")\n\n      return item.menuItem !== \"\" && item.menuItem !== \"menu item\";\n    })\n    // console.log(\"results\",results)\n    return results;\n  // })\n  // return filteredArray;\n}\n\nconst filterDataByDate = (index) => {\n  // console.log(\"index\",index);\n  // console.log(\"allFormatedData\",allFormatedData);\n\n  let result = allFormatedData.filter((item) => {\n      return item.data[index] > 0;\n  });\n  setChartData(result)\n  setIndex(index)\n  // console.log(\"result\",result)\n\n}\n\nconst filterMenuItems = (selectedPage) => {\n  // console.log(\"selectedPage\",selectedPage);\n\n  const menuItemsForSelectedPage = allMenuItems.map((data) => {\n    return data.menuWasteWeek[selectedPage]\n  })\n\n  // console.log(\"menuItemsForSelectedPage\",menuItemsForSelectedPage);\n\n  const dailyMenuInputsDataAfterFiltered = filterOutEmptyObjects(menuItemsForSelectedPage[0])\n\n  // console.log(\"dailyMenuInputsDataAfterFiltered\",dailyMenuInputsDataAfterFiltered);\n\n  setDailyMenuInputs(dailyMenuInputsDataAfterFiltered)\n  return \"\"\n\n};\n\n  return (\n    <DailySalesVsWasteContext.Provider\n      value={{\n        dailyMenuInputs,\n        siteName,\n        companyName,\n        id,\n        filterOutEmptyObjects,\n        chartData,\n        dataFromDB,\n        filterDataByDate,\n        index,\n        filterMenuItems,\n        firstDayOfTheWeek,\n        updateDailySalesVsWasteInput\n      }}\n    >\n      {props.children}\n    </DailySalesVsWasteContext.Provider>\n  )\n}\n\nexport default DailySalesVsWasteInputsProvider","import React, { useState, useContext, useEffect } from \"react\";\nimport { AccordionHeading, AccordionBody } from \"../accordion\";\nimport { setItemInLocalStorage, formatSiteName, roundedUpNumberAndTurnBackToNumber } from \"../../../../utilities.js\";\n\nimport Subheadings from \"./../reuseable-components/labels/subheadings\"\nimport SlackChart from \"./../reuseable-components/charts/slack-chart/slack-chart\"\n\nimport { DailySalesVsWasteContext } from \"../../../../contexts/daily-sales-vs-waste-context\";\n\nexport default function DailySalesVsWasteReport(props) {\n\n  const {\n    siteName,\n    companyName,\n    id,\n    chartData,\n    dataFromDB,\n    filterDataByDate,\n    index\n   } = useContext(DailySalesVsWasteContext);\n\n  const [dateLabels, setDateLabels] = useState([]);\n  const [formatedDate, setFormatedDate] = useState([]);\n\n  useEffect(() => {\n\n    setDateLabels(props.weeklyDailyRange)\n    setFormatedDate(props.weeklyDailyLabels)\n\n    // console.log(\"chartData\", chartData)\n\n   // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[siteName, companyName, id, props, chartData])\n\n  return (\n    <div\n      className={\n        props.hideReport ? \"dailyWasteChart displayNone\" : \"dailyWasteChart\"\n      }\n    >\n      <AccordionHeading>\n        <div className=\"section-title\">DAILY SALES VS WASTE REPORT</div>\n        <div className=\"container\">\n          <span\n            onClick={() => {\n              props.setShowDailySalesVsWasteReport(\n                !props.showDailySalesVsWasteReport\n              );\n              setItemInLocalStorage(\n                \"dailySalesVsWasteReport\",\n                !props.showDailySalesVsWasteReport\n              );\n            }}\n          >\n            {props.showDailySalesVsWasteReport ? \"X \" : \"| | | \"}\n          </span>\n        </div>\n      </AccordionHeading>\n\n      <AccordionBody open={props.showDailySalesVsWasteReport}>\n        <div className=\"originalTheme__reportBackgroundColor addPaddingOfHalveRem\">\n            <Subheadings\n              site={formatSiteName(siteName)}\n              title=\"Daily Sales Vs Waste\"\n              date={dateLabels}\n            />\n\n            <div className=\"applyBlueTuckGreen cooperHewittBold\">\n              <h4>Daily Waste</h4>\n            </div>\n\n            <div style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              display:\"flex\",\n              padding: \"10px\",\n              fontSize: \"10px\",\n              color: \"rgb(140, 112, 140)\"\n            }}>\n\n              {dataFromDB.map((item) => {\n\n                return (\n                  <div style={{\n                    display:\"flex\",\n                    flexDirection: \"column\",\n                  }}>\n                    <div style={{display:\"flex\"}}>C {\" \"} {item.coverWasteMaxDailyValue}</div>\n                    <div>S {\" \"} {item.spoilageWasteMaxDailyValue}</div>\n                    <div>P {\" \"} {item.preparationWasteMaxDailyValue}</div>\n                    <div>ALL {\" \"} {roundedUpNumberAndTurnBackToNumber(item.coverWasteMaxDailyValue + item.spoilageWasteMaxDailyValue + item.preparationWasteMaxDailyValue)}</div>\n                  </div>\n                )\n              })}\n\n            </div>\n\n            <div className=\"applyBlueTuckGreen cooperHewittBold\">\n              <h4>Menu Sales</h4>\n            </div>\n\n            <SlackChart chartData={chartData} />\n\n            <div className=\"dailyWasteChart__dateLabel\">\n              {formatedDate.map((data, i) => (\n                <div className={index === i ? \"applyGoldColor\": \"\"} key={i} onClick={(() => {filterDataByDate(i)})}>{data}</div>\n              ))}\n            </div>\n\n            <div className=\"graph__row\">\n                <div className=\"graph__message\">\n                  Click on the date to see data from that day\n                </div>\n            </div>\n\n        </div>\n      </AccordionBody>\n    </div>\n  );\n}","\n\nimport {useState} from 'react'\n\nimport {\n  setItemInLocalStorage,\n} from \"../../../utilities.js\"\n\nconst Switches = () => {\n\n  const initialStateForShowTotalWasteChart = JSON.parse(localStorage.getItem('showTotalWasteChart')) || false\n  const [showTotalWasteChart, setShowTotalWasteChart] = useState(initialStateForShowTotalWasteChart);\n\n  const initialStateForShowFoodWasteTargetSavings = JSON.parse(localStorage.getItem('showFoodWasteTargetSavings')) || false\n  const [foodWasteTargetSavings, setFoodWasteTargetSavings] = useState(initialStateForShowFoodWasteTargetSavings);\n\n  const initialStateForShowAiPredictions = JSON.parse(localStorage.getItem('showAiPredictions')) || false\n  const [aiPredictions, setAiPredictions] = useState(initialStateForShowAiPredictions);\n\n  const initialStateForShowWastePerCover = JSON.parse(localStorage.getItem('showWastePerCover')) || false\n  const [wastePerCover, setWastePerCover] = useState(initialStateForShowWastePerCover);\n\n  const initialStateForShowWastePerSales = JSON.parse(localStorage.getItem('showWastePerSales')) || false\n  const [wastePerSales, setWastePerSales] = useState(initialStateForShowWastePerSales);\n\n  const initialStateForShowWeeklyTrendChart = JSON.parse(localStorage.getItem('showWeeklyTrendChart')) || false\n  const [showWeeklyTrendChart, setShowWeeklyTrendChart] = useState(initialStateForShowWeeklyTrendChart);\n\n  const initialStateForShowHourlyChartSwitch = JSON.parse(localStorage.getItem('hourlyChartSwitch')) || false\n  const [showHourlyChart, setShowHourlyChart] = useState(initialStateForShowHourlyChartSwitch);\n\n  const initialStateForShowDailyChartSwitch = JSON.parse(localStorage.getItem('dailyChartSwitch')) || false\n  const [showDailyChart, setShowDailyChart] = useState(initialStateForShowDailyChartSwitch);\n\n  const initialStateForShowWeeklyChartSwitch = JSON.parse(localStorage.getItem('weeklyChartSwitch')) || false\n  const [showWeeklyChart, setShowWeeklyChart] = useState(initialStateForShowWeeklyChartSwitch);\n\n  const initialStateForShowMonthlyChartSwitch = JSON.parse(localStorage.getItem('monthlyChartSwitch')) || false\n  const [showMonthlyChart, setShowMonthlyChart] = useState(initialStateForShowMonthlyChartSwitch);\n\n  const initialStateForWasteOnADayOfTheWeek = JSON.parse(localStorage.getItem('wasteOnAdayOfTheWeek')) || false\n  const [showWasteOnAdayOfTheWeek, setShowWasteOnAdayOfTheWeek] = useState(initialStateForWasteOnADayOfTheWeek);\n\n  const initialStateForDailySalesVsWasteReport = JSON.parse(localStorage.getItem('dailySalesVsWasteReport')) || false\n  const [showDailySalesVsWasteReport, setShowDailySalesVsWasteReport] = useState(initialStateForDailySalesVsWasteReport);\n\n  const handleChangeForCheckedAndAccordion = (value, checkedObject) => {\n\n    if (checkedObject === \"hourlyChartSwitch\") {\n      setShowHourlyChart(value)\n      setItemInLocalStorage(\"hourlyChartSwitch\",value)\n    } else if ( checkedObject === \"dailyChartSwitch\") {\n      setShowDailyChart(value)\n      setItemInLocalStorage(\"dailyChartSwitch\",value)\n    } else if ( checkedObject === \"weeklyChartSwitch\") {\n      setShowWeeklyChart(value)\n      setItemInLocalStorage(\"weeklyChartSwitch\",value)\n    } else if ( checkedObject === \"monthlyChartSwitch\") {\n      setShowMonthlyChart(value)\n      setItemInLocalStorage(\"monthlyChartSwitch\",value)\n    }\n\n  }\n\n\n  ///HANDLE THE TOGGLE IN DISPLAY-SETTINGS:\n\n  const initialStateForSwitches = JSON.parse(localStorage.getItem('switches')) || {\n    hourlyChartSwitch: false,\n    dailyChartSwitch: false,\n    weeklyChartSwitch: false,\n    monthlyChartSwitch: false,\n    wastePerSalesSwitch: false,\n    wastePerCoverSwitch: false,\n    aiPredictionSwitch: false,\n    foodWasteTargetSwitch: false,\n    totalSiteWasteSwitch: false,\n    weeklyWasteTrendSwitch: false,\n    wasteOnAdayOfTheWeekSwitch: false,\n    dailySalesVsWasteReportSwitch: false\n  };\n\n  const [checked, setChecked] = useState(initialStateForSwitches);\n\n  const handleChange = (event) => {\n    // console.log(\"event.target.name\",event.target.name)\n    setChecked({ ...checked, [event.target.name]: event.target.checked });\n    setItemInLocalStorage(\"switches\", { ...checked, [event.target.name]: event.target.checked })\n  };\n\n\n    return {\n\n      showHourlyChart,\n      showDailyChart,\n      showWeeklyChart,\n      showMonthlyChart,\n      setShowHourlyChart,\n      setShowDailyChart,\n      setShowWeeklyChart,\n      setShowMonthlyChart,\n\n      showTotalWasteChart,\n      setShowTotalWasteChart,\n\n      foodWasteTargetSavings,\n      setFoodWasteTargetSavings,\n\n      aiPredictions,\n      setAiPredictions,\n\n      wastePerCover,\n      setWastePerCover,\n\n      wastePerSales,\n      setWastePerSales,\n\n      showWeeklyTrendChart,\n      setShowWeeklyTrendChart,\n\n      showWasteOnAdayOfTheWeek,\n      setShowWasteOnAdayOfTheWeek,\n\n      showDailySalesVsWasteReport,\n      setShowDailySalesVsWasteReport,\n\n      checked,\n      handleChange,\n      handleChangeForCheckedAndAccordion\n    }\n\n}\n\nexport default Switches\n\n\n\n\n\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n    Radio,\n    TableRow,\n    Paper,\n    TablePagination,\n    TableHead,\n    Table,\n    TableContainer,\n    TableCell,\n    TableBody,\n  } from \"@material-ui/core\";\n\nexport default function Controller(props) {\n\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(4);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n    };\n\n    const removeCache = () => {\n        localStorage.clear();\n        sessionStorage.clear();\n        window.location.reload(true);\n    };\n\n    return (\n        <>\n        <header className=\"dashboard__reportMenu\">\n\n            <div className=\"controller-wrapper\">\n\n                <div className=\"dashboard__reportMenu--positioning\">\n\n                    <>\n                        { props.userType !== \"user\" &&\n                            <h3 className=\"dashboard__reportMenu--fontSize applyPurpleColor cooperHewittBold\">Settings</h3>\n                        }\n\n                        { props.userType !== \"user\" &&\n                            <div className=\"dashboard__controlledLabel\">\n                                <Link to=\"/settings\">Set Targets</Link>\n                            </div>\n                        }\n\n                        { props.userType !== \"user\" &&\n                            <div className=\"dashboard__controlledLabel\">\n                                <Link to=\"/capping\">Add Capping</Link>\n                            </div>\n                        }\n\n                        { props.userType !== \"user\" &&  props.userType !== \"admin\"?\n                            <div className=\"dashboard__controlledLabel\">\n                                <Link to=\"/signup\">Add Team member</Link>\n                            </div>\n                        : null}\n\n                        { props.userType === \"greenkodeUser\" &&\n                            <div className=\"dashboard__controlledLabel\">\n                                <Link to=\"/signupsuperadmin\">Sign Up Super Admin</Link>\n                            </div>\n                        }\n\n                        <div className=\"dashboard__controlledLabel\">\n                            <Link to=\"/InputsList\">Add Inputs</Link>\n                        </div>\n\n                        <div className=\"dashboard__controlledLabel\">\n                            <Link to=\"/setDisplays\">Show Or Hide Reports</Link>\n                        </div>\n\n                        <div onClick={removeCache} style={{marginTop: \"1rem\"}}>\n                            <a href=\"\">\n                                Reset Dashboard\n                            </a>\n                        </div>\n                    </>\n\n                </div>\n\n                    <div className=\"dashboard__reportMenu--positioning marginTop\">\n                    <div className=\"dashboard__overviewSitesReportTable report-subtitle\">\n\n                    <Paper className=\"dashboard__paper\">\n                    <TableContainer className=\"dashboard__tableContainer\">\n                        <Table\n                        stickyHeader\n                        aria-label=\"sticky table\"\n                        className=\"dashboard__table\"\n                        >\n                        <TableHead>\n                            <TableRow>\n                            <TableCell className=\"dashboard__tableCell\"></TableCell>\n                            <TableCell className=\"dashboard__tableCell\">\n                                <div className=\"report-subtitle applyMarginRightAndLeft\">\n                                Total CSP Waste\n                                </div>\n                            </TableCell>\n                            <TableCell className=\"dashboard__tableCell\">\n                                <div className=\"report-subtitle applyMarginRightAndLeft\">\n                                Monthly CSP Trend\n                                </div>\n                            </TableCell>\n                            </TableRow>\n                        </TableHead>\n\n\n                        <TableBody>\n                        {props.allsites.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((site, index) => (\n                                <TableRow key={index}>\n                                <TableCell className=\"dashboard__tableCell--style\">\n                                    <div className=\"dashboard__radio\">\n                                    <Radio\n                                        checked={props.selectedSiteValueID === site.siteName}\n                                        onChange={props.handleSiteIDchange}\n                                        value={site.siteName}\n                                        color=\"default\"\n                                        inputProps={{ \"aria-label\": \"D\" }}\n                                    />\n                                    <div className=\"dashboard__siteName--color\">\n                                        {\" \"}\n                                        {site.siteName.replace(/[^A-Za-z]+/g, '').toLowerCase()}\n                                    </div>\n                                    </div>\n                                </TableCell>\n                                <TableCell className=\"dashboard__tableCell--style\">\n\n                                    {props.showPounds ? (\n                                    <>\n                                        <span className=\"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\">\n                                        £\n                                        </span>\n                                        {parseInt((site.totalWaste * 2.775).toFixed(0))}\n                                    </>\n                                    ) : (\n                                    <>\n                                    {parseInt(site.totalWaste.toFixed(0))}\n                                        <span className=\"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\">\n                                        Kg\n                                        </span>\n                                    </>\n                                    )}\n\n                                </TableCell>\n                                <TableCell className=\"dashboard__tableCell--style\">\n                                    {props.showPounds ? (\n                                    <>\n                                    {parseInt((site.trends * 2.775).toFixed(0))}\n                                    </>\n                                    ) :\n                                    <>\n                                    {parseInt(site.trends.toFixed(0))}\n                                        <span className=\"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\">\n                                        Kg\n                                        </span>\n                                        </>\n                                    }\n\n                                </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                        </Table>\n                    </TableContainer>\n\n                    <TablePagination\n                        rowsPerPageOptions={[2]}\n                        component=\"div\"\n                        count={props.allsites.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                    />\n                    </Paper>\n                    </div>\n                    </div>\n\n            </div>\n\n        </header>\n        </>\n    )\n}\n\n","import React, { useContext, useState } from \"react\";\n\nimport { DashboardContext } from \"../../../contexts/dashboard-context.js\";\n\nimport TotalWaste from \"./reports/total-waste-report\";\nimport DailyWasteChart from \"./reports/daily-waste-report\";\nimport HourlyWasteChart from \"./reports/hourly-waste-report\";\nimport WeeklyWaste from \"./reports/weekly-waste-report\";\nimport WeeklyWasteTrends from \"./reports/weekly-trend-report\";\nimport MonthlyWasteChart from \"./reports/monthly-waste-report\";\nimport AiPredictionsReport from \"./reports/ai-predictions-report\";\nimport FoodWasteTrackingProgress from \"./reports/food-waste-target\";\nimport WastePerCover from \"./reports/waste-per-cover-report\";\nimport WastePerSales from \"./reports/waste-per-sales-report\";\nimport WasteOnAdayOfTheWeek from \"./reports/waste-on-a-day-of-the-week-report\";\nimport DailySalesVsWasteReport from \"./reports/daily-sales-vs-waste-report\";\n\nimport Switches from \"../libs/use-switches\";\n\nimport {\n  Radio,\n  TableRow,\n  Paper,\n  TablePagination,\n  TableHead,\n  Table,\n  TableContainer,\n  TableCell,\n  TableBody,\n} from \"@material-ui/core\";\n\nimport Controller from \"./controller.js\";\n\nimport {\n  setItemInLocalStorage,\n  calculateTodaysDate,\n  splitCamelCaseStringAndMakeFirstCharacterUpperCase\n} from \"../../../utilities.js\"\n\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\n\nexport default function Dashboard(props) {\n\n  const {\n    showHourlyChart,\n    showDailyChart,\n    showWeeklyChart,\n    showMonthlyChart,\n    setShowHourlyChart,\n    setShowDailyChart,\n    setShowWeeklyChart,\n    setShowMonthlyChart,\n    showTotalWasteChart,\n    setShowTotalWasteChart,\n    foodWasteTargetSavings,\n    setFoodWasteTargetSavings,\n    aiPredictions,\n    setAiPredictions,\n    wastePerCover,\n    setWastePerCover,\n    wastePerSales,\n    setWastePerSales,\n    showWeeklyTrendChart,\n    setShowWeeklyTrendChart,\n    checked,\n    handleChangeForCheckedAndAccordion,\n\n    showWasteOnAdayOfTheWeek,\n    setShowWasteOnAdayOfTheWeek,\n\n    showDailySalesVsWasteReport,\n    setShowDailySalesVsWasteReport,\n  } = Switches()\n\n  const {\n    handleSiteChange,\n    selectedValue,\n    siteName,\n    companyName,\n    sitesID,\n    sites,\n    startDate,\n    showPounds,\n    userType,\n    userDetail,\n    handleSiteIDchange,\n    selectedSiteValueID,\n    companyID,\n\n    weeklyDailyLabels,\n    weeklyDailyRange\n  } = useContext(DashboardContext)\n  const rightColumnDisplay = [\n    {\n      id: '0',\n      type: 'companyInfor'\n    },\n    {\n      id: '1',\n      type: 'hourlyWaste'\n    },\n    {\n      id:'2',\n      type: \"dailyWaste\"\n    },\n    {\n      id:'3',\n      type: \"weeklyWaste\"\n    },\n    {\n      id:'4',\n      type: \"weeklyWasteTrend\"\n    },\n    {\n      id:'5',\n      type: \"monthlyWaste\"\n    },\n    {\n      id:'6',\n      type: \"totalWaste\"\n    },\n    {\n      id: \"7\",\n      type: \"foodWasteTargetSavings\"\n    },\n    {\n      id: \"8\",\n      type: \"aiPredictions\"\n    },\n    { id: \"9\",\n      type: \"wastePerCover\"\n    },\n    {\n      id: \"10\",\n      type: \"salesPerCover\"\n    },\n    {\n      id: \"11\",\n      type: \"wasteOnAdayOfTheWeek\"\n    },\n    {\n      id: \"12\",\n      type: \"dailySalesVsWaste\"\n    }\n  ]\n\n  const leftColumnDisplay = []\n\n  const twoColumns = {\n    rightColumn: {\n      name: \"right-hand-side\",\n      items: rightColumnDisplay,\n    },\n    leftColumn: {\n      name: \"left-hand-side\",\n      items: leftColumnDisplay,\n    }\n  };\n\n  const initialStateForColumns = JSON.parse(localStorage.getItem('twoColumns')) || twoColumns\n  const [columns, setColumns] = useState(initialStateForColumns);\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(4);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const onDragEnd = (result, columns, setColumns) => {\n    if (!result.destination) return;\n    const { source, destination } = result;\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n      const [removed] = sourceItems.splice(source.index, 1);\n      destItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems\n        }\n      });\n      setItemInLocalStorage(\"twoColumns\", {\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems\n        }\n      });\n\n    } else {\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n      const [removed] = copiedItems.splice(source.index, 1);\n      copiedItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...column,\n          items: copiedItems\n        }\n      });\n      setItemInLocalStorage(\"twoColumns\", {\n        ...columns,\n        [source.droppableId]: {\n          ...column,\n          items: copiedItems\n        }\n      });\n\n    }\n  };\n\n    return (\n      <DragDropContext\n      onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\n      >\n\n          <div className=\"dashboard\">\n\n          {Object.entries(columns).map(([columnId, column], index) => {\n\n          return (\n\n\n            <Droppable droppableId=\"dashboard\" droppableId={columnId} key={index}>\n\n            {(provided) => (\n              <main className=\"dashboard__reportsWrapper\" {...provided.droppableProps} ref={provided.innerRef}>\n                {column.items.map(({id, type}, index) => {\n\n                  return (\n                    <div key={index}>\n\n                    {type === \"companyInfor\" &&\n                      <>\n                      <div className=\"dashboard__overviewSites--positioning showOnMobile\">\n                        <div className=\"dashboard__date__user dashboard__userInformationWrapper cooperHewittBold\">\n                            <div className=\"dashboard__userDateNameAndUserType cooperHewittBold\">\n                                {calculateTodaysDate()}\n                              <div className=\"dashboard__date__user__type cooperHewittBold\">\n                                {userDetail.typeOfUser}\n                              </div>\n                              <div className=\"dashboard__date__user__name cooperHewittBold\">\n                                Welcome back\n                                {\" \"}\n                                {userDetail.fullName}\n                              </div>\n                            </div>\n                          <div className=\"dashboard__companyName\">{splitCamelCaseStringAndMakeFirstCharacterUpperCase(userDetail.companyname)}</div>\n                        </div>\n                      </div>\n\n                      <div className=\"dashboard__overviewSitesReportTable report-subtitle showOnMobile\">\n                        <div className=\"report-subtitle\">\n                          Sites\n                        </div>\n\n                        <Paper className=\"dashboard__paper\">\n                          <TableContainer className=\"dashboard__tableContainer\">\n                            <Table\n                              stickyHeader\n                              aria-label=\"sticky table\"\n                              className=\"dashboard__table\"\n                            >\n                              <TableHead>\n                                <TableRow>\n                                  <TableCell className=\"dashboard__tableCell\"></TableCell>\n                                  <TableCell className=\"dashboard__tableCell\">\n                                    <div className=\"report-subtitle\">\n                                      TOTAL CSP WASTE\n                                    </div>\n                                  </TableCell>\n                                  <TableCell className=\"dashboard__tableCell\">\n                                    <div className=\"report-subtitle\">\n                                    MONTHLY CSP TREND\n                                    </div>\n                                  </TableCell>\n                                </TableRow>\n                              </TableHead>\n\n                              <TableBody>\n                                {sites\n                                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                  .map((site, index) => (\n                                    <TableRow key={index}>\n                                      <TableCell className=\"dashboard__tableCell--style\">\n                                        <div className=\"dashboard__radio\">\n                                          <Radio\n                                            checked={selectedSiteValueID === site.siteName}\n                                            onChange={handleSiteIDchange}\n                                            value={site.siteName}\n                                            color=\"default\"\n                                            inputProps={{ \"aria-label\": \"D\" }}\n                                          />\n                                          <div className=\"dashboard__siteName--color\">\n                                            {\" \"}\n                                            {site.siteName.replace(/[^A-Za-z]+/g, '').toLowerCase()}\n                                          </div>\n                                        </div>\n                                      </TableCell>\n                                      <TableCell className=\"dashboard__tableCell--style\">\n\n                                        {showPounds ? (\n                                          <>\n                                            <span className=\"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\">\n                                              £\n                                            </span>\n                                            {parseInt((site.totalWaste * 2.775).toFixed(0))}\n                                          </>\n                                        ) : (\n                                          <>\n                                          {parseInt(site.totalWaste.toFixed(0))}\n                                            <span className=\"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\">\n                                              Kg\n                                            </span>\n                                          </>\n                                        )}\n\n                                      </TableCell>\n                                      <TableCell className=\"dashboard__tableCell--style\">\n                                        {showPounds ? (\n                                          <>\n                                          {parseInt((site.trends * 2.775).toFixed(0))}\n                                          </>\n                                        ) :\n                                        <>\n                                        {parseInt(site.trends.toFixed(0))}\n                                            <span className=\"dashboard__tableCell__icon applyMarginRightAndLeft applyCooperHewittBold\">\n                                              Kg\n                                            </span>\n                                            </>\n                                        }\n\n                                      </TableCell>\n                                    </TableRow>\n                                  ))}\n                              </TableBody>\n                            </Table>\n                          </TableContainer>\n\n                          <TablePagination\n                            rowsPerPageOptions={[2]}\n                            component=\"div\"\n                            count={sites.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                          />\n                        </Paper>\n                      </div>\n                      </>\n                    }\n\n\n                    {type === \"totalWaste\" &&\n                      <Draggable draggableId={id} index={index}>\n                        {(provided) => (\n                        <section className=\"dashboard__report marginBottomBy1rem\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                          <TotalWaste\n                            startDate={startDate}\n                            showPounds={showPounds}\n                            showTotalWasteChart={showTotalWasteChart}\n                            setShowTotalWasteChart={setShowTotalWasteChart}\n                            hideReport={checked.totalSiteWasteSwitch}\n                          />\n                        </section>\n                        )}\n                      </Draggable>\n                      }\n\n                      {type === \"hourlyWaste\" &&\n                        <Draggable draggableId={id} index={index}>\n                          {(provided) => (\n                          <section className=\"dashboard__report marginBottomBy1rem\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                            <HourlyWasteChart\n                              siteName={siteName}\n                              showPounds={showPounds}\n                              showHourlyChart={showHourlyChart}\n                              setShowHourlyChart={setShowHourlyChart}\n                              handleChangeForCheckedAndAccordion={handleChangeForCheckedAndAccordion}\n                              hideReport={checked.hourlyChartSwitch}\n                            />\n                        </section>\n                          )}\n                        </Draggable>\n                      }\n\n                      {type === \"dailyWaste\" &&\n                        <Draggable draggableId={id} index={index}>\n                          {(provided) => (\n                            <section className=\"dashboard__report marginBottomBy1rem\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                              <DailyWasteChart\n                                siteName={siteName}\n                                showPounds={showPounds}\n                                showDailyChart={showDailyChart}\n                                setShowDailyChart={setShowDailyChart}\n                                handleChangeForCheckedAndAccordion={handleChangeForCheckedAndAccordion}\n                                hideReport={checked.dailyChartSwitch}\n                              />\n                            </section>\n                          )}\n                        </Draggable>\n                      }\n\n                      {type === \"weeklyWaste\" &&\n                        <Draggable draggableId={id} index={index}>\n                          {(provided) => (\n                          <section className=\"dashboard__report\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                            <div className=\"dashboard__weeklyWasteReportWrapper\">\n                              <WeeklyWaste\n                                showPounds={showPounds}\n                                showWeeklyChart={showWeeklyChart}\n                                setShowWeeklyChart={setShowWeeklyChart}\n                                handleChangeForCheckedAndAccordion={handleChangeForCheckedAndAccordion}\n                                hideReport={checked.weeklyChartSwitch}\n                              />\n                            </div>\n                          </section>\n                          )}\n                        </Draggable>\n                      }\n\n                      {type === \"weeklyWasteTrend\" &&\n                        <Draggable draggableId={id} index={index}>\n                          {(provided) => (\n                          <section className=\"dashboard__report\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                            <div className=\"weeklyWasteTrend__reportWrapper\">\n                              <WeeklyWasteTrends\n                                siteName={siteName}\n                                showPounds={showPounds}\n                                showWeeklyTrendChart={showWeeklyTrendChart}\n                                setShowWeeklyTrendChart={setShowWeeklyTrendChart}\n                                handleChangeForCheckedAndAccordion={handleChangeForCheckedAndAccordion}\n                                hideReport={checked.weeklyWasteTrendSwitch}\n                              />\n                            </div>\n                          </section>\n                          )}\n                        </Draggable>\n                      }\n\n                      {type === \"monthlyWaste\" &&\n                        <Draggable draggableId={id} index={index}>\n                          {(provided) => (\n                            <section className=\"dashboard__report\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                              <MonthlyWasteChart\n                                siteName={siteName}\n                                showPounds={showPounds}\n                                showMonthlyChart={showMonthlyChart}\n                                setShowMonthlyChart={setShowMonthlyChart}\n                                handleChangeForCheckedAndAccordion={handleChangeForCheckedAndAccordion}\n                                hideReport={checked.monthlyChartSwitch}\n                              />\n                          </section>\n                          )}\n                        </Draggable>\n                      }\n\n                      {type === \"aiPredictions\" &&\n                        <Draggable draggableId={id} index={index}>\n                          {(provided) => (\n\n                            <div className=\"dashboard__aiPredictionsReport marginBottomBy1rem\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                              <AiPredictionsReport\n                                aiPredictions={aiPredictions}\n                                setAiPredictions={setAiPredictions}\n                                showPounds={showPounds}\n                                hideReport={checked.aiPredictionSwitch}\n                               />\n                            </div>\n\n                          )}\n                        </Draggable>\n                      }\n\n                      {type === \"foodWasteTargetSavings\" &&\n                        <Draggable draggableId={id} index={index}>\n                          {(provided) => (\n\n                            <div className=\"dashboard__foodWasteTrackingProgress marginBottomBy1rem\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                              <FoodWasteTrackingProgress\n                                foodWasteTargetSavings={foodWasteTargetSavings}\n                                setFoodWasteTargetSavings={setFoodWasteTargetSavings}\n                                hideReport={checked.foodWasteTargetSwitch}\n                              />\n                            </div>\n\n                          )}\n                        </Draggable>\n                      }\n\n                      {type === \"wastePerCover\" &&\n                        <Draggable draggableId={id} index={index}>\n                          {(provided) => (\n\n                            <div className=\"dashboard__draggableReport marginBottomBy1rem\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                              <WastePerCover\n                                wastePerCover={wastePerCover}\n                                setWastePerCover={setWastePerCover}\n                                showPounds={showPounds}\n                                hideReport={checked.wastePerCoverSwitch}\n                                siteName={siteName}\n                              />\n                            </div>\n\n                          )}\n                        </Draggable>\n                      }\n\n                      {type === \"salesPerCover\" &&\n                        <Draggable draggableId={id} index={index}>\n                          {(provided) => (\n\n                            <div className=\"dashboard__draggableReport marginBottomBy1rem\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                              <WastePerSales\n                                wastePerSales={wastePerSales}\n                                setWastePerSales={setWastePerSales}\n                                showPounds={showPounds}\n                                hideReport={checked.wastePerSalesSwitch}\n                                siteName={siteName}\n                              />\n                            </div>\n\n                          )}\n                        </Draggable>\n                      }\n\n                      {type === \"wasteOnAdayOfTheWeek\" &&\n                        <Draggable draggableId={id} index={index}>\n                          {(provided) => (\n                            <section className=\"dashboard__report marginBottomBy1rem\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                              <WasteOnAdayOfTheWeek\n                                siteName={siteName}\n                                showPounds={showPounds}\n                                showWasteOnAdayOfTheWeek={showWasteOnAdayOfTheWeek}\n                                setShowWasteOnAdayOfTheWeek={setShowWasteOnAdayOfTheWeek}\n                                hideReport={checked.wasteOnAdayOfTheWeekSwitch}\n                              />\n                            </section>\n                          )}\n                        </Draggable>\n                      }\n\n                      {type === \"dailySalesVsWaste\" &&\n                        <Draggable draggableId={id} index={index}>\n                          {(provided) => (\n                            <section className=\"dashboard__report marginBottomBy1rem\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n                              <DailySalesVsWasteReport\n                                siteName={siteName}\n                                showPounds={showPounds}\n                                showDailySalesVsWasteReport={showDailySalesVsWasteReport}\n                                setShowDailySalesVsWasteReport={setShowDailySalesVsWasteReport}\n                                hideReport={checked.dailySalesVsWasteReportSwitch}\n                                weeklyDailyLabels={weeklyDailyLabels}\n                                weeklyDailyRange={weeklyDailyRange}\n                              />\n                            </section>\n                          )}\n                        </Draggable>\n                      }\n\n                    </div>\n                  )\n              })}\n              {provided.placeholder}\n              </main>\n            )}\n\n\n\n            </Droppable>\n\n          )\n\n          })}\n\n          <Controller\n            checked={checked}\n            showHourlyChart={showHourlyChart}\n            setShowHourlyChart={setShowHourlyChart}\n            sitesID={sitesID}\n            handleSiteChange={handleSiteChange}\n            selectedValue={selectedValue}\n            allsites={sites}\n            showPounds={showPounds}\n            companyName={companyName}\n            userType={userType}\n            handleSiteIDchange={handleSiteIDchange}\n            selectedSiteValueID={selectedSiteValueID}\n            companyID={companyID}\n          />\n\n        </div>\n\n      </DragDropContext>\n    );\n\n}\n\n\n","import React, {useState, useEffect} from \"react\";\n\nexport default function PublicLiveFeed(props) {\n\n    const [ companyName, setCompanyName] = useState([])\n    const [ companyId, setCompanyId] = useState([])\n\n    useEffect(() => {\n        setCompanyName(props.match.params.companyName)\n        setCompanyId(props.match.params.id)\n        //you will call the master table here and filter the data you need for the live feed in the backend\n    }, [props.match.params.id])\n\n    console.log(\"companyName\",companyName)\n    console.log(\"companyId\",companyId)\n\n\n    return (\n        <div>\n            <h1>Public live feed</h1>\n        </div>\n    )\n}\n","import React, { useEffect} from \"react\";\n\nexport default function KitchenLiveFeed(props) {\n\n    // const [ companyName, setCompanyName] = useState([])\n\n    useEffect(() => {\n        // setCompanyName(props.match.params.id)\n        //you will call the master table here and filter the data you need for the live feed in the backend\n    }, [])\n\n    console.log(\"props.match.params.id\",props.match.params.id)\n\n    return (\n        <div>\n            <h1>Kitchen live feed</h1>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport default function AuthenticatedRoute({\n  component: C,\n  appProps,\n  ...rest\n}) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        appProps.isAuthenticated ? (\n          <C {...props} {...appProps} />\n        ) : (\n          <Redirect to=\"/\" />\n        )\n      }\n    />\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport default function UnauthenticatedRoute({\n  component: C,\n  appProps,\n  ...rest\n}) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !appProps.isAuthenticated ? (\n          <C {...props} {...appProps} />\n        ) : (\n          appProps.userType === \"greenkodeUser\" ? <Redirect to=\"/CompanySelector\" /> : <Redirect to=\"/dashboard\" />\n        )\n      }\n    />\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\n// const sectors = [\n//   {\n//     value: 3.447,\n//     label: \"Restaurants\"\n//   },\n//   {\n//     value: 3.511,\n//     label: \"Quick Service Restaurants (QSR)\"\n//   },\n//   {\n//     value: 2.09,\n//     label: \"Pubs\"\n//   },\n//   {\n//     value: 4.008,\n//     label: \"Hotels\"\n//   },\n//   {\n//     value: 4.028,\n//     label: \"Leisure\"\n//   },\n//   {\n//     value: 2.208,\n//     label: \"Staff catering\"\n//   },\n//   {\n//     value: 1.929,\n//     label: \"Healthcare\"\n//   },\n//   {\n//     value: 2.075,\n//     label: \"Education\"\n//   },\n//   {\n//     value: 1.656,\n//     label: \"Services\"\n//   }\n// ];\n\nconst savings = [\n  {\n    value: 0.0,\n    label: \"none\"\n  },\n  {\n    value: 0.1,\n    label: \"10%\"\n  },\n  {\n    value: 0.2,\n    label: \"20%\"\n  },\n  {\n    value: 0.3,\n    label: \"30%\"\n  },\n  {\n    value: 0.4,\n    label: \"40%\"\n  },\n  {\n    value: 0.5,\n    label: \"50%\"\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n      height: \"10vh\"\n    }\n  },\n}));\n\nexport default function MultilineTextFields(props) {\n  const classes = useStyles();\n\n  if (props.steps === 0) {\n    return (\n      // <form className={classes.root} noValidate autoComplete=\"off\">\n      //     <div>\n      //         <TextField\n      //             select\n      //             label=\"Sectors\"\n      //             value={props.poundsKGconverter}\n      //             name=\"sectors\"\n      //             onChange={props.handleChange}\n      //             helperText=\"Please select your sectors\"\n      //         >\n      //             {sectors.map((option, i) => (\n      //             <MenuItem key={option.value} value={option.value}>\n      //                 {option.label}\n      //             </MenuItem>\n      //             ))}\n      //         </TextField>\n      //     </div>\n      // </form>\n\n      <form className={classes.root} noValidate autoComplete=\"off\">\n          <div>\n              <TextField\n                  select\n                  label=\"% Savings\"\n                  value={props.savingPercentage}\n                  name=\"savings\"\n                  onChange={props.handleChange}\n                  SelectProps={{\n                  native: true\n                  }}\n                  helperText=\"Please select your % savings\"\n              >\n                  {savings.map((option) => (\n                  <option key={option.value} value={option.value}>\n                      {option.label}\n                  </option>\n                  ))}\n              </TextField>\n          </div>\n      </form>\n\n    );\n  }\n\n  // else if (props.steps === 1) {\n  //   return (\n  //     <form className={classes.root} noValidate autoComplete=\"off\">\n  //         <div>\n  //             <TextField\n  //                 select\n  //                 label=\"% Savings\"\n  //                 value={props.savingPercentage}\n  //                 name=\"savings\"\n  //                 onChange={props.handleChange}\n  //                 SelectProps={{\n  //                 native: true\n  //                 }}\n  //                 helperText=\"Please select your % savings\"\n  //             >\n  //                 {savings.map((option) => (\n  //                 <option key={option.value} value={option.value}>\n  //                     {option.label}\n  //                 </option>\n  //                 ))}\n  //             </TextField>\n  //         </div>\n  //     </form>\n\n  //   );\n  // } else {\n  //   return (\n  //       <form className={classes.root} noValidate autoComplete=\"off\">\n  //       <TextField\n  //           label=\"Number of Covers\"\n  //           type=\"number\"\n  //           onChange={props.handleChange}\n  //           name=\"numberOfCovers\"\n  //           InputLabelProps={{\n  //               shrink: true,\n  //           }}\n  //           />\n  //       </form>\n  //   );\n  // }\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Forms from \"./targets-forms\"\n// import { WeeklyWasteTrendContext } from \"../../../../contexts/weekly-trends-context\";\nimport useWindowDimensions from \"../../libs/use-window-dimensions\";\n\nlet setWidth = \"50%\"\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: setWidth,\n    fontSize: \"10\"\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nexport default function HorizontalLinearStepper(props) {\n  // console.log(\"props\",props);\n\n  const { width } = useWindowDimensions();\n\n  if (width <= 700) {\n    setWidth = \"100%\"\n  }\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = [\n    \"What sector do you work in\",\n    // \"What is your savings target for food waste\"\n  ];\n\n  const handleChange = (event) => {\n    const { value, name} = event.target;\n    props.handleChange(name, value)\n  };\n\n  const getStepContent = (step) => {\n    switch (step) {\n      case 0:\n      //   return \"Find out the savings tailored to your sector by selecting from the list?\";\n      // case 1:\n        return \"Find out how much you could save by setting a target - the results will show you £ and carbon savings\";\n      default:\n        return \"Unknown step\";\n    }\n  }\n\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    props.checkActiveStep(activeStep)\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n    props.checkActiveStep(activeStep)\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n\n\n      {/* <Stepper activeStep={activeStep}>\n        {steps.map((label, index) => {\n          return (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper> */}\n      <div>\n        {activeStep === steps.length ? (\n          <div className=\"completedForm\">\n            <Typography className={classes.instructions}>\n              <div className=\"target__calculatorResults--styling\">\n                <div>Please see results below</div>\n              </div>\n            </Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>\n              {getStepContent(activeStep)}\n            </Typography>\n            <Forms\n              steps={activeStep}\n              handleChange={handleChange}\n              poundsKGconverter={props.poundsKGconverter}\n              savingPercentage={props.savingPercentage}/>\n            <div>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.button}\n              >\n                Back\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? \"SAVE\" : \"Next\"}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Menus from \"./targets-menu\"\nimport {\n  getMonths,\n  roundedUpNumberTwoPointsAndTurnBackToString,\n  roundedUpNumberAndTurnBackToNumber,\n} from \"../../../../utilities\"\nimport { MonthlyWasteContext } from \"../../../../contexts/monthly-waste-context\";\n\nimport {\n    postTargets,\n    getLastYearMonthlyWaste,\n    // getTargets\n} from \"../../../../api.js\";\n\nexport default function Settings(props) {\n\n  const { currentMonthCoverWasteArray, currentMonthPrepWasteArray, currentMonthSpoilageWasteArray } = useContext(MonthlyWasteContext);\n\n  const [potentialSavingsInAday, setPotentialSavingsInAday] = useState(0);\n  const [potentialSavingsInWeek, setPotentialSavingsInWeek] = useState(0);\n  const [potentialSavingsInMonth, setPotentialSavingsInMonth] = useState(0);\n  const [potentialSavingsInYear, setPotentialSavingsInYear] = useState(0);\n\n  const [kiloOfCO2SavedYearlyDisplay, setKiloOfCO2SavedYearlyDisplay] = useState(0);\n  const [numberOfMealsSavedYearlyDisplay, setNumberOfMealsSavedYearlyDisplay] = useState(0);\n\n  const [cspWasteOfPreviousMonth, setCspWasteOfPreviousMonth] = useState(0);\n  const [percentagedSavingsTotal, setPercentagedSavingsTotal] = useState(0);\n\n  const [coverBreakDown, setCoverBreakDown] = useState(0);\n  const [prepBreakDown, setPrepBreakDown] = useState(0);\n  const [spoilageBreakDown, setSpoilageBreakDown] = useState(0);\n\n  // const [poundsKGconverter, setPoundsKGconverter] = React.useState(2.075);\n  const [poundsKGconverter, setPoundsKGconverter] = React.useState(2.775);\n  const [savingPercentage, setSavingPercentage] = React.useState(JSON.parse(localStorage.getItem('targets')) || 0.0);\n\n  const [sendToDataBase, setSendToDataBase] = useState(null);\n\n  const [recommendTargetDisplay, setRecommendTargetDisplay] = useState(null);\n  // const [percentagedDisplay, setPercentaged] = useState(null);\n\n  let percentaged = 0.3\n\n  useEffect(() => {\n\n    // let id = props.companyID\n    // let company = props.companyName\n    // let siteid = props.selectedSiteValueID\n    // console.log(\"id\",id)\n    // console.log(\"company\",company)\n    // console.log(\"siteid\",siteid)\n    // console.log(\"here props\",props)\n\n    props.recommendedTargets.map((data) => {\n      setPotentialSavingsInAday(data.recommendedTargets.targets.percentSavingsInAday)\n      setPotentialSavingsInWeek(data.recommendedTargets.targets.percentSavingsInAweek)\n      setPotentialSavingsInMonth(data.recommendedTargets.targets.percentSavingsInAmonth)\n      setPotentialSavingsInYear(data.recommendedTargets.targets.percentSavingsInAyear)\n\n      setCoverBreakDown(data.recommendedTargets.targets.coverBreakDown)\n      setPrepBreakDown(data.recommendedTargets.targets.prepBreakDown)\n      setSpoilageBreakDown(data.recommendedTargets.targets.spoilageBreakDown)\n\n      setRecommendTargetDisplay(data.recommendedTargets.targets.recommendTarget)\n\n      setPercentagedSavingsTotal(data.recommendedTargets.targets.totalPercentagedSavingsTotal)\n      setCspWasteOfPreviousMonth(data.recommendedTargets.targets.totalCSPforPreviousMonth)\n\n      setKiloOfCO2SavedYearlyDisplay(data.recommendedTargets.targets.yearlyKilosOfCO2saved)\n      setNumberOfMealsSavedYearlyDisplay(data.recommendedTargets.targets.yearlyMealsSaved)\n\n      // const percentagedSavingsTotal = data.recommendedTargets.targets.totalPercentagedSavingsTotal\n      // const cspWasteOfPreviousMonth = data.recommendedTargets.targets.totalCSPforPreviousMonth\n\n      // setPercentaged(((percentagedSavingsTotal / cspWasteOfPreviousMonth) * 100))\n      return \"\"\n    });\n\n       // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.companyID, props.companyName, props.selectedSiteValueID, props.recommendedTargets]);\n\n  const handleChange = (name, value) => {\n    if (name === \"sectors\") {\n        setPoundsKGconverter(value);\n    } else if (name === \"savings\") {\n        setSavingPercentage(value);\n        percentaged = value\n        showResults(percentaged)\n    }\n  }\n\n  const checkActiveStep = (data) => {\n    if (data === 0) {\n      if (sendToDataBase !== null) {\n        saveTargets()\n      }\n    }\n\n    // if (data === 1) {\n    //   if (sendToDataBase !== null) {\n    //     saveTargets()\n    //   }\n    // }\n  }\n\n  const showResults = (percentaged) => {\n\n    const monthNumber = getMonths();\n\n    let previousMonthNumber = 5;\n    let coverWaste = 0\n    let preparationWaste = 0\n    let spoilageWaste = 0\n    let totalCSPforPreviousMonth = 0;\n\n    if (monthNumber === 0) {\n      previousMonthNumber = 11;\n    } else {\n      previousMonthNumber = monthNumber - 1\n    }\n\n    //1)Get the previous months cover, prep, spoilage and total CSP\n    if (previousMonthNumber < 11) {\n        coverWaste = currentMonthCoverWasteArray[previousMonthNumber]\n        preparationWaste = currentMonthPrepWasteArray[previousMonthNumber]\n        spoilageWaste = currentMonthSpoilageWasteArray[previousMonthNumber]\n        totalCSPforPreviousMonth = parseInt(coverWaste + preparationWaste + spoilageWaste);\n    } else {\n      //if monthNumber is 0 you want to get array value in index 11 from last year list\n      getLastYearMonthlyWaste(props.companyID, props.companyName, props.selectedSiteValueID).then((data) => {\n        coverWaste = data[0].monthlyValue.monthly.coverWaste[11]\n        preparationWaste = data[0].monthlyValue.monthly.preparationWaste[11]\n        spoilageWaste = data[0].monthlyValue.monthly.spoilageWaste[11]\n        totalCSPforPreviousMonth = parseInt(coverWaste + preparationWaste + spoilageWaste);\n      });\n    }\n\n    //1)\n    // get the percentage of savings the person wants\n    // Get the previous months cover, prep, spoilage and total CSP\n\n    console.log(\"previous coverWaste\",coverWaste)\n    console.log(\"previous preparationWaste\",preparationWaste)\n    console.log(\"previous spoilageWaste\",spoilageWaste)\n    console.log(\"previous totalCSPforPreviousMonth\",totalCSPforPreviousMonth)\n    console.log(\"this is the percentaged selected on the form percentaged\",percentaged)\n\n    setCspWasteOfPreviousMonth(totalCSPforPreviousMonth)\n\n\n    //2) workout  the percentages of savings for CSP = C + S+ P\n    const percentSavingsForCoverWaste = roundedUpNumberAndTurnBackToNumber(coverWaste * parseFloat(percentaged))\n    const percentSavingsForPreparationWaste = roundedUpNumberAndTurnBackToNumber(preparationWaste * parseFloat(percentaged))\n    const percentSavingsForSpoilageWaste = roundedUpNumberAndTurnBackToNumber(spoilageWaste * parseFloat(percentaged))\n\n    console.log(\"The calculation is monthly cover waste x percentages of savings\",percentSavingsForCoverWaste)\n    console.log(\"The calculation is monthly prep waste x percentages of savings\",percentSavingsForPreparationWaste)\n    console.log(\"The calculation is monthly spoilage waste x percentages of savings\",percentSavingsForSpoilageWaste)\n\n    setPercentagedSavingsTotal(percentSavingsForCoverWaste + percentSavingsForPreparationWaste + percentSavingsForSpoilageWaste)\n\n    console.log(\"Add all calculations up to get total CSP percentages saving\", percentSavingsForCoverWaste + percentSavingsForPreparationWaste + percentSavingsForSpoilageWaste)\n\n    setCoverBreakDown(coverWaste - percentSavingsForCoverWaste)\n    setPrepBreakDown(preparationWaste - percentSavingsForPreparationWaste)\n    setSpoilageBreakDown(spoilageWaste - percentSavingsForSpoilageWaste)\n\n    const percentSavingsInAmonth = parseInt((percentSavingsForCoverWaste + percentSavingsForPreparationWaste + percentSavingsForSpoilageWaste) * poundsKGconverter);\n    const percentSavingsInAyear = parseInt(percentSavingsInAmonth * 12)\n    const percentSavingsInAweek = parseInt(percentSavingsInAmonth / 4)\n    const percentSavingsInAday = parseInt(percentSavingsInAmonth / 30)\n\n    setPotentialSavingsInMonth(percentSavingsInAmonth)\n    setPotentialSavingsInYear(percentSavingsInAyear)\n    setPotentialSavingsInWeek(percentSavingsInAweek)\n    setPotentialSavingsInAday(percentSavingsInAday)\n\n    const carbonMunicipalValue = parseFloat(props.carbonMunicipalValue);\n\n    const kilosOfMonthlyCO2saved = (percentSavingsForCoverWaste + percentSavingsForPreparationWaste + percentSavingsForSpoilageWaste) * carbonMunicipalValue;\n\n    const mealsSaved = (percentSavingsForCoverWaste + percentSavingsForPreparationWaste + percentSavingsForSpoilageWaste) / 0.36\n\n    // console.log(\"percentSavingsForCoverWaste\",percentSavingsForCoverWaste)\n    // console.log(\"percentSavingsForPreparationWaste\",percentSavingsForPreparationWaste)\n    // console.log(\"percentSavingsForSpoilageWaste\",percentSavingsForSpoilageWaste)\n\n    const totalPercentagedSavingsTotal = parseFloat(percentSavingsForCoverWaste + percentSavingsForPreparationWaste + percentSavingsForSpoilageWaste)\n\n    const coverBreakDown = parseInt(coverWaste - percentSavingsForCoverWaste)\n    const spoilageBreakDown = parseInt(spoilageWaste - percentSavingsForSpoilageWaste)\n    const prepBreakDown = parseInt(preparationWaste - percentSavingsForPreparationWaste)\n\n    const yearlyKilosOfCO2saved = parseInt(kilosOfMonthlyCO2saved * 12);\n    const yearlyMealsSaved = parseInt(mealsSaved * 12);\n\n    setKiloOfCO2SavedYearlyDisplay(yearlyKilosOfCO2saved)\n    setNumberOfMealsSavedYearlyDisplay(yearlyMealsSaved)\n\n    // console.log(\"totalCSPforPreviousMonth\",totalCSPforPreviousMonth)\n    // console.log(\"totalPercentagedSavingsTotal\",totalPercentagedSavingsTotal)\n\n    const recommendTarget = parseInt(totalCSPforPreviousMonth - totalPercentagedSavingsTotal)\n\n    const percents = ((totalPercentagedSavingsTotal / totalCSPforPreviousMonth) * 100).toFixed(0)\n    setRecommendTargetDisplay(recommendTarget)\n    // setPercentaged(percents)\n\n    // console.log(\"percentSavingsInAday\",percentSavingsInAday)\n    // console.log(\"percentSavingsInAweek\",percentSavingsInAweek)\n    // console.log(\"percentSavingsInAmonth\",percentSavingsInAmonth)\n    // console.log(\"percentSavingsInAyear\",percentSavingsInAyear)\n    // console.log(\"yearlyKilosOfCO2saved\",yearlyKilosOfCO2saved)\n    // console.log(\"yearlyMealsSaved\",yearlyMealsSaved)\n    // console.log(\"percentaged\",percentaged)\n    // console.log(\"recommendTarget\",recommendTarget)\n    // console.log(\"totalCSPforPreviousMonth\",totalCSPforPreviousMonth)\n    // console.log(\"totalPercentagedSavingsTotal\",totalPercentagedSavingsTotal)\n    // console.log(\"coverBreakDown\",coverBreakDown)\n    // console.log(\"spoilageBreakDown\",spoilageBreakDown)\n    // console.log(\"prepBreakDown\",prepBreakDown)\n\n    const values = {\n        percentSavingsInAday,\n        percentSavingsInAweek,\n        percentSavingsInAmonth,\n        percentSavingsInAyear,\n        yearlyKilosOfCO2saved,\n        yearlyMealsSaved,\n        percents,\n        recommendTarget,\n        totalCSPforPreviousMonth,\n        totalPercentagedSavingsTotal,\n        coverBreakDown,\n        spoilageBreakDown,\n        prepBreakDown\n    }\n\n    console.log(\"values\",values);\n\n    setSendToDataBase(values)\n  }\n\n  const saveTargets = () => {\n    const data = {\n        targets: sendToDataBase,\n        companyname: props.companyName,\n        siteID: props.selectedSiteValueID,\n        companyId: props.companyID\n    }\n\n    console.log(\"data\",data);\n\n    postTargets(data).then(() => {\n      console.log(\"props\",props);\n      props.updateValues(\"TARGETS\")\n    })\n\n  }\n\n  return (\n      <>\n        <div className=\"dashboard settings\">\n            <div className=\"settings--wrapper\">\n              <div className=\"settings--title\">CALCULATE FOOD WASTE SAVINGS</div>\n              <div className=\"settings--subHeading\">See the potential impact on your bottom line</div>\n              <Menus\n                handleChange={handleChange}\n                checkActiveStep={checkActiveStep}\n                poundsKGconverter={poundsKGconverter}\n                savingPercentage={savingPercentage}\n                />\n\n\n          <div className=\"settings--current--targets\">\n            <div className=\"settings--wrapper\">\n              <div className=\"settings--title\">RECOMMENDED TARGETS FOR CSP WASTE</div>\n              <div className=\"settings--subHeading marginBottom\">Yearly, monthly, weekly and daily targets</div>\n\n              <div className=\"target__calculatorResults--styling\">\n              <div className=\"displayFlex\">Potential savings could be £ <div className=\"applyPurpleColor cooperHewittBold applyMarginRightAndLeft\">{roundedUpNumberAndTurnBackToNumber(potentialSavingsInAday)}</div> daily</div>\n              <div className=\"displayFlex\">Potential savings could be £ <div className=\"applyPurpleColor cooperHewittBold applyMarginRightAndLeft\">{roundedUpNumberAndTurnBackToNumber(potentialSavingsInWeek)}</div> in a week</div>\n              <div className=\"displayFlex\">Potential savings could be £ <div className=\"applyPurpleColor cooperHewittBold applyMarginRightAndLeft\">{roundedUpNumberAndTurnBackToNumber(potentialSavingsInMonth)}</div> in a month</div>\n              <div className=\"displayFlex\">Potential savings could be £ <div className=\"applyPurpleColor cooperHewittBold applyMarginRightAndLeft\">{roundedUpNumberAndTurnBackToNumber(potentialSavingsInYear)}</div> in a year</div>\n              <br />\n              <div className=\"displayFlex\">Equivalent of <div className=\"applyPurpleColor cooperHewittBold applyMarginRightAndLeft\">{kiloOfCO2SavedYearlyDisplay}</div> KG of CO2 saved in a year</div>\n              <div className=\"displayFlex\">Equivalent of <div className=\"applyPurpleColor cooperHewittBold applyMarginRightAndLeft\">{numberOfMealsSavedYearlyDisplay}</div> number of meals saved in a year</div>\n              <br />\n\n              <div className=\"displayFlex settings__recommendedTargets\">\n                <div className=\"settings__recommendedTargets__text\">\n                  Recommended target of\n                  <div className=\"applyPurpleColor cooperHewittBold applyMarginRightAndLeft\"> {isNaN(percentagedSavingsTotal / cspWasteOfPreviousMonth) ? 0 : roundedUpNumberAndTurnBackToNumber((percentagedSavingsTotal / cspWasteOfPreviousMonth) * 100)} </div>\n                  % MONTHLY CSP WASTE :\n                </div>\n\n                <div className=\"displayFlex\">\n                  <div className=\"applyPurpleColor cooperHewittBold applyMarginRightAndLeft\">{recommendTargetDisplay}</div>\n                  {\" \"}\n                  KG\n                  <br />\n                  <div className=\"applyPurpleColor cooperHewittBold applyMarginRightAndLeft\">\n                  {roundedUpNumberTwoPointsAndTurnBackToString(cspWasteOfPreviousMonth)}\n                  </div>\n                  {\" \"}\n                  - <div className=\"applyPurpleColor cooperHewittBold applyMarginRightAndLeft\">{roundedUpNumberTwoPointsAndTurnBackToString(percentagedSavingsTotal)}</div> (percentaged savings)\n                  {\" \"}\n                </div>\n\n              </div>\n              <br />\n\n              <div className=\"displayFlex\">\n                <div className=\"settings__recommendedTargets__exampleBreakDown\">\n                  Example breakdown\n                  {\" \"}\n                  <div className=\"applyPurpleColor cooperHewittBold applyMarginRightAndLeft\">\n                  {roundedUpNumberTwoPointsAndTurnBackToString(coverBreakDown)}\n                  </div>\n                  (cover)\n                  <div>\n                   +\n                  </div>\n                  {\" \"}\n                  <div className=\"applyPurpleColor cooperHewittBold applyMarginRightAndLeft\">\n                  {roundedUpNumberTwoPointsAndTurnBackToString(spoilageBreakDown)}\n                  </div>\n                  (spoilage)\n                  <div>\n                   +\n                  </div>\n                  {\" \"}\n                  <div className=\"applyPurpleColor cooperHewittBold applyMarginRightAndLeft\">\n                  {roundedUpNumberTwoPointsAndTurnBackToString(prepBreakDown)}\n                  </div>\n                  (preparation)\n                </div>\n              </div>\n\n            </div>\n            </div>\n          </div>\n\n            </div>\n        </div>\n      </>\n\n  );\n}\n","import React, {  useEffect, useState, useContext } from \"react\";\nimport { TableHead, Table, TableContainer, TableBody } from \"@material-ui/core\";\n// import TextField from \"@material-ui/core/TextField\";\nimport { postCapping } from \"../../../../api.js\";\n\nimport { roundedUpNumberAndTurnBackToString } from \"../../../../utilities\";\n\nimport { WasteCapContext } from \"../../../../contexts/waste-cap-context\";\n\nlet hourlyCoverWastesCap = 0\nlet hourlySpoliageWastesCap = 0\nlet hourlyPeparationWastesCap = 0\n\nlet dailyCoverWastesCap = 0\nlet dailySpoliageWastesCap = 0\nlet dailyPeparationWastesCap = 0\n\nlet weeklyCoverCap = 0\nlet weeklySpoliageCap = 0\nlet weeklyPreparationCap = 0\n\nlet monthlyCoverCap = 0\nlet monthlySpoliageCap = 0\nlet monthlyPreparationCap = 0\n\nlet totalCoverCap = 0\nlet totalSpoliageCap = 0\nlet totalPreparationCap = 0\n\nlet wastePerCoverCoverCap = 0\nlet wastePerCoverSpoliageCap = 0\nlet wastePerCoverPreparationCap = 0\n\nlet wastePerSalesCoverCap = 0\nlet wastePerSalesSpoliageCap = 0\nlet wastePerSalesPreparationCap = 0\n\nexport default function AddCapping(props) {\n\n    const {\n        allCappingValue\n    } = useContext(WasteCapContext);\n\n\n    let [ totalCappingValues, setTotalCappingValues] = useState([\n            {\n              id: 0,\n              value: totalCoverCap,\n              label: \"totalCoverWastes\",\n              type: \"C\"\n            },\n            {\n              id: 1,\n              value: totalSpoliageCap,\n              label: \"totalSpoilageWastes\",\n              type: \"S\"\n            },\n            {\n              id: 2,\n              value: totalPreparationCap,\n              label: \"totalPreparationWastes\",\n              type: \"P\"\n            }\n          ]\n        )\n\n    let [ monthlyCappingValues, setMonthlyCappingValues] = useState([\n            {\n                id: 0,\n                value: monthlyCoverCap,\n                label: \"monthlyCoverWastes\",\n                type: \"C\"\n            },\n            {\n                id: 1,\n                value: monthlySpoliageCap,\n                label: \"monthlySpoilageWastes\",\n                type: \"S\"\n            },\n            {\n                id: 2,\n                value: monthlyPreparationCap,\n                label: \"monthlyPreparationWastes\",\n                type: \"P\"\n            }\n        ]\n    )\n\n    let [ weeklyCappingValues, setWeeklyCappingValues] = useState([\n        {\n            id: 0,\n            value: weeklyCoverCap,\n            label: \"weeklyCoverWastes\",\n            type: \"C\"\n        },\n        {\n            id: 1,\n            value: weeklySpoliageCap,\n            label: \"weeklySpoilageWastes\",\n            type: \"S\"\n        },\n        {\n            id: 2,\n            value: weeklyPreparationCap,\n            label: \"weeklyPreparationWastes\",\n            type: \"P\"\n        }\n    ]\n    )\n\n    let [ dailyCappingValues, setDailyCappingValues] = useState([\n        {\n            id: 0,\n            value: dailyCoverWastesCap,\n            label: \"dailyCoverWastes\",\n            type: \"C\"\n        },\n        {\n            id: 1,\n            value: dailySpoliageWastesCap,\n            label: \"dailySpoilageWastes\",\n            type: \"S\"\n        },\n        {\n            id: 2,\n            value: dailyPeparationWastesCap,\n            label: \"dailyPreparationWastes\",\n            type: \"P\"\n        },\n    ]\n    )\n\n    let [ hourlyCappingValues, setHourlyCappingValues] = useState([\n        {\n            id: 0,\n            value: hourlyCoverWastesCap,\n            label: \"hourlyCoverWastes\",\n            type: \"C\"\n        },\n        {\n            id: 1,\n            value: hourlySpoliageWastesCap,\n            label: \"hourlySpoilageWastes\",\n            type: \"S\"\n        },\n        {\n            id: 2,\n            value: hourlyPeparationWastesCap,\n            label: \"hourlyPreparationWastes\",\n            type: \"P\"\n        }\n    ]\n    )\n\n    let [ wastePerCoverCappingValues, setWastePerCoverCappingValues] = useState([\n        {\n            id: 0,\n            value: wastePerCoverCoverCap,\n            label: \"wastePerCoverCoverWastes\",\n            type: \"C\"\n        },\n        {\n            id: 1,\n            value: wastePerCoverSpoliageCap,\n            label: \"wastePerCoverSpoilageWastes\",\n            type: \"S\"\n        },\n        {\n            id: 2,\n            value: wastePerCoverPreparationCap,\n            label: \"wastePerCoverPreparationWastes\",\n            type: \"P\"\n        }\n    ]\n    )\n\n    let [ wastePerSalesCappingValues, setWastePerSalesCappingValues] = useState([\n        {\n            id: 0,\n            value: wastePerSalesCoverCap,\n            label: \"wastePerSalesCoverWastes\",\n            type: \"C\"\n        },\n        {\n            id: 1,\n            value: wastePerSalesSpoliageCap,\n            label: \"wastePerSalesSpoilageWastes\",\n            type: \"S\"\n        },\n        {\n            id: 2,\n            value: wastePerSalesPreparationCap,\n            label: \"wastePerSalesPreparationWastes\",\n            type: \"P\"\n        }\n    ]\n    )\n\n    const [ companyName, setCompanyName ] = useState(\"\")\n    const [ companyId, setCompanyId ] = useState(\"\")\n    const [ siteId, setSiteId ] = useState(\"\")\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    useEffect(() => {\n        setCompanyName(props.companyName)\n        setCompanyId(props.companyID)\n        setSiteId(props.selectedSiteValueID)\n\n        if (allCappingValue) {\n            // console.log(\"YES allCappingValue\", allCappingValue)\n\n            setWastePerCoverCappingValues(allCappingValue.wastePerCoverCappingValues)\n            setWastePerSalesCappingValues(allCappingValue.wastePerSalesCappingValues)\n\n            setTotalCappingValues(allCappingValue.totalCappingValues)\n            setMonthlyCappingValues(allCappingValue.monthlyCappingValues)\n            setWeeklyCappingValues(allCappingValue.weeklyCappingValues)\n            setDailyCappingValues(allCappingValue.dailyCappingValues)\n            setHourlyCappingValues(allCappingValue.hourlyCappingValues)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props])\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        setIsSubmitting(true)\n\n        const data = {\n            totalCappingValues: totalCappingValues,\n            monthlyCappingValues: monthlyCappingValues,\n            weeklyCappingValues: weeklyCappingValues,\n            dailyCappingValues: dailyCappingValues,\n            hourlyCappingValues: hourlyCappingValues,\n            wastePerCoverCappingValues: wastePerCoverCappingValues,\n            wastePerSalesCappingValues: wastePerSalesCappingValues,\n            companyName: companyName,\n            companyId: companyId,\n            siteId: siteId\n        }\n\n        postCapping(data).then(() => {\n            props.callGetCappingAPI(companyId, companyName, siteId)\n            setIsSubmitting(false)\n        })\n    };\n\n    const handleFieldChange = (event) => {\n        const { name, value, id } = event.target;\n        console.log(\"name\",name)\n        console.log(\"value\",value)\n        console.log(\"id\",id)\n        switch(name) {\n            case \"totalCoverWastes\":\n                let num = roundedUpNumberAndTurnBackToString(value);\n                totalCappingValues[id].value = isNaN(num) ? 0 : num;\n              break;\n            case \"totalSpoilageWastes\":\n                let numTwo = roundedUpNumberAndTurnBackToString(value);\n                totalCappingValues[id].value = isNaN(numTwo) ? 0 : numTwo;\n              break;\n            case \"totalPreparationWastes\":\n                let numThree = roundedUpNumberAndTurnBackToString(value);\n                totalCappingValues[id].value = isNaN(numThree) ? 0 : numThree;\n              break;\n\n            case \"monthlyCoverWastes\":\n                let numFour = roundedUpNumberAndTurnBackToString(value);\n                monthlyCappingValues[id].value = isNaN(numFour) ? 0 : numFour;\n              break;\n            case \"monthlySpoilageWastes\":\n                let numFive = roundedUpNumberAndTurnBackToString(value);\n                monthlyCappingValues[id].value = isNaN(numFive) ? 0 : numFive;\n              break;\n            case \"monthlyPreparationWastes\":\n                let numSix = roundedUpNumberAndTurnBackToString(value);\n                monthlyCappingValues[id].value = isNaN(numSix) ? 0 : numSix;\n              break;\n\n            case \"weeklyCoverWastes\":\n                let numSeven = roundedUpNumberAndTurnBackToString(value);\n                weeklyCappingValues[id].value = isNaN(numSeven) ? 0 : numSeven;\n              break;\n            case \"weeklySpoilageWastes\":\n                let numEight = roundedUpNumberAndTurnBackToString(value);\n                weeklyCappingValues[id].value = isNaN(numEight) ? 0 : numEight;\n              break;\n            case \"weeklyPreparationWastes\":\n                let numNine = roundedUpNumberAndTurnBackToString(value);\n                weeklyCappingValues[id].value = isNaN(numNine) ? 0 : numNine;\n              break;\n\n            case \"dailyCoverWastes\":\n                let numTen = roundedUpNumberAndTurnBackToString(value);\n                dailyCappingValues[id].value = isNaN(numTen) ? 0 : numTen;\n              break;\n            case \"dailySpoilageWastes\":\n                let numEleven = roundedUpNumberAndTurnBackToString(value);\n                dailyCappingValues[id].value = isNaN(numEleven) ? 0 : numEleven;\n              break;\n            case \"dailyPreparationWastes\":\n                let numTwelve = roundedUpNumberAndTurnBackToString(value);\n                dailyCappingValues[id].value = isNaN(numTwelve) ? 0 : numTwelve;\n              break;\n\n            case \"hourlyCoverWastes\":\n                let numThirteen = roundedUpNumberAndTurnBackToString(value);\n                hourlyCappingValues[id].value = isNaN(numThirteen) ? 0 : numThirteen;\n              break;\n            case \"hourlySpoilageWastes\":\n                let numFourteen = roundedUpNumberAndTurnBackToString(value);\n                hourlyCappingValues[id].value = isNaN(numFourteen) ? 0 : numFourteen;\n              break;\n            case \"hourlyPreparationWastes\":\n                let numFifteen = roundedUpNumberAndTurnBackToString(value);\n                hourlyCappingValues[id].value = isNaN(numFifteen) ? 0 : numFifteen;\n              break;\n\n            case \"wastePerCoverCoverWastes\":\n                // let numSixteen = roundedUpNumberAndTurnBackToString(value);\n                wastePerCoverCappingValues[id].value = isNaN(value) ? 0 : parseFloat(value);\n                break;\n            case \"wastePerCoverSpoilageWastes\":\n                // let numSeventeen = roundedUpNumberAndTurnBackToString(value);\n                wastePerCoverCappingValues[id].value = isNaN(value) ? 0 : parseFloat(value);\n                break;\n            case \"wastePerCoverPreparationWastes\":\n                // let numEighteen = roundedUpNumberAndTurnBackToString(value);\n                wastePerCoverCappingValues[id].value = isNaN(value) ? 0 : parseFloat(value);\n                break;\n\n            case \"wastePerSalesCoverWastes\":\n                // let numNineteen = roundedUpNumberAndTurnBackToString(value);\n                wastePerSalesCappingValues[id].value = isNaN(value) ? 0 : parseFloat(value);\n                break;\n            case \"wastePerSalesSpoilageWastes\":\n                // let numTwenty = roundedUpNumberAndTurnBackToString(value);\n                wastePerSalesCappingValues[id].value = isNaN(value) ? 0 : parseFloat(value);\n                break;\n            case \"wastePerSalesPreparationWastes\":\n                // let numTwentyOne = roundedUpNumberAndTurnBackToString(value);\n                wastePerSalesCappingValues[id].value = isNaN(value) ? 0 : parseFloat(value);\n                break;\n\n            default:\n        }\n    }\n\n    return (\n        <>\n        <div\n            className=\"capping-wrapper\"\n        >\n            <h2>{siteId.replace(/[^A-Za-z]+/g, '').toUpperCase()} Capping (in KG)</h2>\n            <form onSubmit={handleSubmit}>\n                <TableContainer className=\"dashboard__tableContainer\">\n\n                    <Table stickyHeader aria-label=\"sticky table\">\n\n                        <TableHead>\n                            <tr>\n                                <th className=\"userInput__tableCell cooperHewittBold\">\n                                Capping CSP{\" \"}\n                                </th>\n                                <th className=\"userInput__tableCell\">\n                                <b className=\"applyPurpleColor\">C</b>over Waste{\" \"}\n                                </th>\n                                <th className=\"userInput__tableCell\">\n                                <b className=\"applyPurpleColor\">S</b>poilage Waste\n                                </th>\n                                <th className=\"userInput__tableCell\">\n                                <b className=\"applyPurpleColor\">P</b>reparation{\" \"} Waste\n                                </th>\n                            </tr>\n                        </TableHead>\n\n                        <TableBody>\n                            <tr>\n                                <td className=\"userInput__tableCell cooperHewittBold\">Total Waste</td>\n                                {totalCappingValues.map((data, i) => (\n                                <td className=\"userInput__tableCell userInput__input cooperHewittBold\">\n                                    {data.type}\n                                    <input\n                                        className=\"capping__itemStyling applyMarginRightAndLeft inputBox\"\n                                        InputProps={{ disableUnderline: true }}\n                                        placeholder={(data.value).toFixed(2)}\n                                        type=\"number\"\n                                        id={i}\n                                        name={data.label}\n                                        onChange={handleFieldChange}\n                                        onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\", \"NaN\"].includes(evt.key) && evt.preventDefault()}\n                                    ></input>\n                                </td>\n                                ))}\n                            </tr>\n\n                            <tr>\n                                <td className=\"userInput__tableCell cooperHewittBold\">Monthly Waste <span>(SMS Alerts Available)</span> </td>\n                                {monthlyCappingValues.map((data, i) => (\n                                <td className=\"userInput__tableCell userInput__input cooperHewittBold\">\n                                    {data.type}\n                                    <input\n                                        className=\"capping__itemStyling applyMarginRightAndLeft inputBox\"\n                                        placeholder={(data.value).toFixed(2)}\n                                        InputProps={{ disableUnderline: true }}\n                                        type=\"number\"\n                                        id={i}\n                                        name={data.label}\n                                        onChange={handleFieldChange}\n                                        onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n                                    ></input>\n                                </td>\n                                ))}\n                            </tr>\n\n                            <tr>\n                                <td className=\"userInput__tableCell cooperHewittBold\">Weekly Waste <span>(SMS Alerts Available)</span></td>\n                                {weeklyCappingValues.map((data, i) => (\n                                <td className=\"userInput__tableCell userInput__input cooperHewittBold\">\n                                    {data.type}\n                                    <input\n                                        className=\"capping__itemStyling inputBox\"\n                                        placeholder={(data.value).toFixed(2)}\n                                        InputProps={{ disableUnderline: true }}\n                                        type=\"number\"\n                                        id={i}\n                                        name={data.label}\n                                        onChange={handleFieldChange}\n                                        onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n                                    ></input>\n                                </td>\n                                ))}\n                            </tr>\n\n                            <tr>\n                                <td className=\"userInput__tableCell cooperHewittBold\">Daily Waste <span>(SMS Alerts Available)</span></td>\n                                {dailyCappingValues.map((data, i) => (\n                                <td className=\"userInput__tableCell userInput__input cooperHewittBold\">\n                                    {data.type}\n                                    <input\n                                        className=\"capping__itemStyling inputBox\"\n                                        placeholder={(data.value).toFixed(2)}\n                                        InputProps={{ disableUnderline: true }}\n                                        type=\"number\"\n                                        id={i}\n                                        name={data.label}\n                                        onChange={handleFieldChange}\n                                        onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n                                    ></input>\n                                </td>\n                                ))}\n                            </tr>\n\n                            <tr>\n                                <td className=\"userInput__tableCell cooperHewittBold\">Hourly Waste</td>\n                                {hourlyCappingValues.map((data, i) => (\n                                <td className=\"userInput__tableCell userInput__input cooperHewittBold\">\n                                    {data.type}\n                                    <input\n                                        className=\"capping__itemStyling inputBox\"\n                                        placeholder={(data.value).toFixed(2)}\n                                        InputProps={{ disableUnderline: true }}\n                                        type=\"number\"\n                                        id={i}\n                                        name={data.label}\n                                        onChange={handleFieldChange}\n                                        onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n                                    ></input>\n                                </td>\n                                ))}\n                            </tr>\n\n                            <tr>\n                                <td className=\"userInput__tableCell cooperHewittBold\">Waste Per Cover (SMS Alerts Available)</td>\n                                {wastePerCoverCappingValues.map((data, i) => (\n                                <td className=\"userInput__tableCell userInput__input cooperHewittBold\">\n                                    {data.type}\n                                    <input\n                                        className=\"capping__itemStyling applyMarginRightAndLeft inputBox\"\n                                        InputProps={{ disableUnderline: true }}\n                                        placeholder={(data.value).toFixed(2)}\n                                        // type=\"number\"\n                                        id={i}\n                                        name={data.label}\n                                        onChange={handleFieldChange}\n                                        onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\", \"NaN\"].includes(evt.key) && evt.preventDefault()}\n                                    ></input>\n                                </td>\n                                ))}\n                            </tr>\n\n                            <tr>\n                                <td className=\"userInput__tableCell cooperHewittBold\">Waste Per Sales</td>\n                                {wastePerSalesCappingValues.map((data, i) => (\n                                <td className=\"userInput__tableCell userInput__input cooperHewittBold\">\n                                    {data.type}\n                                    <input\n                                        className=\"capping__itemStyling applyMarginRightAndLeft inputBox\"\n                                        InputProps={{ disableUnderline: true }}\n                                        placeholder={(data.value).toFixed(2)}\n                                        // type=\"number\"\n                                        id={i}\n                                        name={data.label}\n                                        onChange={handleFieldChange}\n                                        onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\", \"NaN\"].includes(evt.key) && evt.preventDefault()}\n                                    ></input>\n                                </td>\n                                ))}\n                            </tr>\n\n                        </TableBody>\n\n                    </Table>\n\n                </TableContainer>\n\n                <button className=\"marginTop\">\n                    {isSubmitting ? \"resubmit\" : \"Save Cap\"}\n                </button>\n\n            </form>\n        </div>\n\n        <div className=\"capping-info\">\n           <div>\n                <span className=\"applyPurpleColor cooperHewittBold\">Daily waste values</span> are checked against the daily capping values every day at <span className=\"applyPurpleColor cooperHewittBold\">3 pm</span>.\n           </div>\n           <div>\n                <span className=\"applyPurpleColor cooperHewittBold\">Weekly waste values</span> are checked against the weekly capping values every week at <span className=\"applyPurpleColor cooperHewittBold\">12 pm</span> on a Monday.\n           </div>\n           <div>\n                <span className=\"applyPurpleColor cooperHewittBold\">Monthly waste values</span> are checked against the monthly capping values on the 1st of the Month at <span className=\"applyPurpleColor cooperHewittBold\">3 pm</span>.\n           </div>\n        </div>\n\n        </>\n    )\n}\n","import React from 'react'\nimport \"./pagination.css\"\n\nimport ReactPaginate from \"react-paginate\";\n\nexport default function pagination(props) {\n    return (\n        <div className=\"paginationWrapper\">\n        <ReactPaginate\n            previousLabel={\"Previous\"}\n            nextLabel={\"Next\"}\n            pageCount={props.pageCount}\n            onPageChange={props.onPageChange}\n            containerClassName={\"paginationBttns\"}\n            previousLinkClassName={\"previousBttn\"}\n            nextLinkClassName={\"nextBttn\"}\n            disabledClassName={\"paginationDisabled\"}\n            activeClassName={\"paginationActive\"}\n            initialPage={props.index}\n        />\n    </div>\n    )\n}\n","import React, {  useContext,  useState, useEffect} from \"react\";\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport moment from \"moment\";\n\nimport Pagination from \"./../reuseable-components/pagination/pagination.js\"\n\nimport { DailySalesVsWasteContext } from \"../../../../contexts/daily-sales-vs-waste-context\";\n\nimport {\n    formatDateToDatabaseDateFormat,\n    formatSiteName,\n    addDaysToDate\n} from \"../../../../utilities\";\n\nimport {\n    addMenuInput,\n} from \"../../../../api\";\n\nconst getWeight = (salesNum, weightNum, wasteNum) => {\n\n    // console.log(\"salesNum\",salesNum)\n    // console.log(\"weightNum\",weightNum)\n    // console.log(\"wasteNum\",wasteNum)\n\n    const sales = salesNum === \"\" || salesNum === undefined ? 0: salesNum;\n    const weight = weightNum === \"\" || weightNum === undefined ? 0: weightNum;\n    const waste = wasteNum === \"\" || wasteNum === undefined ? 0: wasteNum;\n\n    const weightAsWaste = (parseFloat(sales) * parseFloat(weight) * parseFloat(waste))/ 100\n    return (weightAsWaste).toFixed(2);\n}\n\nconst getWastePerSales = (salesNum, weightNum, wasteNum) => {\n\n    // console.log(\"salesNum\",salesNum)\n    // console.log(\"weightNum\",weightNum)\n    // console.log(\"wasteNum\",wasteNum)\n\n    const sales = salesNum === \"\" || salesNum === undefined ? 0: salesNum;\n    const weight = weightNum === \"\" || weightNum === undefined  ? 0: weightNum;\n    const waste = wasteNum === \"\" || wasteNum === undefined ? 0: wasteNum;\n\n    const weightAsWaste = (parseFloat(sales) * parseFloat(weight) * parseFloat(waste))/ 100\n\n    if (weightAsWaste === 0 && parseFloat(sales) === 0) {\n        return 0;\n    } else {\n        const result = weightAsWaste / parseFloat(sales);\n        return result.toFixed(2)\n    }\n}\n\nexport default function CoverInputs(props) {\n\n    const {\n        dailyMenuInputs,\n        siteName,\n        companyName,\n        id,\n        filterOutEmptyObjects,\n        filterMenuItems,\n        firstDayOfTheWeek,\n        updateDailySalesVsWasteInput,\n        index\n    } = useContext(DailySalesVsWasteContext);\n\n\n    const [displays, setDisplays] = useState([]);\n    const [site, setSite] = useState([]);\n    const [date, setDate] = useState([]);\n\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    const [pageNumber, setPageNumber] = useState(0);\n\n    useEffect(() => {\n        setDisplays(dailyMenuInputs)\n        const formatedSiteName = formatSiteName(siteName)\n        setSite(formatedSiteName)\n\n        // console.log(\"props\",props)\n\n        if (date.length === 0) {\n            let formatedDate = moment().format('MMM DD YYYY');\n            setDate(formatedDate);\n        }\n\n        setIsSubmitting(false)\n\n    }, [props, dailyMenuInputs]);\n\n    const handleSubmit = (e) => {\n        // console.log(\"e\",e)\n        e.preventDefault();\n        // console.log(\"displays\",displays);\n        // let date = new Date()\n        const formatedDate = formatDateToDatabaseDateFormat(date)\n        // console.log(\"formatedDate\",formatedDate)\n\n        const addDateToObject = displays.map((data) => {\n             return Object.assign(data, {date: formatedDate});\n        })\n\n        // console.log(\"addDateToObject\",addDateToObject)\n        const removeEmptyFields = filterOutEmptyObjects(addDateToObject)\n        // console.log(\"removeEmptyFields\",removeEmptyFields)\n\n        let objectReturnedToDB;\n\n        if (removeEmptyFields.length === 0) {\n            objectReturnedToDB = [{\n                \"menuItem\": \"\",\n                \"sales\": 0,\n                \"wastePerCent\": 0,\n                \"weightPerItem\": 0,\n                \"date\": formatedDate\n            }]\n        } else {\n            objectReturnedToDB = removeEmptyFields\n        }\n\n        // console.log(\"removeEmptyFields\",removeEmptyFields);\n        // console.log(\"objectReturnedToDB\",objectReturnedToDB);\n\n        addMenuInput(objectReturnedToDB, siteName, companyName, id).then(() => {\n\n           console.log(\"pageNumber\",pageNumber);\n\n           updateDailySalesVsWasteInput(props.companyID, props.companyName, props.selectedSiteValueID, pageNumber)\n        }).then(() => {\n            // console.log(\"pageNumber\",pageNumber);\n            // let formatedDate = moment().format('MMM DD YYYY');\n            // setDate(formatedDate);\n            const newDate = addDaysToDate(firstDayOfTheWeek, pageNumber);\n            setDate(newDate);\n        })\n        setIsSubmitting(true)\n    }\n\n    const handleAddFields = () => {\n        if (displays.length <= 20) {\n            setDisplays([...displays,\n                {\n                    weightPerItem: 0, menuItem: \"menu item\", sales: 0, wastePerCent: 0\n                },\n            ])\n        }\n    };\n\n    const handleChangeInput = (id, event) => {\n        // console.log(\"id\", id)\n        // console.log(\"event\", event)\n\n        const newInputFields =\n        displays.map((data, i)=> {\n            if(id === i) {\n                // console.log(\"data[event.target.name]\",data[event.target.name])\n                // console.log(\"event.target.value\",event.target.value)\n\n                data[event.target.name] = event.target.value\n            }\n            return data;\n        })\n\n        // console.log(\"newInputFields\",newInputFields)\n        setDisplays(newInputFields);\n    }\n\n    const deleteItem = (data, id) => {\n        // console.log(\"id\",id)\n        // console.log(\"displays\",displays);\n        const values  = [...displays];\n        values.splice(id, 1);\n        // console.log(\"values\",values)\n        setDisplays(values)\n    }\n\n    const changePage = ({ selected }) => {\n        // console.log(\"selected\", selected)\n        //this gives page number starting from 0\n        setPageNumber(selected);\n        filterMenuItems(selected);\n\n        const newDate = addDaysToDate(firstDayOfTheWeek, selected);\n        console.log(\"newDate\",newDate);\n        setDate(newDate)\n    };\n\n  return (\n\n    <>\n\n    <div className=\"DailySalesVsWasteReport applyBlueTuckGreen\">\n\n\n        <div\n        className=\"DailySalesVsWasteReport__spacing\"\n        >\n\n            <div className=\"DailySalesVsWasteReport__heading\">\n                <div\n                className=\"DailySalesVsWasteReport__label\"\n                >\n                    <div className=\"applyPurpleColor cooperHewittBold\">{site}</div>\n                    <div className=\"section-title\">Top Daily Sales</div>\n                    <div className=\"applyPurpleColor cooperHewittBold\">{date}</div>\n                </div>\n                <div>\n                    <IconButton\n                        onClick={handleAddFields}\n                        >\n                        <AddIcon />\n                    </IconButton>\n                </div>\n            </div>\n\n            <div\n            className=\"DailySalesVsWasteReport__tableLayout\"\n\n            >\n\n                <div>Top 10 or 20 sales</div>\n                <div>Sales</div>\n                <div>Weight Kg</div>\n                <div>Waste %</div>\n                <div>(Weight)</div>\n                <div>Waste per sales</div>\n                <div style={{marginLeft: \"2rem\"}}></div>\n\n\n            </div>\n\n            <div\n            className=\"DailySalesVsWasteReport__tableLayout\"\n            >\n\n                <form style={{\n                    width: \"100%\"\n                }}>\n\n                    {displays.map((data, id) => {\n                        return (\n                            <div\n                                className=\"DailySalesVsWasteReport__inputLayout\"\n                            >\n                                <div style={{display: \"flex\"}}>\n                                    <input\n                                        placeholder={data.menuItem}\n                                        name=\"menuItem\"\n                                        onChange={event => handleChangeInput(id, event)}\n                                        type=\"text\"\n                                        onKeyDown={(evt) => [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"].includes(evt.key) && evt.preventDefault()}\n                                    />\n                                    <input\n                                        placeholder={data.sales}\n                                        name=\"sales\"\n                                        onChange={event => handleChangeInput(id, event)}\n                                        type=\"number\"\n                                        onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n                                    />\n                                    <input\n                                        placeholder={data.weightPerItem}\n                                        name=\"weightPerItem\"\n                                        onChange={event => handleChangeInput(id, event)}\n                                        type=\"number\"\n                                        onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n                                    />\n                                    <input\n                                        placeholder={data.wastePerCent}\n                                        name=\"wastePerCent\"\n                                        onChange={event => handleChangeInput(id, event)}\n                                        type=\"number\"\n                                        onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n                                    />\n                                </div>\n                                <div\n                                className=\"DailySalesVsWasteReport__autoCalculator\"\n\n                                >( {getWeight(data.sales, data.weightPerItem, data.wastePerCent)} ) Kg</div>\n                                <div\n                                className=\"DailySalesVsWasteReport__autoCalculator\"\n\n                                > {getWastePerSales(data.sales, data.weightPerItem, data.wastePerCent)} </div>\n                                <div style={{marginLeft: \"2rem\", fontFamily: \"CooperHewitt-Bold\", cursor: \"pointer\"}} onClick={()=> deleteItem(data, id)}>Delete</div>\n                            </div>\n                        )\n                    })}\n\n                    <div\n                        className=\"DailySalesVsWasteReport__buttonLayout\"\n                    >\n                        <button\n                            onClick={event => handleSubmit(event)}\n                        >\n                            {isSubmitting ? \"Submitted\" : \"Submit\"}\n                        </button>\n                    </div>\n\n                </form>\n\n            </div>\n        </div>\n\n    </div>\n\n    <Pagination index={index} onPageChange={changePage} pageCount={7} />\n    </>\n\n  );\n}","import React from 'react'\n\nimport { Link } from \"react-router-dom\";\n\nexport default function inputsList(props) {\n    return (\n        <>\n            <div className=\"inputs__list__container\">\n                <div className=\"inputs__link-wrapper\">\n                    {/* <Link className=\"inputs__link-wrapper-center\" to=\"/inputs\">Add Cover Inputs & Add Sales Inputs</Link> */}\n                    <Link className=\"inputs__link-wrapper-center\" to=\"/dailySalesVsWasteInputs\">Add Menu Items</Link>\n                    <Link className=\"inputs__link-wrapper-center\" to=\"/salesInputs\">Add Sales Inputs</Link>\n                    <Link className=\"inputs__link-wrapper-center\" to=\"/coverInputs\">Add Cover Inputs</Link>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\n\nimport Switch from \"@material-ui/core/Switch\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Switches from \"../libs/use-switches\";\n\nexport default function DisplaySettings() {\n\n    const { handleChange, checked } = Switches()\n\n    const useStyles = makeStyles({\n        switchBase: {\n          color: \"grey\",\n          \"&$checked\": {\n            color: \"#81358A\"\n          },\n          \"&$checked + $track\": {\n            backgroundColor: \"#81358A\"\n          }\n        },\n        checked: {},\n        track: {}\n    });\n\n    const classes = useStyles();\n\n    return (\n        <div className=\"displaySettings\">\n\n            <div className=\"switchesWrapper\">\n\n                <h3 className=\"dashboard__reportMenu--fontSize applyPurpleColor cooperHewittBold marginBottomAndTopBy1rem\">Hourly, Daily, Weekly and Monthly Graphs</h3>\n\n                <div className=\"radio\">\n                    <label className=\"menuTitle--fontSize\">\n                    <Switch\n                        focusVisibleClassName={classes.focusVisible}\n                        disableRipple\n                        size=\"small\"\n                        onChange={handleChange}\n                        name=\"hourlyChartSwitch\"\n                        checked={checked.hourlyChartSwitch}\n                        classes={{\n                        switchBase: classes.switchBase,\n                        track: classes.track,\n                        checked: classes.checked\n                        }}\n                    />\n                    <p className=\"cooperHewittBold\">Hide Hourly Waste Report</p>\n                    </label>\n                </div>\n\n                <div className=\"radio\">\n                    <label className=\"menuTitle--fontSize\">\n                    <Switch\n                        focusVisibleClassName={classes.focusVisible}\n                        disableRipple\n                        size=\"small\"\n                        onChange={handleChange}\n                        name=\"dailyChartSwitch\"\n                        checked={checked.dailyChartSwitch}\n                        classes={{\n                        switchBase: classes.switchBase,\n                        track: classes.track,\n                        checked: classes.checked\n                        }}\n                    />\n                    <p className=\"cooperHewittBold\">Hide Daily Waste Report</p>\n                    </label>\n                </div>\n\n                <div className=\"radio\">\n                    <label className=\"menuTitle--fontSize\">\n                    <Switch\n                        focusVisibleClassName={classes.focusVisible}\n                        disableRipple\n                        size=\"small\"\n                        onChange={handleChange}\n                        name=\"wasteOnAdayOfTheWeekSwitch\"\n                        checked={checked.wasteOnAdayOfTheWeekSwitch}\n                        classes={{\n                        switchBase: classes.switchBase,\n                        track: classes.track,\n                        checked: classes.checked\n                        }}\n                    />\n                    <p className=\"cooperHewittBold\">Hide Waste On A Day Of The Week</p>\n                    </label>\n                </div>\n\n                <div className=\"radio\">\n                    <label className=\"menuTitle--fontSize\">\n                    <Switch\n                        focusVisibleClassName={classes.focusVisible}\n                        disableRipple\n                        size=\"small\"\n                        onChange={handleChange}\n                        name=\"weeklyChartSwitch\"\n                        checked={checked.weeklyChartSwitch}\n                        classes={{\n                        switchBase: classes.switchBase,\n                        track: classes.track,\n                        checked: classes.checked\n                        }}\n                    />\n                    <p className=\"cooperHewittBold\">Hide Weekly Waste Report</p>\n                    </label>\n                </div>\n\n                <div className=\"radio\">\n                    <label className=\"menuTitle--fontSize\">\n                    <div>\n                    <Switch\n                        focusVisibleClassName={classes.focusVisible}\n                        disableRipple\n                        size=\"small\"\n                        onChange={handleChange}\n                        name=\"monthlyChartSwitch\"\n                        checked={checked.monthlyChartSwitch}\n                        classes={{\n                        switchBase: classes.switchBase,\n                        track: classes.track,\n                        checked: classes.checked\n                        }}\n                    />\n                        <p className=\"cooperHewittBold\">Hide Monthly Waste Report</p>\n                    </div>\n                    </label>\n                </div>\n\n                <h3 className=\"dashboard__reportMenu--fontSize applyPurpleColor cooperHewittBold marginBottomAndTopBy1rem\">Correlated Graphs</h3>\n\n                <div className=\"radio\">\n                    <label className=\"menuTitle--fontSize\">\n                    <div>\n                    <Switch\n                        focusVisibleClassName={classes.focusVisible}\n                        disableRipple\n                        size=\"small\"\n                        onChange={handleChange}\n                        name=\"wastePerSalesSwitch\"\n                        checked={checked.wastePerSalesSwitch}\n                        classes={{\n                        switchBase: classes.switchBase,\n                        track: classes.track,\n                        checked: classes.checked\n                        }}\n                    />\n                        <p className=\"cooperHewittBold\">Hide Waste per Sales Report</p>\n                    </div>\n                    </label>\n                </div>\n\n                <div className=\"radio\">\n                    <label className=\"menuTitle--fontSize\">\n                    <div>\n                    <Switch\n                        focusVisibleClassName={classes.focusVisible}\n                        disableRipple\n                        size=\"small\"\n                        onChange={handleChange}\n                        name=\"wastePerCoverSwitch\"\n                        checked={checked.wastePerCoverSwitch}\n                        classes={{\n                        switchBase: classes.switchBase,\n                        track: classes.track,\n                        checked: classes.checked\n                        }}\n                    />\n                        <p className=\"cooperHewittBold\">Hide Waste per Cover Report</p>\n                    </div>\n                    </label>\n                </div>\n\n                <div className=\"radio\">\n                    <label className=\"menuTitle--fontSize\">\n                    <div>\n                    <Switch\n                        focusVisibleClassName={classes.focusVisible}\n                        disableRipple\n                        size=\"small\"\n                        onChange={handleChange}\n                        name=\"dailySalesVsWasteReportSwitch\"\n                        checked={checked.dailySalesVsWasteReportSwitch}\n                        classes={{\n                        switchBase: classes.switchBase,\n                        track: classes.track,\n                        checked: classes.checked\n                        }}\n                    />\n                        <p className=\"cooperHewittBold\">Hide Daily Sales Vs Waste Report</p>\n                    </div>\n                    </label>\n                </div>\n\n                <h3 className=\"dashboard__reportMenu--fontSize applyPurpleColor cooperHewittBold marginBottomAndTopBy1rem\">Food Waste Forecast</h3>\n\n                <div className=\"radio\">\n                    <label className=\"menuTitle--fontSize\">\n                    <div>\n                    <Switch\n                        focusVisibleClassName={classes.focusVisible}\n                        disableRipple\n                        size=\"small\"\n                        onChange={handleChange}\n                        name=\"aiPredictionSwitch\"\n                        checked={checked.aiPredictionSwitch}\n                        classes={{\n                        switchBase: classes.switchBase,\n                        track: classes.track,\n                        checked: classes.checked\n                        }}\n                    />\n                        <p className=\"cooperHewittBold\">Hide Ai Prediction Report</p>\n                    </div>\n                    </label>\n                </div>\n\n                <h3 className=\"dashboard__reportMenu--fontSize applyPurpleColor cooperHewittBold marginBottomAndTopBy1rem\">Food Waste Targets</h3>\n\n                <div className=\"radio\">\n                    <label className=\"menuTitle--fontSize\">\n                    <div>\n                    <Switch\n                        focusVisibleClassName={classes.focusVisible}\n                        disableRipple\n                        size=\"small\"\n                        onChange={handleChange}\n                        name=\"foodWasteTargetSwitch\"\n                        checked={checked.foodWasteTargetSwitch}\n                        classes={{\n                        switchBase: classes.switchBase,\n                        track: classes.track,\n                        checked: classes.checked\n                        }}\n                    />\n                        <p className=\"cooperHewittBold\">Hide Food Waste Target Report</p>\n                    </div>\n                    </label>\n                </div>\n\n                <h3 className=\"dashboard__reportMenu--fontSize applyPurpleColor cooperHewittBold marginBottomAndTopBy1rem\">Total Food Waste</h3>\n\n                <div className=\"radio\">\n                    <label className=\"menuTitle--fontSize\">\n                    <div>\n                    <Switch\n                        focusVisibleClassName={classes.focusVisible}\n                        disableRipple\n                        size=\"small\"\n                        onChange={handleChange}\n                        name=\"totalSiteWasteSwitch\"\n                        checked={checked.totalSiteWasteSwitch}\n                        classes={{\n                        switchBase: classes.switchBase,\n                        track: classes.track,\n                        checked: classes.checked\n                        }}\n                    />\n                        <p className=\"cooperHewittBold\">Hide Total Site Waste Report</p>\n                    </div>\n                    </label>\n                </div>\n\n                <h3 className=\"dashboard__reportMenu--fontSize applyPurpleColor cooperHewittBold marginBottomAndTopBy1rem\">Food Waste Trends</h3>\n\n                <div className=\"radio\">\n                    <label className=\"menuTitle--fontSize\">\n                    <div>\n                    <Switch\n                        focusVisibleClassName={classes.focusVisible}\n                        disableRipple\n                        size=\"small\"\n                        onChange={handleChange}\n                        name=\"weeklyWasteTrendSwitch\"\n                        checked={checked.weeklyWasteTrendSwitch}\n                        classes={{\n                        switchBase: classes.switchBase,\n                        track: classes.track,\n                        checked: classes.checked\n                        }}\n                    />\n                        <p className=\"cooperHewittBold\">Hide Weekly Waste Trend Report</p>\n                    </div>\n                    </label>\n                </div>\n\n\n            </div>\n\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\n// import {\n//   wasteDailyDateRange,\n// } from \"../../../../utilities\";\n\nimport {\n  weeklyDateFormat,\n  getCurrentWeek\n} from \"../../../../helper\";\n\nimport { InputsContext } from \"../../../../contexts/inputs-context\";\n\nimport Pagination from \"./../reuseable-components/pagination/pagination.js\"\n\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function CoverInputs(props) {\n\n  const label = { inputProps: { 'aria-label': 'Checkbox demo' } };\n\n  const {\n    thisWeekCoverInputs,\n    allWeekCoverInput,\n    selectedSiteValueID,\n    sendDataToDatabase,\n    companyName,\n    companyID,\n    filterMenuItems,\n   } = useContext(InputsContext);\n\n  const { handleSubmit } = useForm();\n\n  const [covers, setCovers] = useState([\n    {\n      day: \"Monday\",\n      value: 0,\n      require: false,\n      checkBox: false\n    },\n    {\n      day: \"Tuesday\",\n      value: 0,\n      require: false,\n      checkBox: false\n    },\n    {\n      day: \"Wednesday\",\n      value: 0,\n      require: false,\n      checkBox: false\n    },\n    {\n      day: \"Thursday\",\n      value: 0,\n      require: false,\n      checkBox: false\n    },\n    {\n      day: \"Friday\",\n      value: 0,\n      require: false,\n      checkBox: false\n    },\n    {\n      day: \"Saturday\",\n      value: 0,\n      require: false,\n      checkBox: false\n    },\n    {\n      day: \"Sunday\",\n      value: 0,\n      require: false,\n      checkBox: false\n    }\n  ]);\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // const dailyChartXaxis = JSON.parse(localStorage.getItem('dailyChartXaxis')) || \"\"\n  // let dateRangeLable = wasteDailyDateRange(dailyChartXaxis);\n\n  const [pageCount, setPageCount] = useState(7);\n  const [date, setDate] = useState(7);\n  const [firstDateOfTheWeek, setFirstDateOfTheWeek] = useState(7);\n  const [weekOfYear, setWeekOfYear] = useState(7);\n\n  useEffect(() => {\n\n      if (thisWeekCoverInputs !== undefined) {\n\n        setFirstDateOfTheWeek(thisWeekCoverInputs.Date)\n        setWeekOfYear(thisWeekCoverInputs.weekOfYear)\n\n        const date = weeklyDateFormat(thisWeekCoverInputs.Date)\n        setDate(date)\n        setPageCount(allWeekCoverInput.length)\n\n        let newArray = [];\n\n        // console.log(\"thisWeekCoverInputs\",thisWeekCoverInputs);\n\n        thisWeekCoverInputs.coversInput.map((data, index) => {\n          covers[index].value = data;\n          covers[index].checkBox = false;\n\n          newArray.push(covers[index]);\n          return \"\"\n        });\n\n        if (thisWeekCoverInputs.checkBox !== undefined) {\n          thisWeekCoverInputs.checkBox.map((data, index) => {\n            newArray[index].checkBox = data === 1 ? true : false;\n            return \"\"\n          });\n        }\n\n        // console.log(\"newArray\",newArray);\n\n        setCovers(newArray);\n      }\n\n      let numberOfDates;\n      let today = new Date().getDay();\n      if (today === 0) {\n        numberOfDates = 7;\n      } else {\n        numberOfDates = today;\n      }\n\n      for (let i = 0; i < numberOfDates; i++) {\n\n        if (covers[i].value === 0) {\n          covers[i].require = true;\n          setCovers([...covers]);\n        } else {\n          covers[i].require = false;\n          setCovers([...covers]);\n        }\n      }\n\n      setIsSubmitting(isSubmitting)\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n}, [thisWeekCoverInputs]);\n\n\n  const onSubmit = () => {\n    setIsSubmitting(true)\n\n\n    const confirmedCovers = covers.map((data) => {\n      return parseInt(data.value);\n    });\n\n    const checkBox = covers.map((data) => {\n      if (data.checkBox) {\n        return 1\n      } else {\n        return 0;\n      }\n    });\n    // console.log(\"checkBox\",checkBox);\n\n    const params = {\n      companyId: companyID,\n      companyName: companyName,\n      siteName: selectedSiteValueID,\n      covers: confirmedCovers,\n      checkBox: checkBox,\n      firstDateOfTheWeek: firstDateOfTheWeek,\n      weekOfYear: weekOfYear\n    }\n\n    // console.log(\"params\",params)\n\n    sendDataToDatabase(\"COVER INPUTS\", params)\n\n    props.history.push('/dashboard');\n  };\n\n  const handleChange = (e) => {\n    let newArray = [];\n\n    covers.map((item) => {\n      if (item.day === e.target.name) {\n        item.value = e.target.value;\n        newArray.push(item);\n      } else {\n        newArray.push(item);\n      }\n      return \"\"\n    });\n\n    setCovers(newArray);\n    return \"\"\n  };\n\n  const handleChangeForCheckBox = (e) => {\n    let newArray = [];\n\n    covers.map((item) => {\n      if (item.day === e.target.name) {\n        const newValue = !item.checkBox;\n        item.checkBox = newValue;\n        newArray.push(item);\n      } else {\n        newArray.push(item);\n      }\n      return \"\"\n    });\n\n    // console.log(\"newArray\",newArray);\n\n    setCovers(newArray);\n    return \"\"\n  };\n\n  const changePage = ({ selected }) => {\n    // console.log(\"selected\", selected)\n\n    // console.log(\"covers\",covers);\n\n    filterMenuItems(selected, \"cover-inputs\");\n  };\n\n  return (\n\n        <div className=\"inputs__container\">\n            <div className=\"inputs__row\">\n                <div className=\"inputs__column\">\n\n                  <div className=\"inputs__wrapperForLabels\">\n                      <div className=\"report-subtitle\">{selectedSiteValueID.replace(/[^A-Za-z]+/g, '').toLowerCase()}</div>\n                      <div className=\"section-title\">Input No. of Covers</div>\n                      <div className=\"applyBlueTuckGreen cooperHewittBold\">WEEK {date}</div>\n                    </div>\n                    <div className=\"inputs__wrapper\">\n\n                    <div className=\"inputs__labels\">\n                      {covers.map((data, i) => {\n                        return (\n                          <div className=\"applyBlueTuckGreen applyCooperHewittBold marginTop\" key={i}>{data.day}</div>\n                        )\n                      })}\n                    </div>\n\n                    <div className=\"col-sm-12\">\n                      <h3 className=\"applyBlueTuckGreen applyCooperHewittBold\">People /  Events</h3>\n                      <form onSubmit={handleSubmit(onSubmit)}>\n                        {covers.map((data, i) => {\n                          return (\n                              <div className=\"form-group\" key={i}>\n                                <input\n                                  className=\"form-control\"\n                                  type=\"number\"\n                                  id={i}\n                                  name={data.day}\n                                  onChange={handleChange}\n                                  // placeholder={data.value}\n                                  value={data.value}\n                                  required={data.require}\n                                  onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n                                />\n                                {/* <Checkbox {...label} /> */}\n                                <Checkbox checked={data.checkBox} value={data.checkBox} onChange={handleChangeForCheckBox} name={data.day} />\n                              </div>\n                          );\n                        })}\n\n                        <div className=\"button__wrapper\">\n                          <button className=\"btn btn-primary\" type=\"submit\">\n                            {isSubmitting ? \"Submitted\" : \"Submit\"}\n                          </button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n\n                </div>\n\n                <Pagination index={getCurrentWeek()} onPageChange={changePage} pageCount={pageCount} />\n\n            </div>\n        </div>\n  );\n}","import React, { useState, useEffect, useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nimport {\n  weeklyDateFormat,\n  getCurrentWeek\n} from \"../../../../helper\";\n\nimport { InputsContext } from \"../../../../contexts/inputs-context\";\n\nimport Pagination from \"./../reuseable-components/pagination/pagination.js\"\n\nexport default function SalesInputs(props) {\n\n  const {\n    selectedSiteValueID,\n    thisWeekSalesInputs,\n    sendDataToDatabase,\n    companyName,\n    companyID,\n    allWeekSalesInput,\n    filterMenuItems,\n   } = useContext(InputsContext);\n\n  const { handleSubmit } = useForm();\n\n  const defaultValues = [\n    {\n      day: \"Monday\",\n      value: 0,\n      require: false\n    },\n    {\n      day: \"Tuesday\",\n      value: 0,\n      require: false\n    },\n    {\n      day: \"Wednesday\",\n      value: 0,\n      require: false\n    },\n    {\n      day: \"Thursday\",\n      value: 0,\n      require: false\n    },\n    {\n      day: \"Friday\",\n      value: 0,\n      require: false\n    },\n    {\n      day: \"Saturday\",\n      value: 0,\n      require: false\n    },\n    {\n      day: \"Sunday\",\n      value: 0,\n      require: false\n    }\n  ]\n\n  const [sales, setSales] = useState(defaultValues);\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const [pageCount, setPageCount] = useState(7);\n  const [date, setDate] = useState(7);\n  const [firstDateOfTheWeek, setFirstDateOfTheWeek] = useState(7);\n  const [weekOfYear, setWeekOfYear] = useState(7);\n\n  useEffect(() => {\n\n      console.log(\"props\",props)\n\n      if (thisWeekSalesInputs !== undefined) {\n\n        // const pageIndex = getCurrentWeek()\n        // setIndex(pageIndex);\n        setFirstDateOfTheWeek(thisWeekSalesInputs.Date)\n        setWeekOfYear(thisWeekSalesInputs.weekOfYear)\n\n        const date = weeklyDateFormat(thisWeekSalesInputs.Date)\n        setDate(date)\n        setPageCount(allWeekSalesInput.length)\n\n        let newArray = [];\n        thisWeekSalesInputs.salesInput.map((data, index) => {\n          sales[index].value = data;\n          newArray.push(sales[index]);\n          return \"\"\n        });\n        setSales(newArray);\n      }\n\n      let numberOfDates;\n      let today = new Date().getDay();\n      if (today === 0) {\n        numberOfDates = 7;\n      } else {\n        numberOfDates = today;\n      }\n\n      for (let i = 0; i < numberOfDates; i++) {\n\n        if (sales[i].value === 0) {\n          sales[i].require = true;\n          setSales([...sales]);\n        } else {\n          sales[i].require = false;\n          setSales([...sales]);\n        }\n      }\n\n      setIsSubmitting(props.isSubmitting)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props, thisWeekSalesInputs]);\n\n  const onSubmit = () => {\n    setIsSubmitting(true)\n\n    // console.log(\"firstDateOfTheWeek\",firstDateOfTheWeek)\n    // console.log(\"weekOfYear\",weekOfYear)\n\n    const confirmedSales = sales.map((data) => {\n      return parseInt(data.value);\n    });\n\n    const params = {\n      companyId: companyID,\n      companyName: companyName,\n      siteName: selectedSiteValueID,\n      covers: confirmedSales,\n      firstDateOfTheWeek: firstDateOfTheWeek,\n      weekOfYear: weekOfYear\n    }\n\n    // console.log(\"params\",params)\n\n    sendDataToDatabase(\"SALES INPUTS\",params)\n\n    props.history.push('/dashboard');\n  };\n\n  const handleChange = (e) => {\n    let newArray = [];\n\n    sales.map((item) => {\n      if (item.day === e.target.name) {\n        item.value = e.target.value;\n        newArray.push(item);\n      } else {\n        newArray.push(item);\n      }\n      return \"\"\n    });\n\n    console.log(\"newArray\", newArray)\n\n    setSales(newArray);\n    return \"\"\n  };\n\n  const changePage = ({ selected }) => {\n    // console.log(\"selected\", selected)\n\n    console.log(\"sales\",sales);\n\n    filterMenuItems(selected, \"sales-inputs\");\n  };\n\n\n  return (\n      <>\n\n       <div className=\"inputs__container\">\n            <div className=\"inputs__row\">\n                <div className=\"inputs__column\">\n\n                <div className=\"inputs__wrapperForLabels\">\n                  <div className=\"report-subtitle\">{props.selectedSiteValueID.replace(/[^A-Za-z]+/g, '').toLowerCase()}</div>\n                  <div className=\"section-title\">Input Daily Sales Food</div>\n                  <div className=\"applyBlueTuckGreen cooperHewittBold\">WEEK {date}</div>\n                </div>\n                <div className=\"inputs__wrapper\">\n\n                <div className=\"inputs__labels\">\n                  {sales.map((data, i) => {\n                    return (\n                      <div className=\"applyBlueTuckGreen applyCooperHewittBold\" key={i}>{data.day}</div>\n                    )\n                  })}\n                </div>\n\n                  <div className=\"col-sm-12\">\n                    <h3 className=\"applyBlueTuckGreen applyCooperHewittBold\">Sales</h3>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      {sales.map((data, i) => {\n                        return (\n                          <div className=\"form-group\" key={i}>\n                            <input\n                              className=\"form-control\"\n                              type=\"number\"\n                              id={i}\n                              name={data.day}\n                              onChange={handleChange}\n                              // placeholder={data.value}\n                              value={data.value}\n                              required={data.require}\n                              onKeyDown={(evt) => [\"e\", \"E\", \"+\", \"-\"].includes(evt.key) && evt.preventDefault()}\n                            />\n                          </div>\n                        );\n                      })}\n\n                      <div className=\"button__wrapper\">\n                        <button className=\"btn btn-primary\" type=\"submit\">\n                          {isSubmitting ? \"Submitted\" : \"Submit\"}\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n                </div>\n                <Pagination index={getCurrentWeek()} onPageChange={changePage} pageCount={pageCount} />\n            </div>\n        </div>\n\n      </>\n  );\n}","import React, { useState, useEffect } from \"react\";\n\nimport { addCoverInput, addSalesInput } from \"../../../../api\";\n\nimport CoverInputs from \"./cover-inputs\";\nimport SalesInputs from \"./sales-inputs\";\n\n// import InputList from \"./inputs-list\";\n\n\nexport default function Input(props) {\n\n    const [ thisWeekCoverInputs, setThisWeekCoverInputs ] = useState({\n        coversInput: [0, 0, 0, 0, 0, 0, 0],\n        Date: \"\",\n        weekOfYear: \"\"\n    });\n\n    const [ selectedSiteValueID, setSelectedSiteValueID] = useState(\"\")\n\n    const [ thisWeekSalesInputs, setThisWeekSalesInputs ] = useState({\n        salesInput: [0, 0, 0, 0, 0, 0, 0],\n        Date: \"\",\n        weekOfYear: \"\"\n    });\n\n    useEffect(() => {\n        setThisWeekCoverInputs(props.thisWeekCoverInputs[0])\n        setThisWeekSalesInputs(props.thisWeekSalesInput[0])\n        setSelectedSiteValueID(props.selectedSiteValueID)\n                // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, []);\n\n    const sendDataToDatabase = (type, data) => {\n\n        // console.log(\"sendDataToDatabase\",data)\n\n        switch(type) {\n            case \"COVER INPUTS\":\n              addCoverInput(data).then(() => {\n                props.updateValues(\"COVER INPUTS\")\n              })\n              break;\n            case \"SALES INPUTS\":\n              addSalesInput(data).then(() => {\n                props.updateValues(\"SALES INPUTS\")\n              })\n              break;\n            default:\n        }\n    }\n\n    return (\n        <div className=\"inputs__container\">\n            <div className=\"inputs__row\">\n                <div className=\"inputs__column\">\n                    <CoverInputs\n                        thisWeekCoverInputs={thisWeekCoverInputs}\n                        selectedSiteValueID={selectedSiteValueID}\n                        sendDataToDatabase={sendDataToDatabase}\n                        companyID={props.companyID}\n                        companyName={props.companyName}\n                    />\n                </div>\n                <div className=\"inputs__column\">\n                    <SalesInputs\n                        thisWeekSalesInputs={thisWeekSalesInputs}\n                        selectedSiteValueID={selectedSiteValueID}\n                        sendDataToDatabase={sendDataToDatabase}\n                        companyID={props.companyID}\n                        companyName={props.companyName}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport { getAllCompaniesBack } from \"../../../api\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n// import FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2)\n    }\n}));\n\nexport default function CompanySelector(props) {\n\n    const classes = useStyles();\n    let [companiesNamesAndIDs, setCompaniesNamesAndIDs] = useState([]);\n\n    useEffect(() => {\n        getAllCompaniesBack().then((data) => {\n            let filteredData = [];\n            data.Items.map((company) => {\n                // console.log(\"company\", company.company);\n                // console.log(\"company id\", company.id);\n                filteredData.push({\n                    companyName: company.company,\n                    companyID: company.id\n                })\n                return \"\"\n            })\n\n            setCompaniesNamesAndIDs(filteredData)\n        })\n    }, [])\n\n    const handleChange = (event) => {\n        const input = event.target.value;\n        const fields = input.split('_');\n        const name = fields[0];\n        const id = fields[1];\n\n        // setCompanyName(name)\n        // setCompanyID(id)\n        // console.log(\"name\", name)\n        // console.log(\"id\", id)\n        load(name, id)\n    };\n\n    // console.log(\"companyName\", companyName)\n    // console.log(\"companyID\", companyID)\n\n    const load = (companyName, companyId) => {\n\n        let usersEmail = \"\"\n        let name = \"\"\n        let typeOfUser = \"superAdmin\"\n\n        const userDetails = {\n            companyname: companyName,\n            email: usersEmail,\n            fullName: name,\n            typeOfUser: typeOfUser\n        };\n\n        // console.log(\"userDetails\", userDetails)\n        // console.log(\"usersEmail\", usersEmail)\n        // console.log(\"name\", name)\n        // console.log(\"typeOfUser\", typeOfUser)\n        // console.log(\"props\", props)\n\n        props.saveUserType(typeOfUser)\n        props.getUserDetails(userDetails);\n        // props.getNoOfUsersCreated(noOfUsers);\n        props.userHasAuthenticated(true);\n        props.getAllData(companyName, usersEmail, userDetails, companyId);\n    }\n\n\n    return (\n        <div\n            style={{\n                paddingTop: \"15rem\",\n                margin: \"0 20rem\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                flexDirection: \"column\"\n            }}\n        >\n            <h2>Select a company you want to load on the dashboard & click submit:</h2>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Companies</InputLabel>\n\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    onChange={handleChange}\n                >\n                    <MenuItem value=\"\">\n                        <em>None</em>\n                    </MenuItem>\n                    {companiesNamesAndIDs.map((value) => {\n                        return (\n                            <MenuItem value={value.companyName + \"_\" + value.companyID}>{value.companyName}</MenuItem>\n                        )\n                    })}\n\n                </Select>\n\n\n            </FormControl>\n\n            <button>\n                <Link to=\"/\">\n                    <h3>submit</h3>\n                </Link>\n            </button>\n\n        </div >\n    )\n}\n\n","import React from \"react\";\nimport { Switch } from \"react-router-dom\";\n\nimport Login from \"./shared/components/containers/auth/login\";\nimport Signup from \"./shared/components/containers/auth/sign-up\";\nimport Forgotpassword from \"./shared/components/containers/auth/forgot-password\";\nimport SignUpSuperAdmin from \"./shared/components/containers/auth/sign-up-super-admin\";\n\nimport Dashboard from \"./shared/components/containers/dashboard\";\nimport PublicLiveFeed from \"./shared/components/containers/live-feeds/public-live-feed\";\nimport KitchenLiveFeed from \"./shared/components/containers/live-feeds/kitchen-live-feed\";\n\nimport AuthenticatedRoute from \"./shared/components/containers/auth/authenticated-route\";\nimport UnauthenticatedRoute from \"./shared/components/containers/auth/unauthenticated-route\";\n\nimport Settings from \"./shared/components/containers/targets/targets-calculator\";\nimport Capping from \"./shared/components/containers/capping/add-capping\";\n\nimport DailySalesVsWasteInputs from \"./shared/components/containers/user-inputs/daily-sales-vs-waste-inputs\";\nimport InputsList from \"./shared/components/containers/user-inputs/inputs-list\";\nimport Displays from \"./shared/components/containers/display-settings\";\n\nimport Inputs from \"./shared/components/containers/user-inputs/inputs\";\nimport coverInputs from \"./shared/components/containers/user-inputs/cover-inputs\";\nimport salesInputs from \"./shared/components/containers/user-inputs/sales-inputs\";\n\nimport CompanySelector from \"./shared/components/containers/company-selector\";\n\nexport default function Routes({ appProps }) {\n\n  return (\n    <Switch>\n\n      <UnauthenticatedRoute\n        path=\"/forgotpassword\"\n        exact\n        component={Forgotpassword}\n        appProps={appProps}\n      />\n\n      <AuthenticatedRoute\n        path=\"/dashboard\"\n        exact\n        component={Dashboard}\n        appProps={appProps}\n      />\n\n      <UnauthenticatedRoute\n        path=\"/\"\n        exact\n        component={Login}\n        appProps={appProps}\n      />\n\n      <UnauthenticatedRoute\n        // path=\"/publiclivefeed/:id\"\n        path=\"/publiclivefeed/:companyName/:id\"\n        exact\n        component={PublicLiveFeed}\n        appProps={appProps}\n      />\n\n      <AuthenticatedRoute\n        path=\"/kitchenlivefeed/:id\"\n        exact\n        component={KitchenLiveFeed}\n        appProps={appProps}\n      />\n\n      {appProps.userType === \"greenkodeUser\" ?\n        <AuthenticatedRoute\n          path=\"/signupsuperadmin\"\n          exact\n          component={SignUpSuperAdmin}\n          appProps={appProps}\n        /> : null}\n\n      {appProps.userType !== \"admin\" && appProps.userType !== \"user\" ?\n        <AuthenticatedRoute\n          path=\"/signup\"\n          exact\n          component={Signup}\n          appProps={appProps}\n        /> : null}\n\n      {appProps.userType !== \"user\" ?\n        <AuthenticatedRoute\n          path=\"/settings\"\n          exact\n          component={Settings}\n          appProps={appProps}\n        />\n        : null}\n\n      {appProps.userType !== \"user\" ?\n        <AuthenticatedRoute\n          path=\"/capping\"\n          exact\n          component={Capping}\n          appProps={appProps}\n        />\n        : null}\n\n      <AuthenticatedRoute\n        path=\"/inputs\"\n        exact\n        component={Inputs}\n        appProps={appProps}\n      />\n\n      <AuthenticatedRoute\n        path=\"/coverInputs\"\n        exact\n        component={coverInputs}\n        appProps={appProps}\n      />\n\n      <AuthenticatedRoute\n        path=\"/salesInputs\"\n        exact\n        component={salesInputs}\n        appProps={appProps}\n      />\n\n      <AuthenticatedRoute\n        path=\"/dailySalesVsWasteInputs\"\n        exact\n        component={DailySalesVsWasteInputs}\n        appProps={appProps}\n      />\n\n      <AuthenticatedRoute\n        path=\"/inputsList\"\n        exact\n        component={InputsList}\n        appProps={appProps}\n      />\n\n      <AuthenticatedRoute\n        path=\"/setDisplays\"\n        exact\n        component={Displays}\n        appProps={appProps}\n      />\n\n      <AuthenticatedRoute\n        path=\"/CompanySelector\"\n        exact\n        component={CompanySelector}\n        appProps={appProps}\n      />\n\n    </Switch>\n  );\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nconst SideDrawer = (props) => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>\n        {props.children}\n      </aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\n};\n\nexport default SideDrawer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Backdrop = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById(\"backdrop-hook\")\n  );\n};\n\nexport default Backdrop;\n","import React, { useState } from \"react\";\nimport SideDrawer from \"./side-drawer\";\nimport Backdrop from \"./back-drop\";\nimport Logo from \"../../../image/green_kode.svg\";\nimport { Auth } from \"aws-amplify\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  // setItemInLocalStorage,\n  calculateTodaysDate,\n  splitCamelCaseStringAndMakeFirstCharacterUpperCase\n} from \"../../../utilities.js\"\n\nconst MainNavigation = (props) => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n  const [appState, changeState] = useState({\n    activeObject: { id: 2, val: \"kilograms\", name: \"Kg\" },\n    objects: [\n      { id: 1, val: \"pounds\", name: \"£\" },\n      { id: 2, val: \"Kilograms\", name: \"Kg\" },\n    ],\n  });\n\n  function toggleActive(index) {\n    changeState({ ...appState, activeObject: appState.objects[index] });\n  }\n\n  function toggleActiveStyles(index) {\n    if (appState.objects[index].id === appState.activeObject.id) {\n      return \"active\";\n    } else {\n      return \"inactive\";\n    }\n  }\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  async function handleLogout() {\n    await Auth.signOut();\n    // localStorage.clear();\n    // window.sessionStorage.clear();\n    props.appProps.userHasAuthenticated(false);\n  }\n\n  const menu = (\n    <>\n      {\" \"}\n      {props.appProps.isAuthenticated ? (\n        <ul className=\"nav-links\">\n\n          <div className=\"menu\">\n\n            <div className=\"menu__poundsKgWrapper\">\n              <div className=\"menu__poundsKgTitle\">Industry Average (£2.775/Kg) converter:</div>\n              <div className=\"menu__poundsKgIcons\">\n                {appState.objects.map((data, index) => (\n                  <li\n                    className={toggleActiveStyles(index)}\n                    id={data.id}\n                    onClick={() => {\n                      toggleActive(index);\n                    }}\n                    key={index}\n                  >\n                    <div className=\"menu__icon\" className={toggleActiveStyles(index) === \"active\" ? \"makeBold\":\"dontMakeBold\"} id={data.val} onClick={props.appProps.kgPoundsConverter}>\n                      {data.name}\n                    </div>\n                  </li>\n                ))}\n              </div>\n            </div>\n\n            {/* <div className=\"displayOnMobile\">\n              <Link to=\"/settings\">Set Targets</Link>\n            </div> */}\n\n            <div>\n              <li>\n                <div className=\"logout-button\" onClick={handleLogout}>\n                  <div className=\"logout__menuName\">\n                    Logout\n                  </div>\n                </div>\n              </li>\n            </div>\n\n          </div>\n\n        </ul>\n      ) : (\n        <ul className=\"nav-links\">\n          <li>\n            <a href=\"https://greenkode.net/\">\n              <div>\n                Homepage\n              </div>\n            </a>\n          </li>\n        </ul>\n      )}\n    </>\n  );\n\n  return (\n    <>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">{menu}</nav>\n      </SideDrawer>\n      <header className=\"main-header\">\n        <button\n          className={props.showHamburgerButton ? \"main-navigation__menu-btn\" : \"displayNone\" }\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n\n        <div>\n\n          <Link to=\"/dashboard\">\n            <img className=\"company-logo\" src={Logo} alt=\"logo\" />\n          </Link>\n\n          {props.appProps.isAuthenticated &&\n          <div className=\"dashboard__overviewSites--positioning hideOnMobile\">\n            <div className=\"dashboard__date__user dashboard__userInformationWrapper cooperHewittBold\">\n                <div className=\"dashboard__userDateNameAndUserType cooperHewittBold\">\n                    {calculateTodaysDate()}\n                  <div className=\"dashboard__date__user__type cooperHewittBold\">\n                    {props.userDetail.typeOfUser}\n                  </div>\n                  <div className=\"dashboard__date__user__name cooperHewittBold\">\n                    Welcome back\n                    {\" \"}\n                    {props.userDetail.fullName}\n                  </div>\n                </div>\n              <div className=\"dashboard__companyName\">{splitCamelCaseStringAndMakeFirstCharacterUpperCase(props.userDetail.companyname)}</div>\n            </div>\n          </div>\n          }\n\n        </div>\n\n        <nav className=\"main-navigation__header-nav\"> {menu}</nav>\n      </header>\n    </>\n  );\n};\n\nexport default MainNavigation;\n","import React, { useState } from \"react\";\n\nimport {\n  updateUsersLoginTime,\n  getLoginTimeFromUsers\n} from \"../../../api\";\n\nconst UsersInformation = () => {\n\n  /// user related information\n  const [userType, setUserType] = React.useState(\"greenkodeUser\");\n  const [userDetail, setUserDetail] = useState(\"\");\n  const [noOfUsers, setNoOfUsers] = useState(0);\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const [superAdminCreatedUsers, setSuperAdminCreatedUsers] = React.useState([]);\n\n  const saveUserType = (data) => {\n    // setUserType(data[0])\n    setUserType(data)\n  }\n\n  let getUserDetails = (data) => {\n    // console.log(\"getUserDetails\",data)\n    setUserDetail(data);\n  };\n\n  const getNoOfUsersCreated = (noOfUsers) => {\n    //   console.log(\"noOfUsers\",noOfUsers)\n    let formatedIntoNumber = parseInt(noOfUsers)\n    setNoOfUsers(formatedIntoNumber)\n  }\n\n  const saveLoginTime = (userDetails, companyID) => {\n    const date = new Date();\n    const time = date.toLocaleString('en-GB', { timeZone: 'Europe/London' })\n    updateUsersLoginTime(userDetails, companyID, time)\n  }\n\n  const getTheLoginTimeFromUsers = (id, companyName) => {\n    getLoginTimeFromUsers(id, companyName).then((data) => {\n      setSuperAdminCreatedUsers(data[0].superAdminCreatedUsers)\n    })\n  }\n\n  return {\n    saveUserType,\n    getUserDetails,\n    getNoOfUsersCreated,\n\n    userType,\n    userDetail,\n    noOfUsers,\n\n    isAuthenticated,\n    userHasAuthenticated,\n\n    saveLoginTime,\n    getTheLoginTimeFromUsers,\n    superAdminCreatedUsers\n  }\n\n}\n\nexport default UsersInformation\n","import { useState } from \"react\";\n\nimport {\n\n} from \"../../../api\";\n\nimport {\n    setItemInLocalStorage,\n    getMonthAsAnumber,\n    getYearsArray,\n} from \"../../../utilities.js\"\n\nconst CompanyInformation = () => {\n\n    const [startDate, setStartDate] = useState(\"\");\n    const [companyID, setCompanyID] = useState(\"\");\n    const [selectedSiteValueID, setSelectedValueID] = useState(\"\");\n    const [companyName, setcompanyName] = useState(\"\");\n    const [siteName, setSiteName] = useState();\n    const [carbonMunicipalValue, setCarbonMunicipalValue] = useState();\n\n    const [yearlyArray, setYearlyArray] = useState([{\n        year: 0,\n        show: true\n    }]);\n\n    const [monthlyArr, setMonthArray] = useState([\n        {\n          month: \"JAN\",\n          index: 1,\n          show: false\n        },\n        {\n          month: \"FEB\",\n          index: 2,\n          show: false\n        },\n        {\n          month: \"MAR\",\n          index: 3,\n          show: false\n        },\n        {\n          month: \"APR\",\n          index: 4,\n          show: false\n        },\n        {\n          month: \"MAY\",\n          index: 5,\n          show: false\n        },\n        {\n          month: \"JUN\",\n          index: 6,\n          show: false\n        },\n        {\n          month: \"JUL\",\n          index: 7,\n          show: false\n        },\n        {\n          month: \"AUG\",\n          index: 8,\n          show: false\n        },\n        {\n          month: \"SEP\",\n          index: 9,\n          show: false\n        },\n        {\n          month: \"OCT\",\n          index: 10,\n          show: false\n        },\n        {\n          month: \"NOV\",\n          index: 11,\n          show: false\n        },\n        {\n          month: \"DEC\",\n          index: 12,\n          show: false\n        },\n    ]);\n\n    const getCurrentMonthlyAndYear = (startData) => {\n        // startData is YYYY-MM-DD\n        const yearlyArray = getYearsArray(startData);\n        const monthNumber = getMonthAsAnumber();\n        monthlyArr.map((data) => {\n          if (data.index === parseInt(monthNumber)) {\n            data.show = true;\n            return \"\"\n          } else {\n            data.show = false;\n            return \"\"\n          }\n\n        });\n        // console.log(\"monthlyArr\",monthlyArr)\n        setMonthArray(monthlyArr)\n        setYearlyArray(yearlyArray)\n\n        setItemInLocalStorage(\"yearlyArray\", yearlyArray);\n        setItemInLocalStorage(\"monthlyArr\", monthlyArr);\n    };\n\n    return {\n        startDate,\n        setStartDate,\n        companyID,\n        setCompanyID,\n        selectedSiteValueID,\n        setSelectedValueID,\n        companyName,\n        setcompanyName,\n        getCurrentMonthlyAndYear,\n        yearlyArray,\n        monthlyArr,\n        siteName,\n        setSiteName,\n        carbonMunicipalValue,\n        setCarbonMunicipalValue\n    }\n\n}\n\nexport default CompanyInformation","import { useState } from \"react\";\nimport useSpinner from \"./use-spinner\";\nimport moment from \"moment\";\n\nimport {\n  getWastePerCover,\n  getWastePerSales,\n  getMonthlyWastes,\n  getAllSitesData,\n  getWeeklyWaste,\n  getTargets,\n  getAiPredictionData,\n  getCapping,\n  getDailyAndWeeklyDatesData,\n  getCoverInput,\n  getSalesInput,\n} from \"../../../api\";\n\nimport {\n  setItemInLocalStorage,\n  convertDate,\n  wasteDailyDateRange\n} from \"../../../utilities.js\"\n\nconst useGetRequests = () => {\n\n    const [ spinner, showSpinner, hideSpinner ] = useSpinner();\n\n    //CALL WASTE PER COVER\n    const [wastePerCover, setWastePerCover] = useState([]);\n    const [searchError, setSearchError] = useState(null);\n    const [selectedYear, setSelectedYear] = useState(0);\n    const [selectedMonth, setSelectedMonth] = useState(0);\n\n    const callWastePerCover = (id, company, site, month , year) => {\n        getWastePerCover(id, company, site, month , year).then((data) => {\n          setSelectedYear(year)\n          hideSpinner()\n          console.log(\"data\",data)\n          setWastePerCover(data)\n          setSearchError(null)\n        }).catch((err) => {\n          hideSpinner()\n          setWastePerCover(null)\n          setSearchError(err.message)\n        })\n    };\n\n    //CALL WASTE PER SALES\n    const [wastePerSales, setWastePerSales] = useState([]);\n    const [searchErrorForWastePerSales, setSearchErrorForWastePerSales] = useState(null);\n    const [selectedYearForWastePerSales, setSelectedYearForWastePerSales] = useState(0);\n\n    const callWastePerSales = (id, company, site, month , year) => {\n      getWastePerSales(id, company, site, month , year).then((data) => {\n        setSelectedYearForWastePerSales(year)\n        hideSpinner()\n        console.log(\"data\",data)\n        setWastePerSales(data)\n        setSearchErrorForWastePerSales(null)\n      }).catch((err) => {\n        hideSpinner()\n        setWastePerSales(null)\n        setSearchErrorForWastePerSales(err.message)\n      })\n    };\n\n    //CALL MONTHLY WASTE\n    const [coverWasteInCurrentMonth, setCoverWasteInCurrentMonth] = useState(0);\n    const [preparationWasteInCurrentMonth, setPreparationWasteInCurrentMonth] = useState(0);\n    const [spoilageWasteInCurrentMonth, setSpoilageWasteInCurrentMonth] = useState(0);\n\n    const [currentMonthCoverWasteArray, setCurrentMonthCoverWasteArray] = useState(0);\n    const [currentMonthPrepWasteArray, setCurrentMonthPrepWasteArray] = useState(0);\n    const [currentMonthSpoilageWasteArray, setCurrentMonthSpoilageWasteArray] = useState(0);\n\n    const [coverMonthlyChanges, setCoverMonthlyChanges] = useState(0);\n    const [prepMonthlyChanges, setPrepMonthlyChanges] = useState(0);\n    const [spoilageMonthlyChanges, setSpoilageMonthlyChanges] = useState(0);\n    const [monthlyChanges, setMonthlyChanges] = useState([0]);\n\n    const callMonthlyWastesAPI = (companyNumber, companyName, siteID) => {\n      getMonthlyWastes(companyNumber, companyName, siteID).then((data) => {\n        setCoverWasteInCurrentMonth(data.coverWasteInCurrentMonth)\n        setPreparationWasteInCurrentMonth(data.preparationWasteInCurrentMonth)\n        setSpoilageWasteInCurrentMonth(data.spoilageWasteInCurrentMonth)\n\n        setCurrentMonthCoverWasteArray(data.currentMonthCoverWasteArray)\n        setCurrentMonthPrepWasteArray(data.currentMonthPrepWasteArray)\n        setCurrentMonthSpoilageWasteArray(data.currentMonthSpoilageWasteArray)\n\n        setCoverMonthlyChanges(data.coverMonthlyChanges)\n        setPrepMonthlyChanges(data.prepMonthlyChanges)\n        setSpoilageMonthlyChanges(data.spoilageMonthlyChanges)\n        setMonthlyChanges(data.monthlyChanges)\n      }).then(() => {\n        hideSpinner();\n      })\n    }\n\n    //CALL ALL SITES DATA\n    const [allSites, setAllSites] = useState([]);\n    const [totalWasteFromSelectedSite, setTotalWasteFromSelectedSite] = useState([]);\n\n    const getAllSites = (companyId, companyName, siteId) => {\n      getAllSitesData(companyId, companyName).then((data) => {\n\n        const selectedValue = data.filter((item) => {\n          return item.siteName === siteId;\n        });\n\n        setAllSites(data)\n        setTotalWasteFromSelectedSite(selectedValue)\n      })\n    }\n\n    // CALL WEEKLY WASTE API\n    const [weeklyWaste, setWeeklyWaste] = useState(null);\n    const [weeklyTrend, setWeeklyTrend] = useState(null);\n    const [weeklyWasteValuesForCurrentWeekAndLastWeek, setWeeklyWasteValuesForCurrentWeekAndLastWeek] = useState(null);\n\n    const callWeeklyWasteAPI = (companyId, companyName, companySite) => {\n      getWeeklyWaste(companyId, companyName, companySite).then((data) => {\n        setWeeklyWaste(data.currentWeeklyValues);\n        setWeeklyTrend(data.weeklyWasteTrend);\n\n        const weeklyWasteValuesForCurrentWeekAndLastWeekData = {\n          currentWeek: data.currentWeeklyValues,\n          lastWeek: data.lastWeekWasteValues\n        }\n\n        setWeeklyWasteValuesForCurrentWeekAndLastWeek(weeklyWasteValuesForCurrentWeekAndLastWeekData);\n\n      });\n    }\n\n    //TARGETS RECOMMENDATION\n    const [ recommendedTargets, setRecommendedTargets ] = useState([]);\n\n    const getTargetsData = (id, company, site) => {\n      getTargets(id, company, site).then((data) => {\n        // console.log(\"getTargets\",data.Items)\n        setRecommendedTargets(data.Items)\n      });\n    };\n\n    //AI PREDICTION\n    const [ aiPredictionsData, setAiPredictionsData ] = useState([]);\n    const getAiPrediction = (id, company, site) => {\n      getAiPredictionData(id, company, site).then((data) => {\n        setAiPredictionsData(data)\n      });\n    };\n\n    //CAPPING API\n    const [ cappingValue, setCappingValue ] = useState(0)\n    const callGetCappingAPI = (companyId, companyName, companySite) => {\n      getCapping(companyId, companyName, companySite).then((data) =>{\n        setCappingValue(data)\n      });\n    }\n\n    //daily and hourly\n    const [ dailyWaste, setDailyWaste ] = useState([]);\n    const [ hourlyWaste, sethourlyWaste ] = useState([]);\n\n    //mon-sun x-axis labels\n    const [ weeklyDailyLabels, setWeeklyDaysLabels ] = useState([]);\n\n    //date range e..g 12-19 July\n    const [ weeklyDailyRange, setWeeklyDaysRange ] = useState([]);\n\n    const callDailyAndWeeklyDatesData = (id, company, site, indexNumber) => {\n      getDailyAndWeeklyDatesData(id, company, site).then((data) => {\n\n\n        let formatedXaxis = convertDate(data.weeklyData);\n        let dateRangeLabel = wasteDailyDateRange(data.weeklyData);\n\n        setWeeklyDaysLabels(formatedXaxis);\n        setWeeklyDaysRange(dateRangeLabel)\n\n        setItemInLocalStorage(\"dailyChartXaxis\", data.weeklyData);\n        setItemInLocalStorage(\"formatedXaxis\", formatedXaxis);\n\n        setDailyWaste({\n          coverWaste: data.dailyCoverWasteArrayFormated,\n          prepWaste: data.dailyPrepWasteArrayFormated,\n          spoilageWaste: data.dailySpoilageWasteArrayFormated,\n          totalWaste: data.totalDailyWaste,\n          weeklyDates: data.weeklyData\n        })\n\n        const date = new Date();\n        const numberInDay = date.getDay();\n\n        let indexForNumberInDay = 0;\n\n        if (numberInDay === 0) {\n          indexForNumberInDay = 6\n        } else {\n          indexForNumberInDay = numberInDay - 1\n        }\n\n        // let index = indexNumber;\n        let index = indexNumber ? indexNumber: indexForNumberInDay\n\n        // console.log(\"indexForNumberInDay\",indexForNumberInDay)\n        // console.log(\"index\",index)\n\n        sethourlyWaste({\n          hourlyWaste: data.hourlyWastesWeeklyArray,\n          index: index,\n          date: data.weeklyData[indexForNumberInDay]\n        })\n      });\n    };\n\n    //call input for covers and sales\n    const [thisWeekCoverInputs, setThisWeekCoverInputs] = useState({\n      salesInput: [0, 0, 0, 0, 0, 0, 0],\n      Date: \"\",\n      weekOfYear: \"\"\n    });\n    const [thisWeekSalesInput, setThisWeekSalesInputs] = useState({\n      salesInput: [0, 0, 0, 0, 0, 0, 0],\n      Date: \"\",\n      weekOfYear: \"\"\n    });\n\n    const [allWeekSalesInput, setAllWeekSalesInputs] = useState([]);\n    const [allWeekCoverInput, setAllWeekCoverInputs] = useState([]);\n\n    const callCoverInput = (companyID, companyName, siteNameSelected) => {\n      getCoverInput(companyID, companyName, siteNameSelected).then((data) => {\n        const formatedDate = moment().format('MM-DD-YYYY');\n        const weeknumber = moment(formatedDate, \"MMDDYYYY\").isoWeek();\n        const getThisWeekCoverInput = data[0].weeklyCovers.filter((data) => {\n          return parseInt(data.weekOfYear) === weeknumber;\n        });\n\n        setAllWeekCoverInputs(data[0].weeklyCovers);\n\n        setThisWeekCoverInputs(getThisWeekCoverInput);\n      })\n    };\n\n    const callSalesInput = (companyID, companyName, siteNameSelected) => {\n      getSalesInput(companyID, companyName, siteNameSelected).then((data) => {\n        const formatedDate = moment().format('MM-DD-YYYY');\n        const weeknumber = moment(formatedDate, \"MMDDYYYY\").isoWeek();\n        const getThisWeekSalesInput = data[0].weeklySales.filter((data) => {\n          return parseInt(data.weekOfYear) === weeknumber;\n        });\n\n        setAllWeekSalesInputs(data[0].weeklySales);\n\n        setThisWeekSalesInputs(getThisWeekSalesInput);\n      })\n    }\n\n    //call get waste on a day of the week\n    // const [wasteOnAdayOfTheWeekData, setWasteOnAdayOfTheWeek] = useState([]);\n\n    // const getWasteOnAdayOfTheWeekAPI = (id, company, site, day, year) => {\n    //   getWasteOnAdayOfTheWeek(id, company, site, day, year).then((data) => {\n    //     setWasteOnAdayOfTheWeek(data)\n    //   });\n    // };\n\n    return {\n      //call input for covers and sales\n      callCoverInput,\n      callSalesInput,\n      thisWeekCoverInputs,\n      thisWeekSalesInput,\n      allWeekSalesInput,\n      allWeekCoverInput,\n\n      //daily and hourly\n      callDailyAndWeeklyDatesData,\n      dailyWaste,\n      hourlyWaste,\n\n      //CAPPING API\n      callGetCappingAPI,\n      cappingValue,\n\n      //AI PREDICTION\n      getAiPrediction,\n      aiPredictionsData,\n\n      //TARGETS RECOMMENDATION\n      getTargetsData,\n      recommendedTargets,\n\n      // CALL WEEKLY WASTE API\n      callWeeklyWasteAPI,\n      weeklyWaste,\n      weeklyTrend,\n\n      //MONTHLY WASTE\n      callMonthlyWastesAPI,\n      coverWasteInCurrentMonth,\n      preparationWasteInCurrentMonth,\n      spoilageWasteInCurrentMonth,\n      currentMonthCoverWasteArray,\n      currentMonthPrepWasteArray,\n      currentMonthSpoilageWasteArray,\n      coverMonthlyChanges,\n      prepMonthlyChanges,\n      spoilageMonthlyChanges,\n      monthlyChanges,\n\n      //WASTE PER COVER\n      callWastePerCover,\n      wastePerCover,\n\n      //WASTE PER SALES\n      callWastePerSales,\n      wastePerSales,\n      searchErrorForWastePerSales,\n      selectedYearForWastePerSales,\n\n      searchError,\n      setSearchError,\n\n      selectedYear,\n      setSelectedYear,\n      selectedMonth,\n      setSelectedMonth,\n\n      //CALL ALL SITES DATA\n      getAllSites,\n      allSites,\n      totalWasteFromSelectedSite,\n\n      spinner,\n      showSpinner,\n      hideSpinner,\n\n      // get waste on a dy of the week\n      // getWasteOnAdayOfTheWeekAPI,\n      // wasteOnAdayOfTheWeekData\n\n      //mon-sun x-axis labels\n      weeklyDailyLabels,\n      //date range e..g 12-19 July\n      weeklyDailyRange,\n\n      weeklyWasteValuesForCurrentWeekAndLastWeek\n    }\n\n}\n\nexport default useGetRequests","import { useState } from \"react\";\n\nconst KgPoundsConverter = () => {\n\n    const [showPounds, setShowPounds] = useState(false);\n\n    const kgPoundsConverter = (e) => {\n      const type = e.target.id;\n      if (type === \"Kilograms\") {\n        setShowPounds(false);\n      } else {\n        setShowPounds(true);\n      }\n    };\n\n\n    return {\n        showPounds,\n        setShowPounds,\n        kgPoundsConverter\n    }\n\n}\n\nexport default KgPoundsConverter","import React, { useState } from \"react\";\n\nimport Routes from \"./routes\";\nimport { withRouter } from \"react-router-dom\";\nimport MainNavigation from \"./shared/components/navigation/main-navigation\";\n\nimport { getMasterTableData } from \"./api\";\n\nimport {\n  getMonthAsAnumber,\n  getYear,\n} from \"./utilities\";\n\nimport UsersInformation from \"./shared/components/libs/use-user-information\";\nimport CompanyInformation from \"./shared/components/libs/use-company-information\";\nimport useGetRequests from \"./shared/components/libs/use-get-request\";\nimport KgPoundsConverter from \"./shared/components/libs/use-kg-pounds-converter\";\n\nimport WasteCapContextProvider from \"./contexts/waste-cap-context\";\nimport TotalWasteContextProvider from \"./contexts/total-waste-context\";\nimport MonthlyWasteContextProvider from \"./contexts/monthly-waste-context\";\nimport WeeklyWasteTrendProvider from \"./contexts/weekly-trends-context\";\nimport DailyWasteContextProvider from \"./contexts/daily-waste-context\";\nimport DashboardContextProvider from \"./contexts/dashboard-context\";\nimport WastePerCoverContextProvider from \"./contexts/waste-per-cover-context\";\nimport WastePerSalesContextProvider from \"./contexts/waste-per-sales-context\";\nimport WeeklyWasteContextProvider from \"./contexts/weekly-waste-context\";\nimport TargetContextProvider from \"./contexts/target-context\";\nimport HourlyFoodWasteContextProvider from \"./contexts/hourly-food-waste-context\";\nimport AiPredictionDataContextProvider from \"./contexts/ai-prediction-data-context\";\nimport WasteOnAdayOfTheWeekProvider from \"./contexts/waste-on-a-day-of-the-week-context\";\nimport InputsContextProvider from \"./contexts/inputs-context\";\n\nimport DailySalesVsWasteInputsProvider from \"./contexts/daily-sales-vs-waste-context\";\n\nfunction App() {\n\n  const [mySiteId, setMySiteId] = React.useState();\n\n  const {\n    saveUserType,\n    getUserDetails,\n    getNoOfUsersCreated,\n    userType,\n    userDetail,\n    noOfUsers,\n    isAuthenticated,\n    userHasAuthenticated,\n    saveLoginTime,\n    getTheLoginTimeFromUsers,\n    superAdminCreatedUsers\n  }\n  = UsersInformation()\n\n  const {\n    startDate,\n    setStartDate,\n    companyID,\n    setCompanyID,\n    selectedSiteValueID,\n    setSelectedValueID,\n    companyName,\n    setcompanyName,\n    getCurrentMonthlyAndYear,\n    yearlyArray,\n    monthlyArr,\n    siteName,\n    setSiteName,\n    carbonMunicipalValue,\n    setCarbonMunicipalValue\n  } = CompanyInformation()\n\n  const {\n    //call input for covers and sales\n    callCoverInput,\n    callSalesInput,\n    thisWeekCoverInputs,\n    thisWeekSalesInput,\n    allWeekSalesInput,\n    allWeekCoverInput,\n\n    //TARGETS RECOMMENDATION\n    getTargetsData,\n    recommendedTargets,\n\n    //WASTE PER COVER\n    callWastePerCover,\n    wastePerCover,\n\n    searchError,\n\n    selectedYear,\n    setSelectedYear,\n    selectedMonth,\n    setSelectedMonth,\n\n    spinner,\n    showSpinner,\n\n    //WASTE PER SALES\n    callWastePerSales,\n    wastePerSales,\n    searchErrorForWastePerSales,\n    selectedYearForWastePerSales,\n\n    //MONTHLY WASTE\n    callMonthlyWastesAPI,\n    coverWasteInCurrentMonth,\n    preparationWasteInCurrentMonth,\n    spoilageWasteInCurrentMonth,\n    currentMonthCoverWasteArray,\n    currentMonthPrepWasteArray,\n    currentMonthSpoilageWasteArray,\n    coverMonthlyChanges,\n    prepMonthlyChanges,\n    spoilageMonthlyChanges,\n    monthlyChanges,\n\n    //CALL ALL SITES DATA\n    getAllSites,\n    allSites,\n    totalWasteFromSelectedSite,\n\n    // CALL WEEKLY WASTE API\n    callWeeklyWasteAPI,\n    weeklyWaste,\n    weeklyTrend,\n\n    //AI PREDICTION\n    getAiPrediction,\n    aiPredictionsData,\n\n    //CAPPING API\n    callGetCappingAPI,\n    cappingValue,\n\n    //daily and hourly\n    callDailyAndWeeklyDatesData,\n    dailyWaste,\n    hourlyWaste,\n\n    //mon-sun x-axis labels\n    weeklyDailyLabels,\n    //date range e..g 12-19 July\n    weeklyDailyRange,\n\n    weeklyWasteValuesForCurrentWeekAndLastWeek\n  } = useGetRequests()\n\n  const {\n    showPounds,\n    kgPoundsConverter\n  } = KgPoundsConverter()\n\n  const [ showHamburgerButton, setShowHamburgerButton] = useState(false);\n\n  let [ updateGraph, setUpdateGraph ] = useState(0);\n\n  let [ index, setIndex ] = useState(0);\n  const changeIndex = (index) => {\n    setIndex(index)\n  }\n\n  //THE FUNCTION TRIGGERS WHEN SEARCHING THE DATA FROM A PARTICULAR MONTH OR YEAR\n  const handleSearch = (data, type) => {\n    const monthly = data.monthlyIndex\n    const yearly = data.yearlyIndex\n\n    switch(type) {\n      case \"wastePerCover\":\n        setSelectedMonth(monthly)\n        showSpinner()\n        callWastePerCover(companyID, companyName, selectedSiteValueID, monthly, yearly)\n        break;\n      case \"wastePerSales\":\n        setSelectedMonth(monthly)\n        showSpinner()\n        callWastePerSales(companyID, companyName, selectedSiteValueID, monthly, yearly)\n        break;\n      default:\n        // code block\n    }\n  }\n\n  //THE FUNCTION TRIGGERS WHEN THE FORMS ARE UPDATING\n  const updateValues = (type) => {\n\n    switch(type) {\n      case \"COVER INPUTS\":\n        callCoverInput(companyID, companyName, selectedSiteValueID)\n        callWastePerCover(companyID, companyName, selectedSiteValueID, selectedMonth, selectedYear);\n        break;\n      case \"SALES INPUTS\":\n        callSalesInput(companyID, companyName, selectedSiteValueID)\n        callWastePerSales(companyID, companyName, selectedSiteValueID, selectedMonth, selectedYear);\n        break;\n      case \"TARGETS\":\n        getTargetsData(companyID, companyName, selectedSiteValueID)\n        break;\n      case \"UPDATE GRAPH\":\n        setUpdateGraph(updateGraph + 1)\n        break;\n      default:\n        setUpdateGraph(true)\n        // code block\n    }\n  }\n\n  //THE FUNCTION TRIGGERS WHEN SWITCH TO A DIFFERENT SITE\n  const handleSiteIDchange = (event) => {\n    showSpinner()\n\n    const siteNameSelected = event.target.value\n    setMySiteId(siteNameSelected)\n    const siteName = siteNameSelected.replace(/[^A-Za-z]+/g, '').toLowerCase()\n\n    setSelectedValueID(siteNameSelected)\n    setSiteName(siteName)\n\n    const monthNumber = getMonthAsAnumber()\n    const year = getYear()\n\n    // console.log(\"siteNameSelected\",siteNameSelected)\n    // console.log(\"companyID\",companyID)\n    // console.log(\"companyName\",companyName)\n    // console.log(\"year\",year)\n    // console.log(\"monthNumber\",monthNumber)\n\n    getCurrentMonthlyAndYear(startDate)\n    callMonthlyWastesAPI(companyID, companyName, siteNameSelected)\n    callWeeklyWasteAPI(companyID, companyName, siteNameSelected)\n    callWastePerCover(companyID, companyName, siteNameSelected, monthNumber , year)\n    callWastePerSales(companyID, companyName, siteNameSelected, monthNumber , year)\n    callCoverInput(companyID, companyName, siteNameSelected)\n    callSalesInput(companyID, companyName, siteNameSelected)\n    callGetCappingAPI(companyID, companyName, siteNameSelected)\n    getAllSites(companyID, companyName, siteNameSelected)\n    callDailyAndWeeklyDatesData(companyID, companyName, siteNameSelected)\n    getTargetsData(companyID, companyName, siteNameSelected)\n    getAiPrediction(companyID, companyName, siteNameSelected);\n  }\n\n\n  //THE FUNCTION TRIGGERS WHEN USER LOGIN\n  const getAllData = (companyName, email, userDetails, companyId) => {\n\n    showSpinner()\n\n    let response;\n\n    getMasterTableData(companyName, companyId)\n      .then((res) => {\n\n        response = res\n\n        const companyId = response.companyId;\n        const allSites = response.sites;\n        const startDate = response.startDate;\n        const carbonMunicipalValue = response.carbonMunicipalValue;\n\n        // console.log(\"companyId\", companyId)\n        // console.log(\"allSites\", allSites)\n\n        //save user information\n        saveLoginTime(userDetails, companyId);\n        getTheLoginTimeFromUsers(companyId, companyName);\n\n        //save company information\n        setStartDate(startDate);\n        setCompanyID(companyId);\n        setcompanyName(companyName);\n\n        setCarbonMunicipalValue(carbonMunicipalValue);\n\n        const sitesID = Object.entries(allSites).map(([attribute, item]) => {\n          return attribute;\n        }).reverse();\n        setMySiteId(sitesID[0]);\n\n        //You need to change sitesID[1] back to sitesID[0] because it will break there is only one site\n        setSelectedValueID(sitesID[0])\n\n        const currentMonthNumber = getMonthAsAnumber()\n        setSelectedMonth(currentMonthNumber)\n        const currentYear = getYear()\n        setSelectedYear(currentYear)\n\n        callWastePerCover(companyId, companyName, sitesID[0], currentMonthNumber, currentYear);\n        callWastePerSales(companyId, companyName, sitesID[0], currentMonthNumber, currentYear);\n\n        callMonthlyWastesAPI(companyId, companyName, sitesID[0]);\n        getAllSites(companyId, companyName, sitesID[0]);\n        callWeeklyWasteAPI(companyId, companyName, sitesID[0]);\n        getTargetsData(companyId, companyName, sitesID[0])\n        getAiPrediction(companyId, companyName, sitesID[0]);\n        callGetCappingAPI(companyId, companyName, sitesID[0]);\n\n        const date = new Date();\n        const numberInDay = date.getDay();\n        const indexForNumberInDay = numberInDay === 0 ? 6 : numberInDay - 1\n        callDailyAndWeeklyDatesData(companyId, companyName, sitesID[0], indexForNumberInDay);\n\n        //get data for the form\n        callCoverInput(companyId, companyName, sitesID[0]);\n        callSalesInput(companyId, companyName, sitesID[0]);\n\n        //get waste on a day of the week\n        // getWasteOnAdayOfTheWeekAPI(companyId, companyName, sitesID[0], 0, currentYear)\n\n        getCurrentMonthlyAndYear(response.startDate)\n\n        setShowHamburgerButton(true)\n\n      }).catch((error) => {\n        console.log(\"error from master table\", error);\n      })\n  };\n  return (\n    <>\n      {spinner}\n      <div className=\"App\">\n\n          <InputsContextProvider\n            companyId={companyID}\n            companyName={companyName}\n            selectedSiteValueID={selectedSiteValueID}\n            thisWeekCoverInputs={thisWeekCoverInputs}\n            thisWeekSalesInput={thisWeekSalesInput}\n            updateValues={updateValues}\n            allWeekSalesInput={allWeekSalesInput}\n            allWeekCoverInput={allWeekCoverInput}\n          >\n\n          <DailySalesVsWasteInputsProvider\n            siteName={mySiteId}\n            companyId={companyID}\n            companyName={companyName}\n            updateGraph={updateGraph}\n            // weeklyDailyRange={weeklyDailyRange}\n          >\n\n          <WasteOnAdayOfTheWeekProvider\n            siteName={mySiteId}\n            companyId={companyID}\n            companyName={companyName}\n            totalWasteFromSelectedSite={totalWasteFromSelectedSite}\n            startDate={startDate}\n          >\n\n          <TargetContextProvider\n            aiPredictionsData={aiPredictionsData}\n            recommendedTargets={recommendedTargets}\n            currentMonthCoverWasteArray={currentMonthCoverWasteArray}\n            currentMonthPrepWasteArray={currentMonthPrepWasteArray}\n            currentMonthSpoilageWasteArray={currentMonthSpoilageWasteArray}\n            carbonMunicipalValue={carbonMunicipalValue}\n          >\n\n          <WasteCapContextProvider\n            companyName={companyName}\n            selectedSiteValueID={selectedSiteValueID}\n            companyID={companyID}\n            cappingValue={cappingValue}\n            showPounds={showPounds}\n          >\n\n          <MainNavigation\n            appProps={{\n              isAuthenticated,\n              userHasAuthenticated,\n              kgPoundsConverter,\n            }}\n            userDetail={userDetail}\n            showHamburgerButton={showHamburgerButton}\n          />\n\n          <TotalWasteContextProvider\n            siteName={siteName}\n            // totalWasteFromSite={totalWasteFromSite}\n            allSites={allSites}\n            totalWasteFromSelectedSite={totalWasteFromSelectedSite}\n          >\n\n          <WastePerCoverContextProvider\n            startDate={startDate}\n            handleSearch={handleSearch}\n            monthlyArray={monthlyArr}\n            yearlyArray={yearlyArray}\n            wastePerCover={wastePerCover}\n            searchError={searchError}\n            selectedYear={selectedYear}\n            companyId={companyID}\n            companyName={companyName}\n          >\n\n          <WastePerSalesContextProvider\n            siteName={mySiteId}\n            wastePerSales={wastePerSales}\n            monthlyArray={monthlyArr}\n            yearlyArray={yearlyArray}\n            handleSearch={handleSearch}\n            searchErrorForWastePerSales={searchErrorForWastePerSales}\n            selectedYearForWastePerSales={selectedYearForWastePerSales}\n          >\n\n          <DashboardContextProvider\n            // monthlySelectedValue={monthlySelectedValue}\n            // selectedValue={selectedValue}\n            siteName={siteName}\n            companyName={companyName}\n            sites={allSites}\n            // handleMonthlyValues={handleMonthlyValues}\n            // displayMonthlyValue={displayMonthlyValue}\n            // allMonthlyData={allMonthlyData}\n            // monthlyChartMaxValue={monthlyChartMaxValue}\n            // monthlyChangesValue={monthlyChangesValue}\n            startDate={startDate}\n            showPounds={showPounds}\n            // userEmail={userEmail}\n            // adminType={adminType}\n            // totalMonthlyWaste={totalMonthlyWaste}\n            // clickOnMonthlyBarChart={clickOnMonthlyBarChart}\n            changeIndex={changeIndex}\n            userType={userType}\n            userDetail={userDetail}\n            // sitesID={sitesID}\n            handleSiteIDchange={handleSiteIDchange}\n            selectedSiteValueID={selectedSiteValueID}\n            companyID={companyID}\n            thisWeekCoverInputs={thisWeekCoverInputs}\n\n            weeklyDailyLabels={weeklyDailyLabels}\n            weeklyDailyRange={weeklyDailyRange}\n          >\n\n          <AiPredictionDataContextProvider\n            companyName={companyName}\n            siteName={siteName}\n            aiPredictionsData={aiPredictionsData}\n          >\n\n          <HourlyFoodWasteContextProvider\n            companyName={companyName}\n            index={index}\n            hourlyWaste={hourlyWaste}\n          >\n\n          <DailyWasteContextProvider\n            siteName={siteName}\n            // siteChange={siteChange}\n            // dailyWasteData={dailyWasteData}\n            // dailyCoverWaste={dailyCoverWaste}\n            // dailyPreparationWaste={dailyPreparationWaste}\n            // dailySpoilageWaste={dailySpoilageWaste}\n            // weeklyDailyWaste={weeklyDailyWaste}\n            showPounds={showPounds}\n            dailyWaste={dailyWaste}\n          >\n\n          <WeeklyWasteTrendProvider\n            companyName={companyName}\n            siteName={siteName}\n            weeklyWasteValuesForCurrentWeekAndLastWeek={weeklyWasteValuesForCurrentWeekAndLastWeek}\n            weeklyTrend={weeklyTrend}\n          >\n\n          <WeeklyWasteContextProvider\n            weeklyWaste={weeklyWaste}\n            siteName={siteName}\n          >\n\n          <MonthlyWasteContextProvider\n            companyName={companyName}\n            siteName={siteName}\n            companyID={companyID}\n            // selectedSiteID={selectedSiteID}\n\n            coverWasteInCurrentMonth={coverWasteInCurrentMonth}\n            preparationWasteInCurrentMonth={preparationWasteInCurrentMonth}\n            spoilageWasteInCurrentMonth={spoilageWasteInCurrentMonth}\n\n            currentMonthCoverWasteArray={currentMonthCoverWasteArray}\n            currentMonthPrepWasteArray={currentMonthPrepWasteArray}\n            currentMonthSpoilageWasteArray={currentMonthSpoilageWasteArray}\n\n            coverMonthlyChanges={coverMonthlyChanges}\n            prepMonthlyChanges={prepMonthlyChanges}\n            spoilageMonthlyChanges={spoilageMonthlyChanges}\n            monthlyChanges={monthlyChanges}\n          >\n\n          <Routes\n            appProps={{\n              siteName,\n              getUserDetails,\n              isAuthenticated,\n              userHasAuthenticated,\n              getAllData,\n              saveUserType,\n              companyName,\n              userType,\n              getNoOfUsersCreated,\n              noOfUsers,\n              userDetail,\n              companyID,\n              superAdminCreatedUsers,\n              selectedSiteValueID,\n              thisWeekCoverInputs,\n              thisWeekSalesInput,\n              // updateValues,\n              callGetCappingAPI,\n              recommendedTargets,\n              updateValues,\n              startDate,\n              carbonMunicipalValue\n            }}\n          />\n\n          </MonthlyWasteContextProvider>\n\n          </WeeklyWasteContextProvider>\n\n          </WeeklyWasteTrendProvider>\n\n          </DailyWasteContextProvider>\n\n          </HourlyFoodWasteContextProvider>\n\n          </AiPredictionDataContextProvider>\n\n          </DashboardContextProvider>\n\n          </WastePerSalesContextProvider>\n\n          </WastePerCoverContextProvider>\n\n          </TotalWasteContextProvider>\n\n          </WasteCapContextProvider>\n\n          </TargetContextProvider>\n\n          </WasteOnAdayOfTheWeekProvider>\n\n          </DailySalesVsWasteInputsProvider>\n\n          </InputsContextProvider>\n      </div>\n    </>\n  );\n}\n\nexport default withRouter(App);\n","export default {\n  s3: {\n    REGION: \"us-east-1\",\n    BUCKET: \"waste-app-uploads\",\n  },\n  apiGateway: {\n    REGION: \"us-east-1\",\n    // URL: \"https://3ld0qgj1x7.execute-api.us-east-1.amazonaws.com/dev\",\n    URL: \"https://oqt9f6jn82.execute-api.us-east-1.amazonaws.com/prod\",\n  },\n  cognito: {\n    REGION: \"us-east-1\",\n    USER_POOL_ID: \"us-east-1_LYyDatvKz\",\n    APP_CLIENT_ID: \"31ve7mhg5rpojau8glsoon6mis\",\n    IDENTITY_POOL_ID: \"us-east-1:792a1c62-e2ae-418b-aba3-ac7a96a6318e\",\n\n    //TESTING:\n    // REGION: \"us-east-1\",\n    // USER_POOL_ID: \"us-east-1_RE9ZsMXPl\",\n    // APP_CLIENT_ID: \"2isajtmdjfp3fphk4961s9qa1m\",\n    // IDENTITY_POOL_ID: \"us-east-1:fe85cf22-6563-499e-a734-5ae23be5b528\",\n\n  },\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles/style.css\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nimport App from \"./app\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport config from \"./config\";\nimport Amplify from \"aws-amplify\";\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID,\n  },\n  Storage: {\n    region: config.s3.REGION,\n    bucket: config.s3.BUCKET,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\n  },\n  API: {\n    endpoints: [\n      {\n        name: \"wastes\",\n        endpoint: config.apiGateway.URL,\n        region: config.apiGateway.REGION,\n      },\n    ],\n  },\n});\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}